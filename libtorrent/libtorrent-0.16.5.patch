diff -ruN libtorrent-libtorrent_0_16_5/autotool.sh libtorrent/autotool.sh
--- libtorrent-libtorrent_0_16_5/autotool.sh	2012-10-23 12:23:09.000000000 +0800
+++ libtorrent/autotool.sh	1970-01-01 08:00:00.000000000 +0800
@@ -1,176 +0,0 @@
-#!/bin/sh
-
-# Using this script should be identical to the resulto of "autoreconf -fi".
-# Some code taken from the gnome macros/autogen.sh scripts.
-
-# $Id$
-
-
-###############################################################################
-# utility functions
-###############################################################################
-
-# Not all echo versions allow -n, so we check what is possible. This test is
-# based on the one in autoconf.
-ECHO_C=
-ECHO_N=
-case `echo -n x` in
--n*)
-  case `echo 'x\c'` in
-  *c*) ;;
-  *)   ECHO_C='\c';;
-  esac;;
-*)
-  ECHO_N='-n';;
-esac
-
-# some terminal codes ...
-boldface="`tput bold 2>/dev/null`"
-normal="`tput sgr0 2>/dev/null`"
-
-printbold() {
-  echo $ECHO_N "$boldface" $ECHO_C
-  echo "$@"
-  echo $ECHO_N "$normal" $ECHO_C
-}
-
-printerr() {
-  echo "$@" >&2
-}
-
-# Usage:
-#     compare_versions MIN_VERSION ACTUAL_VERSION
-# returns true if ACTUAL_VERSION >= MIN_VERSION
-compare_versions() {
-  ch_min_version=$1
-  ch_actual_version=$2
-  ch_status=0
-  IFS="${IFS=         }"; ch_save_IFS="$IFS"; IFS="."
-  set $ch_actual_version
-  for ch_min in $ch_min_version; do
-    ch_cur=`echo $1 | sed 's/[^0-9].*$//'`; shift # remove letter suffixes
-    if [ -z "$ch_min" ]; then break; fi
-    if [ -z "$ch_cur" ]; then ch_status=1; break; fi
-    if [ $ch_cur -gt $ch_min ]; then break; fi
-    if [ $ch_cur -lt $ch_min ]; then ch_status=1; break; fi
-  done
-  IFS="$ch_save_IFS"
-  return $ch_status
-}
-
-# Usage:
-#     version_check PACKAGE VARIABLE CHECKPROGS MIN_VERSION
-# checks to see if the package is available
-version_check() {
-  vc_package=$1
-  vc_variable=$2
-  vc_checkprogs=$3
-  vc_min_version=$4
-  vc_status=1
-
-  vc_checkprog=`eval echo "\\$$vc_variable"`
-  if [ -n "$vc_checkprog" ]; then
-	  printbold "Using $vc_checkprog for $vc_package"
-  	return 0
-  fi
-
-  vc_comparator=">="
-
-  printbold "Checking for $vc_package $vc_comparator $vc_min_version..."
-
-  for vc_checkprog in $vc_checkprogs; do
-	  echo $ECHO_N "  testing $vc_checkprog... " $ECHO_C
-    	if $vc_checkprog --version < /dev/null > /dev/null 2>&1; then
-	      vc_actual_version=`$vc_checkprog --version | head -n 1 | \
-                            sed 's/^.*[ 	]\([0-9.]*[a-z]*\).*$/\1/'`
-	      if compare_versions $vc_min_version $vc_actual_version; then
-		      echo "found $vc_actual_version"
-		      # set variables
-      		eval "$vc_variable=$vc_checkprog; \
-			          ${vc_variable}_VERSION=$vc_actual_version"
-       		vc_status=0
-      		break
-	      else
-    	  	echo "too old (found version $vc_actual_version)"
-	      fi
-    	else
-	      echo "not found."
-     	fi
-  done
-
-  if [ "$vc_status" != 0 ]; then
-	  printerr "***Error***: $vc_package $vc_comparator $vc_min_version not found."
-  fi
- 
-  return $vc_status
-}
-
-###############################################################################
-# main section
-###############################################################################
-
-configure_ac="configure.ac"
-
-(test -f $configure_ac && test -f src/torrent.cpp) || {
-  printerr "***Error***: Run this script from the top-level source directory."
-  exit 1
-}
-
-echo
-printbold "Bootstrapping autotools for libtorrent-rasterbar"
-echo
-
-REQUIRED_AUTOCONF_VERSION=`cat $configure_ac | grep '^AC_PREREQ' |
-sed -n -e 's/AC_PREREQ(\([^()]*\))/\1/p' | sed -e 's/^\[\(.*\)\]$/\1/' | sed -e 1q`
-
-REQUIRED_AUTOMAKE_VERSION=`cat configure.ac | grep '^AM_INIT_AUTOMAKE' |
-sed -n -e 's/AM_INIT_AUTOMAKE(\([^()]*\))/\1/p' | sed -e 's/^\[\(.*\)\]$/\1/' | sed -e 's/\(.*\) .*/\1/' | sed -e 1q`
-
-REQUIRED_LIBTOOL_VERSION=`cat $configure_ac | grep '^LT_PREREQ' |
-sed -n -e 's/LT_PREREQ(\([^()]*\))/\1/p' | sed -e 's/^\[\(.*\)\]$/\1/' | sed -e 1q`
-
-printbold "Checking autotools requirements:"
-echo
-
-version_check autoconf AUTOCONF 'autoconf autoconf2.59 autoconf-2.53 autoconf2.50' $REQUIRED_AUTOCONF_VERSION || exit 1
-AUTOHEADER=`echo $AUTOCONF | sed s/autoconf/autoheader/`
-
-version_check automake AUTOMAKE "automake automake-1.11 automake-1.10" $REQUIRED_AUTOMAKE_VERSION || exit 1
-ACLOCAL=`echo $AUTOMAKE | sed s/automake/aclocal/`
-
-version_check libtool LIBTOOLIZE "libtoolize glibtoolize" $REQUIRED_LIBTOOL_VERSION || exit 1
-
-echo
-printbold "Processing $configure_ac"
-echo
-
-if grep "^A[CM]_PROG_LIBTOOL" $configure_ac >/dev/null ||
-    grep "^LT_INIT" $configure_ac >/dev/null; then
-  printbold "Running $LIBTOOLIZE..."
-  $LIBTOOLIZE --force --copy || exit 1
-fi
-
-m4dir=`cat $configure_ac | grep '^AC_CONFIG_MACRO_DIR' |
-sed -n -e 's/AC_CONFIG_MACRO_DIR(\([^()]*\))/\1/p' | sed -e 's/^\[\(.*\)\]$/\1/' | sed -e 1q`
-if [ -n "$m4dir" ]; then
-  m4dir="-I $m4dir"
-fi
-printbold "Running $ACLOCAL..."
-$ACLOCAL $m4dir || exit 1
-
-printbold "Running $AUTOCONF..."
-$AUTOCONF || exit 1
-if grep "^A[CM]_CONFIG_HEADER" $configure_ac >/dev/null; then
-  printbold "Running $AUTOHEADER..."
-	$AUTOHEADER || exit 1
-  # this prevents automake from thinking config.h.in is out of
-  # date, since autoheader doesn't touch the file if it doesn't
-  # change.
-  test -f config.h.in && touch config.h.in
-fi
-
-printbold "Running $AUTOMAKE..."
-$AUTOMAKE --gnu --add-missing --force --copy || exit 1
-
-echo
-printbold "Bootstrap complete, now run \`configure'."
diff -ruN libtorrent-libtorrent_0_16_5/bindings/c/Jamfile libtorrent/bindings/c/Jamfile
--- libtorrent-libtorrent_0_16_5/bindings/c/Jamfile	2012-10-23 12:23:09.000000000 +0800
+++ libtorrent/bindings/c/Jamfile	1970-01-01 08:00:00.000000000 +0800
@@ -1,38 +0,0 @@
-use-project /torrent : ../.. ;
-
-rule libtorrent_linking ( properties * )
-{
-    local result ;
-
-    if <toolset>gcc in $(properties) && <link>shared in $(properties)
-    {
-        result += <fpic>on ;
-    }
-
-#    if <toolset>gcc in $(properties) || <toolset>darwin in $(properties)
-#    {
-#        result += <visibility>hidden ;
-#    }
-
-    return $(result) ;
-}
-
-lib torrentc
-
-    : # sources
-	 library.cpp
-
-	 : # requirements
-    <conditional>@libtorrent_linking
-    <library>/torrent//torrent/<link>static
-	 <include>.
-
-	 : # default build
-	 <link>static
-
-	 : # usage-requirements
-	 <include>.
-;
-
-exe simple_client : simple_client.c torrentc ;
-
diff -ruN libtorrent-libtorrent_0_16_5/bindings/c/library.cpp libtorrent/bindings/c/library.cpp
--- libtorrent-libtorrent_0_16_5/bindings/c/library.cpp	2012-10-23 12:23:09.000000000 +0800
+++ libtorrent/bindings/c/library.cpp	1970-01-01 08:00:00.000000000 +0800
@@ -1,606 +0,0 @@
-/*
-
-Copyright (c) 2009, Arvid Norberg
-All rights reserved.
-
-Redistribution and use in source and binary forms, with or without
-modification, are permitted provided that the following conditions
-are met:
-
-    * Redistributions of source code must retain the above copyright
-      notice, this list of conditions and the following disclaimer.
-    * Redistributions in binary form must reproduce the above copyright
-      notice, this list of conditions and the following disclaimer in
-      the documentation and/or other materials provided with the distribution.
-    * Neither the name of the author nor the names of its
-      contributors may be used to endorse or promote products derived
-      from this software without specific prior written permission.
-
-THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
-AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
-LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
-CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
-SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
-INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
-CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
-ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
-POSSIBILITY OF SUCH DAMAGE.
-
-*/
-
-#include "libtorrent/session.hpp"
-#include "libtorrent/magnet_uri.hpp"
-#include "libtorrent/torrent_handle.hpp"
-#include <boost/bind.hpp>
-
-#include <libtorrent.h>
-
-namespace
-{
-	std::vector<libtorrent::torrent_handle> handles;
-
-	int find_handle(libtorrent::torrent_handle h)
-	{
-		std::vector<libtorrent::torrent_handle>::const_iterator i
-			= std::find(handles.begin(), handles.end(), h);
-		if (i == handles.end()) return -1;
-		return i - handles.begin();
-	}
-
-	libtorrent::torrent_handle get_handle(int i)
-	{
-		if (i < 0 || i >= int(handles.size())) return libtorrent::torrent_handle();
-		return handles[i];
-	}
-
-	int add_handle(libtorrent::torrent_handle const& h)
-	{
-		std::vector<libtorrent::torrent_handle>::iterator i = std::find_if(handles.begin()
-			, handles.end(), !boost::bind(&libtorrent::torrent_handle::is_valid, _1));
-		if (i != handles.end())
-		{
-			*i = h;
-			return i - handles.begin();
-		}
-
-		handles.push_back(h);
-		return handles.size() - 1;
-	}
-
-	int set_int_value(void* dst, int* size, int val)
-	{
-		if (*size < sizeof(int)) return -2;
-		*((int*)dst) = val;
-		*size = sizeof(int);
-		return 0;
-	}
-
-	void copy_proxy_setting(libtorrent::proxy_settings* s, proxy_setting const* ps)
-	{
-		s->hostname.assign(ps->hostname);
-		s->port = ps->port;
-		s->username.assign(ps->username);
-		s->password.assign(ps->password);
-		s->type = (libtorrent::proxy_settings::proxy_type)ps->type;
-	}
-}
-
-extern "C"
-{
-
-TORRENT_EXPORT void* session_create(int tag, ...)
-{
-	using namespace libtorrent;
-
-	va_list lp;
-	va_start(lp, tag);
-
-	fingerprint fing("LT", LIBTORRENT_VERSION_MAJOR, LIBTORRENT_VERSION_MINOR, 0, 0);
-	std::pair<int, int> listen_range(-1, -1);
-	char const* listen_interface = "0.0.0.0";
-	int flags = session::start_default_features | session::add_default_plugins;
-	int alert_mask = alert::error_notification;
-
-	while (tag != TAG_END)
-	{
-		switch (tag)
-		{
-			case SES_FINGERPRINT:
-			{
-				char const* f = va_arg(lp, char const*);
-				fing.name[0] = f[0];
-				fing.name[1] = f[1];
-				break;
-			}
-			case SES_LISTENPORT:
-				listen_range.first = va_arg(lp, int);
-				break;
-			case SES_LISTENPORT_END:
-				listen_range.second = va_arg(lp, int);
-				break;
-			case SES_VERSION_MAJOR:
-				fing.major_version = va_arg(lp, int);
-				break;
-			case SES_VERSION_MINOR:
-				fing.minor_version = va_arg(lp, int);
-				break;
-			case SES_VERSION_TINY:
-				fing.revision_version = va_arg(lp, int);
-				break;
-			case SES_VERSION_TAG:
-				fing.tag_version = va_arg(lp, int);
-				break;
-			case SES_FLAGS:
-				flags = va_arg(lp, int);
-				break;
-			case SES_ALERT_MASK:
-				alert_mask = va_arg(lp, int);
-				break;
-			case SES_LISTEN_INTERFACE:
-				listen_interface = va_arg(lp, char const*);
-				break;
-			default:
-				// skip unknown tags
-				va_arg(lp, void*);
-				break;
-		}
-
-		tag = va_arg(lp, int);
-	}
-
-	if (listen_range.first != -1 && (listen_range.second == -1
-		|| listen_range.second < listen_range.first))
-		listen_range.second = listen_range.first;
-
-	return new (std::nothrow) session(fing, listen_range, listen_interface, flags, alert_mask);
-}
-
-TORRENT_EXPORT void session_close(void* ses)
-{
-	delete (libtorrent::session*)ses;
-}
-
-TORRENT_EXPORT int session_add_torrent(void* ses, int tag, ...)
-{
-	using namespace libtorrent;
-
-	va_list lp;
-	va_start(lp, tag);
-	session* s = (session*)ses;
-	add_torrent_params params;
-
-	char const* torrent_data = 0;
-	int torrent_size = 0;
-
-	char const* resume_data = 0;
-	int resume_size = 0;
-
-	char const* magnet_url = 0;
-
-	error_code ec;
-
-	while (tag != TAG_END)
-	{
-		switch (tag)
-		{
-			case TOR_FILENAME:
-				params.ti = new (std::nothrow) torrent_info(va_arg(lp, char const*), ec);
-				break;
-			case TOR_TORRENT:
-				torrent_data = va_arg(lp, char const*);
-				break;
-			case TOR_TORRENT_SIZE:
-				torrent_size = va_arg(lp, int);
-				break;
-			case TOR_INFOHASH:
-				params.ti = new (std::nothrow) torrent_info(sha1_hash(va_arg(lp, char const*)));
-				break;
-			case TOR_INFOHASH_HEX:
-			{
-				sha1_hash ih;
-				from_hex(va_arg(lp, char const*), 40, (char*)&ih[0]);
-				params.ti = new (std::nothrow) torrent_info(ih);
-				break;
-			}
-			case TOR_MAGNETLINK:
-				magnet_url = va_arg(lp, char const*);
-				break;
-			case TOR_TRACKER_URL:
-				params.tracker_url = va_arg(lp, char const*);
-				break;
-			case TOR_RESUME_DATA:
-				resume_data = va_arg(lp, char const*);
-				break;
-			case TOR_RESUME_DATA_SIZE:
-				resume_size = va_arg(lp, int);
-				break;
-			case TOR_SAVE_PATH:
-				params.save_path = va_arg(lp, char const*);
-				break;
-			case TOR_NAME:
-				params.name = va_arg(lp, char const*);
-				break;
-			case TOR_PAUSED:
-				params.paused = va_arg(lp, int) != 0;
-				break;
-			case TOR_AUTO_MANAGED:
-				params.auto_managed = va_arg(lp, int) != 0;
-				break;
-			case TOR_DUPLICATE_IS_ERROR:
-				params.duplicate_is_error = va_arg(lp, int) != 0;
-				break;
-			case TOR_USER_DATA:
-				params.userdata = va_arg(lp, void*);
-				break;
-			case TOR_SEED_MODE:
-				params.seed_mode = va_arg(lp, int) != 0;
-				break;
-			case TOR_OVERRIDE_RESUME_DATA:
-				params.override_resume_data = va_arg(lp, int) != 0;
-				break;
-			case TOR_STORAGE_MODE:
-				params.storage_mode = (libtorrent::storage_mode_t)va_arg(lp, int);
-				break;
-			default:
-				// ignore unknown tags
-				va_arg(lp, void*);
-				break;
-		}
-
-		tag = va_arg(lp, int);
-	}
-
-	if (!params.ti && torrent_data && torrent_size)
-		params.ti = new (std::nothrow) torrent_info(torrent_data, torrent_size);
-
-	std::vector<char> rd;
-	if (resume_data && resume_size)
-	{
-		rd.assign(resume_data, resume_data + resume_size);
-		params.resume_data = &rd;
-	}
-	torrent_handle h;
-	if (!params.ti && magnet_url)
-	{
-		h = add_magnet_uri(*s, magnet_url, params, ec);
-	}
-	else
-	{
-		h = s->add_torrent(params, ec);
-	}
-
-	if (!h.is_valid())
-	{
-		return -1;
-	}
-
-	int i = find_handle(h);
-	if (i == -1) i = add_handle(h);
-
-	return i;
-}
-
-TORRENT_EXPORT void session_remove_torrent(void* ses, int tor, int flags)
-{
-	using namespace libtorrent;
-	torrent_handle h = get_handle(tor);
-	if (!h.is_valid()) return;
-
-	session* s = (session*)ses;
-	s->remove_torrent(h, flags);	
-}
-
-TORRENT_EXPORT int session_pop_alert(void* ses, char* dest, int len, int* category)
-{
-	using namespace libtorrent;
-
-	session* s = (session*)ses;
-
-	std::auto_ptr<alert> a = s->pop_alert();
-	if (!a.get()) return -1;
-
-	if (category) *category = a->category();
-	strncpy(dest, a->message().c_str(), len - 1);
-	dest[len - 1] = 0;
-
-	return 0; // for now
-}
-
-TORRENT_EXPORT int session_set_settings(void* ses, int tag, ...)
-{
-	using namespace libtorrent;
-
-	session* s = (session*)ses;
-
-	va_list lp;
-	va_start(lp, tag);
-
-	while (tag != TAG_END)
-	{
-		switch (tag)
-		{
-			case SET_UPLOAD_RATE_LIMIT:
-				s->set_upload_rate_limit(va_arg(lp, int));
-				break;
-			case SET_DOWNLOAD_RATE_LIMIT:
-				s->set_download_rate_limit(va_arg(lp, int));
-				break;
-			case SET_LOCAL_UPLOAD_RATE_LIMIT:
-				s->set_local_upload_rate_limit(va_arg(lp, int));
-				break;
-			case SET_LOCAL_DOWNLOAD_RATE_LIMIT:
-				s->set_local_download_rate_limit(va_arg(lp, int));
-				break;
-			case SET_MAX_UPLOAD_SLOTS:
-				s->set_max_uploads(va_arg(lp, int));
-				break;
-			case SET_MAX_CONNECTIONS:
-				s->set_max_connections(va_arg(lp, int));
-				break;
-			case SET_HALF_OPEN_LIMIT:
-				s->set_max_half_open_connections(va_arg(lp, int));
-				break;
-			case SET_PEER_PROXY:
-			{
-				libtorrent::proxy_settings ps;
-				copy_proxy_setting(&ps, va_arg(lp, struct proxy_setting const*));
-				s->set_peer_proxy(ps);
-			}
-			case SET_WEB_SEED_PROXY:
-			{
-				libtorrent::proxy_settings ps;
-				copy_proxy_setting(&ps, va_arg(lp, struct proxy_setting const*));
-				s->set_web_seed_proxy(ps);
-			}
-			case SET_TRACKER_PROXY:
-			{
-				libtorrent::proxy_settings ps;
-				copy_proxy_setting(&ps, va_arg(lp, struct proxy_setting const*));
-				s->set_tracker_proxy(ps);
-			}
-			case SET_ALERT_MASK:
-			{
-				s->set_alert_mask(va_arg(lp, int));
-			}
-#ifndef TORRENT_DISABLE_DHT
-			case SET_DHT_PROXY:
-			{
-				libtorrent::proxy_settings ps;
-				copy_proxy_setting(&ps, va_arg(lp, struct proxy_setting const*));
-				s->set_dht_proxy(ps);
-			}
-#endif
-			case SET_PROXY:
-			{
-				libtorrent::proxy_settings ps;
-				copy_proxy_setting(&ps, va_arg(lp, struct proxy_setting const*));
-				s->set_peer_proxy(ps);
-				s->set_web_seed_proxy(ps);
-				s->set_tracker_proxy(ps);
-#ifndef TORRENT_DISABLE_DHT
-				s->set_dht_proxy(ps);
-#endif
-			}
-			default:
-				// ignore unknown tags
-				va_arg(lp, void*);
-				break;
-		}
-
-		tag = va_arg(lp, int);
-	}
-	return 0;
-}
-
-TORRENT_EXPORT int session_get_setting(void* ses, int tag, void* value, int* value_size)
-{
-	using namespace libtorrent;
-	session* s = (session*)ses;
-
-	switch (tag)
-	{
-		case SET_UPLOAD_RATE_LIMIT:
-			return set_int_value(value, value_size, s->upload_rate_limit());
-		case SET_DOWNLOAD_RATE_LIMIT:
-			return set_int_value(value, value_size, s->download_rate_limit());
-		case SET_LOCAL_UPLOAD_RATE_LIMIT:
-			return set_int_value(value, value_size, s->local_upload_rate_limit());
-		case SET_LOCAL_DOWNLOAD_RATE_LIMIT:
-			return set_int_value(value, value_size, s->local_download_rate_limit());
-		case SET_MAX_UPLOAD_SLOTS:
-			return set_int_value(value, value_size, s->max_uploads());
-		case SET_MAX_CONNECTIONS:
-			return set_int_value(value, value_size, s->max_connections());
-		case SET_HALF_OPEN_LIMIT:
-			return set_int_value(value, value_size, s->max_half_open_connections());
-		default:
-			return -2;
-	}
-}
-
-TORRENT_EXPORT int session_get_status(void* sesptr, struct session_status* s, int struct_size)
-{
-	libtorrent::session* ses = (libtorrent::session*)sesptr;
-
-	libtorrent::session_status ss = ses->status();
-	if (struct_size != sizeof(session_status)) return -1;
-
-	s->has_incoming_connections = ss.has_incoming_connections;
-
-	s->upload_rate = ss.upload_rate;
-	s->download_rate = ss.download_rate;
-	s->total_download = ss.total_download;
-	s->total_upload = ss.total_upload;
-
-	s->payload_upload_rate = ss.payload_upload_rate;
-	s->payload_download_rate = ss.payload_download_rate;
-	s->total_payload_download = ss.total_payload_download;
-	s->total_payload_upload = ss.total_payload_upload;
-
-	s->ip_overhead_upload_rate = ss.ip_overhead_upload_rate;
-	s->ip_overhead_download_rate = ss.ip_overhead_download_rate;
-	s->total_ip_overhead_download = ss.total_ip_overhead_download;
-	s->total_ip_overhead_upload = ss.total_ip_overhead_upload;
-
-	s->dht_upload_rate = ss.dht_upload_rate;
-	s->dht_download_rate = ss.dht_download_rate;
-	s->total_dht_download = ss.total_dht_download;
-	s->total_dht_upload = ss.total_dht_upload;
-
-	s->tracker_upload_rate = ss.tracker_upload_rate;
-	s->tracker_download_rate = ss.tracker_download_rate;
-	s->total_tracker_download = ss.total_tracker_download;
-	s->total_tracker_upload = ss.total_tracker_upload;
-
-	s->total_redundant_bytes = ss.total_redundant_bytes;
-	s->total_failed_bytes = ss.total_failed_bytes;
-
-	s->num_peers = ss.num_peers;
-	s->num_unchoked = ss.num_unchoked;
-	s->allowed_upload_slots = ss.allowed_upload_slots;
-
-	s->up_bandwidth_queue = ss.up_bandwidth_queue;
-	s->down_bandwidth_queue = ss.down_bandwidth_queue;
-
-	s->up_bandwidth_bytes_queue = ss.up_bandwidth_bytes_queue;
-	s->down_bandwidth_bytes_queue = ss.down_bandwidth_bytes_queue;
-
-	s->optimistic_unchoke_counter = ss.optimistic_unchoke_counter;
-	s->unchoke_counter = ss.unchoke_counter;
-
-	s->dht_nodes = ss.dht_nodes;
-	s->dht_node_cache = ss.dht_node_cache;
-	s->dht_torrents = ss.dht_torrents;
-	s->dht_global_nodes = ss.dht_global_nodes;
-	return 0;
-}
-
-TORRENT_EXPORT int torrent_get_status(int tor, torrent_status* s, int struct_size)
-{
-	libtorrent::torrent_handle h = get_handle(tor);
-	if (!h.is_valid()) return -1;
-
-	libtorrent::torrent_status ts = h.status();
-
-	if (struct_size != sizeof(torrent_status)) return -1;
-
-	s->state = (state_t)ts.state;
-	s->paused = ts.paused;
-	s->progress = ts.progress;
-	strncpy(s->error, ts.error.c_str(), 1025);
-	s->next_announce = ts.next_announce.total_seconds();
-	s->announce_interval = ts.announce_interval.total_seconds();
-	strncpy(s->current_tracker, ts.current_tracker.c_str(), 512);
-	s->total_download = ts.total_download = ts.total_download = ts.total_download;
-	s->total_upload = ts.total_upload = ts.total_upload = ts.total_upload;
-	s->total_payload_download = ts.total_payload_download;
-	s->total_payload_upload = ts.total_payload_upload;
-	s->total_failed_bytes = ts.total_failed_bytes;
-	s->total_redundant_bytes = ts.total_redundant_bytes;
-	s->download_rate = ts.download_rate;
-	s->upload_rate = ts.upload_rate;
-	s->download_payload_rate = ts.download_payload_rate;
-	s->upload_payload_rate = ts.upload_payload_rate;
-	s->num_seeds = ts.num_seeds;
-	s->num_peers = ts.num_peers;
-	s->num_complete = ts.num_complete;
-	s->num_incomplete = ts.num_incomplete;
-	s->list_seeds = ts.list_seeds;
-	s->list_peers = ts.list_peers;
-	s->connect_candidates = ts.connect_candidates;
-	s->num_pieces = ts.num_pieces;
-	s->total_done = ts.total_done;
-	s->total_wanted_done = ts.total_wanted_done;
-	s->total_wanted = ts.total_wanted;
-	s->distributed_copies = ts.distributed_copies;
-	s->block_size = ts.block_size;
-	s->num_uploads = ts.num_uploads;
-	s->num_connections = ts.num_connections;
-	s->uploads_limit = ts.uploads_limit;
-	s->connections_limit = ts.connections_limit;
-//	s->storage_mode = (storage_mode_t)ts.storage_mode;
-	s->up_bandwidth_queue = ts.up_bandwidth_queue;
-	s->down_bandwidth_queue = ts.down_bandwidth_queue;
-	s->all_time_upload = ts.all_time_upload;
-	s->all_time_download = ts.all_time_download;
-	s->active_time = ts.active_time;
-	s->seeding_time = ts.seeding_time;
-	s->seed_rank = ts.seed_rank;
-	s->last_scrape = ts.last_scrape;
-	s->has_incoming = ts.has_incoming;
-	s->sparse_regions = ts.sparse_regions;
-	s->seed_mode = ts.seed_mode;
-	return 0;
-}
-
-TORRENT_EXPORT int torrent_set_settings(int tor, int tag, ...)
-{
-	using namespace libtorrent;
-	torrent_handle h = get_handle(tor);
-	if (!h.is_valid()) return -1;
-
-	va_list lp;
-	va_start(lp, tag);
-
-	while (tag != TAG_END)
-	{
-		switch (tag)
-		{
-			case SET_UPLOAD_RATE_LIMIT:
-				h.set_upload_limit(va_arg(lp, int));
-				break;
-			case SET_DOWNLOAD_RATE_LIMIT:
-				h.set_download_limit(va_arg(lp, int));
-				break;
-			case SET_MAX_UPLOAD_SLOTS:
-				h.set_max_uploads(va_arg(lp, int));
-				break;
-			case SET_MAX_CONNECTIONS:
-				h.set_max_connections(va_arg(lp, int));
-				break;
-			case SET_SEQUENTIAL_DOWNLOAD:
-				h.set_sequential_download(va_arg(lp, int) != 0);
-				break;
-			case SET_SUPER_SEEDING:
-				h.super_seeding(va_arg(lp, int) != 0);
-				break;
-			default:
-				// ignore unknown tags
-				va_arg(lp, void*);
-				break;
-		}
-
-		tag = va_arg(lp, int);
-	}
-	return 0;
-}
-
-TORRENT_EXPORT int torrent_get_setting(int tor, int tag, void* value, int* value_size)
-{
-	using namespace libtorrent;
-	torrent_handle h = get_handle(tor);
-	if (!h.is_valid()) return -1;
-
-	switch (tag)
-	{
-		case SET_UPLOAD_RATE_LIMIT:
-			return set_int_value(value, value_size, h.upload_limit());
-		case SET_DOWNLOAD_RATE_LIMIT:
-			return set_int_value(value, value_size, h.download_limit());
-		case SET_MAX_UPLOAD_SLOTS:
-			return set_int_value(value, value_size, h.max_uploads());
-		case SET_MAX_CONNECTIONS:
-			return set_int_value(value, value_size, h.max_connections());
-		case SET_SEQUENTIAL_DOWNLOAD:
-			return set_int_value(value, value_size, h.is_sequential_download());
-		case SET_SUPER_SEEDING:
-			return set_int_value(value, value_size, h.super_seeding());
-		default:
-			return -2;
-	}
-}
-
-} // extern "C"
-
diff -ruN libtorrent-libtorrent_0_16_5/bindings/c/libtorrent.h libtorrent/bindings/c/libtorrent.h
--- libtorrent-libtorrent_0_16_5/bindings/c/libtorrent.h	2012-10-23 12:23:09.000000000 +0800
+++ libtorrent/bindings/c/libtorrent.h	1970-01-01 08:00:00.000000000 +0800
@@ -1,298 +0,0 @@
-/*
-
-Copyright (c) 2009, Arvid Norberg
-All rights reserved.
-
-Redistribution and use in source and binary forms, with or without
-modification, are permitted provided that the following conditions
-are met:
-
-    * Redistributions of source code must retain the above copyright
-      notice, this list of conditions and the following disclaimer.
-    * Redistributions in binary form must reproduce the above copyright
-      notice, this list of conditions and the following disclaimer in
-      the documentation and/or other materials provided with the distribution.
-    * Neither the name of the author nor the names of its
-      contributors may be used to endorse or promote products derived
-      from this software without specific prior written permission.
-
-THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
-AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
-LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
-CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
-SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
-INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
-CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
-ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
-POSSIBILITY OF SUCH DAMAGE.
-
-*/
-
-#ifndef LIBTORRENT_H
-#define LIBTORRENT_H
-
-enum tags
-{
-	TAG_END = 0,
-
-	SES_FINGERPRINT, // char const*, 2 character string
-	SES_LISTENPORT, // int
-	SES_LISTENPORT_END, // int
-	SES_VERSION_MAJOR, // int
-	SES_VERSION_MINOR, // int
-	SES_VERSION_TINY, // int
-	SES_VERSION_TAG, // int
-	SES_FLAGS, // int
-	SES_ALERT_MASK, // int
-	SES_LISTEN_INTERFACE, // char const*
-
-	// === add_torrent tags ===
-
-	// identifying the torrent to add
-	TOR_FILENAME = 0x100, // char const*
-	TOR_TORRENT, // char const*, specify size of buffer with TOR_TORRENT_SIZE
-	TOR_TORRENT_SIZE, // int
-	TOR_INFOHASH, // char const*, must point to a 20 byte array
-	TOR_INFOHASH_HEX, // char const*, must point to a 40 byte string
-	TOR_MAGNETLINK, // char const*, url
-
-	TOR_TRACKER_URL, // char const*
-	TOR_RESUME_DATA, // char const*
-	TOR_RESUME_DATA_SIZE, // int
-	TOR_SAVE_PATH, // char const*
-	TOR_NAME, // char const*
-	TOR_PAUSED, // int
-	TOR_AUTO_MANAGED, // int
-	TOR_DUPLICATE_IS_ERROR, // int
-	TOR_USER_DATA, //void*
-	TOR_SEED_MODE, // int
-	TOR_OVERRIDE_RESUME_DATA, // int
-	TOR_STORAGE_MODE, // int
-
-	SET_UPLOAD_RATE_LIMIT = 0x200, // int
-	SET_DOWNLOAD_RATE_LIMIT, // int
-	SET_LOCAL_UPLOAD_RATE_LIMIT, // int
-	SET_LOCAL_DOWNLOAD_RATE_LIMIT, // int
-	SET_MAX_UPLOAD_SLOTS, // int
-	SET_MAX_CONNECTIONS, // int
-	SET_SEQUENTIAL_DOWNLOAD, // int, torrent only
-	SET_SUPER_SEEDING, // int, torrent only
-	SET_HALF_OPEN_LIMIT, // int, session only
-	SET_PEER_PROXY, // proxy_setting const*, session_only
-	SET_WEB_SEED_PROXY, // proxy_setting const*, session_only
-	SET_TRACKER_PROXY, // proxy_setting const*, session_only
-	SET_DHT_PROXY, // proxy_setting const*, session_only
-	SET_PROXY, // proxy_setting const*, session_only
-	SET_ALERT_MASK, // int, session_only
-};
-
-struct proxy_setting
-{
-	char hostname[256];
-	int port;
-
-	char username[256];
-	char password[256];
-
-	int type;
-};
-
-enum category_t
-{
-	cat_error = 0x1,
-	cat_peer = 0x2,
-	cat_port_mapping = 0x4,
-	cat_storage = 0x8,
-	cat_tracker = 0x10,
-	cat_debug = 0x20,
-	cat_status = 0x40,
-	cat_progress = 0x80,
-	cat_ip_block = 0x100,
-	cat_performance_warning = 0x200,
-	cat_dht = 0x400,
-
-	cat_all_categories = 0xffffffff
-};
-
-enum proxy_type_t
-{
-	proxy_none,
-	proxy_socks4,
-	proxy_socks5,
-	proxy_socks5_pw,
-	proxy_http,
-	proxy_http_pw
-};
-
-enum storage_mode_t
-{
-	storage_mode_allocate = 0,
-	storage_mode_sparse,
-	storage_mode_compact
-};
-
-enum state_t
-{
-	queued_for_checking,
-	checking_files,
-	downloading_metadata,
-	downloading,
-	finished,
-	seeding,
-	allocating,
-	checking_resume_data
-};
-	
-struct torrent_status
-{
-	enum state_t state;
-	int paused;
-	float progress;
-	char error[1024];
-	int next_announce;
-	int announce_interval;
-	char current_tracker[512];
-	long long total_download;
-	long long total_upload;
-	long long total_payload_download;
-	long long total_payload_upload;
-	long long total_failed_bytes;
-	long long total_redundant_bytes;
-	float download_rate;
-	float upload_rate;
-	float download_payload_rate;
-	float upload_payload_rate;
-	int num_seeds;
-	int num_peers;
-	int num_complete;
-	int num_incomplete;
-	int list_seeds;
-	int list_peers;
-	int connect_candidates;
-
-	// what to do?	
-//	bitfield pieces;
-
-	int num_pieces;
-	long long total_done;
-	long long total_wanted_done;
-	long long total_wanted;
-	float distributed_copies;
-	int block_size;
-	int num_uploads;
-	int num_connections;
-	int uploads_limit;
-	int connections_limit;
-//	enum storage_mode_t storage_mode;
-	int up_bandwidth_queue;
-	int down_bandwidth_queue;
-	long long all_time_upload;
-	long long all_time_download;
-	int active_time;
-	int seeding_time;
-	int seed_rank;
-	int last_scrape;
-	int has_incoming;
-	int sparse_regions;
-	int seed_mode;
-};
-
-struct session_status
-{
-	int has_incoming_connections;
-
-	float upload_rate;
-	float download_rate;
-	long long total_download;
-	long long total_upload;
-
-	float payload_upload_rate;
-	float payload_download_rate;
-	long long total_payload_download;
-	long long total_payload_upload;
-
-	float ip_overhead_upload_rate;
-	float ip_overhead_download_rate;
-	long long total_ip_overhead_download;
-	long long total_ip_overhead_upload;
-
-	float dht_upload_rate;
-	float dht_download_rate;
-	long long total_dht_download;
-	long long total_dht_upload;
-
-	float tracker_upload_rate;
-	float tracker_download_rate;
-	long long total_tracker_download;
-	long long total_tracker_upload;
-
-	long long total_redundant_bytes;
-	long long total_failed_bytes;
-
-	int num_peers;
-	int num_unchoked;
-	int allowed_upload_slots;
-
-	int up_bandwidth_queue;
-	int down_bandwidth_queue;
-
-	int up_bandwidth_bytes_queue;
-	int down_bandwidth_bytes_queue;
-
-	int optimistic_unchoke_counter;
-	int unchoke_counter;
-
-	int dht_nodes;
-	int dht_node_cache;
-	int dht_torrents;
-	long long dht_global_nodes;
-//	std::vector<dht_lookup> active_requests;
-};
-
-#ifdef __cplusplus
-extern "C"
-{
-#endif
-
-// the functions whose signature ends with:
-// , int first_tag, ...);
-// takes a tag list. The tag list is a series
-// of tag-value pairs. The tags are constants
-// identifying which property the value controls.
-// The type of the value varies between tags.
-// The enumeration above specifies which type
-// it expects. All tag lists must always be
-// terminated by TAG_END.
-
-// use SES_* tags in tag list
-void* session_create(int first_tag, ...);
-void session_close(void* ses);
-
-// use TOR_* tags in tag list
-int session_add_torrent(void* ses, int first_tag, ...);
-void session_remove_torrent(void* ses, int tor, int flags);
-
-// return < 0 if there are no alerts. Otherwise returns the
-// type of alert that was returned
-int session_pop_alert(void* ses, char* dest, int len, int* category);
-
-int session_get_status(void* ses, struct session_status* s, int struct_size);
-
-// use SET_* tags in tag list
-int session_set_settings(void* ses, int first_tag, ...);
-int session_get_setting(void* ses, int tag, void* value, int* value_size);
-
-int torrent_get_status(int tor, struct torrent_status* s, int struct_size);
-
-// use SET_* tags in tag list
-int torrent_set_settings(int tor, int first_tag, ...);
-int torrent_get_setting(int tor, int tag, void* value, int* value_size);
-
-#ifdef __cplusplus
-}
-#endif
-
-#endif
-
diff -ruN libtorrent-libtorrent_0_16_5/bindings/c/simple_client.c libtorrent/bindings/c/simple_client.c
--- libtorrent-libtorrent_0_16_5/bindings/c/simple_client.c	2012-10-23 12:23:09.000000000 +0800
+++ libtorrent/bindings/c/simple_client.c	1970-01-01 08:00:00.000000000 +0800
@@ -1,123 +0,0 @@
-/*
-
-Copyright (c) 2009, Arvid Norberg
-All rights reserved.
-
-Redistribution and use in source and binary forms, with or without
-modification, are permitted provided that the following conditions
-are met:
-
-    * Redistributions of source code must retain the above copyright
-      notice, this list of conditions and the following disclaimer.
-    * Redistributions in binary form must reproduce the above copyright
-      notice, this list of conditions and the following disclaimer in
-      the documentation and/or other materials provided with the distribution.
-    * Neither the name of the author nor the names of its
-      contributors may be used to endorse or promote products derived
-      from this software without specific prior written permission.
-
-THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
-AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
-LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
-CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
-SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
-INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
-CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
-ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
-POSSIBILITY OF SUCH DAMAGE.
-
-*/
-
-#include <libtorrent.h>
-#include <stdio.h>
-#include <signal.h>
-#include <unistd.h>
-#include <string.h>
-
-int quit = 0;
-
-void stop(int signal)
-{
-	quit = 1;
-}
-
-int main(int argc, char* argv[])
-{
-	if (argc != 2)
-	{
-		fprintf(stderr, "usage: ./simple_client torrent-file\n");
-		return 1;
-	}
-
-	int ret = 0;
-	void* ses = session_create(
-		SES_LISTENPORT, 6881,
-		SES_LISTENPORT_END, 6889,
-		SES_ALERT_MASK, ~(cat_progress | cat_port_mapping | cat_debug | cat_performance_warning | cat_peer),
-		TAG_END);
-
-	int t = session_add_torrent(ses,
-		TOR_FILENAME, argv[1],
-		TOR_SAVE_PATH, "./",
-		TAG_END);
-
-	if (t < 0)
-	{
-		fprintf(stderr, "Failed to add torrent\n");
-		ret = 1;
-		goto exit;
-	}
-
-	struct torrent_status st;
-
-	printf("press ctrl-C to stop\n");
-
-	signal(SIGINT, &stop);
-	signal(SIGABRT, &stop);
-	signal(SIGQUIT, &stop);
-
-	while (quit == 0)
-	{
-		char const* message = "";
-
-		char const* state[] = {"queued", "checking", "downloading metadata"
-			, "downloading", "finished", "seeding", "allocating"
-			, "checking_resume_data"};
-
-		if (torrent_get_status(t, &st, sizeof(st)) < 0) break;
-		printf("\r%3.f%% %d kB (%5.f kB/s) up: %d kB (%5.f kB/s) peers: %d '%s' %s  "
-			, (double)st.progress * 100.
-			, (int)(st.total_payload_download / 1000)
-			, (double)st.download_payload_rate / 1000.
-			, (int)(st.total_payload_upload / 1000)
-			, (double)st.upload_payload_rate / 1000.
-			, st.num_peers
-			, state[st.state]
-			, message);
-
-
-		char msg[400];
-		while (session_pop_alert(ses, msg, sizeof(msg), 0) >= 0)
-		{
-			printf("%s\n", msg);
-		}
-
-		if (strlen(st.error) > 0)
-		{
-			fprintf(stderr, "\nERROR: %s\n", st.error);
-			break;
-		}
-
-		fflush(stdout);
-		usleep(1000000);
-	}
-	printf("\nclosing\n");
-
-exit:
-
-	session_close(ses);
-	return ret;
-}
-
diff -ruN libtorrent-libtorrent_0_16_5/build_dist.sh libtorrent/build_dist.sh
--- libtorrent-libtorrent_0_16_5/build_dist.sh	2012-10-23 12:23:09.000000000 +0800
+++ libtorrent/build_dist.sh	1970-01-01 08:00:00.000000000 +0800
@@ -1,21 +0,0 @@
-#!/bin/sh
-
-
-#clear out any extended attributes that Finder may add
-sudo xattr -r -d com.apple.FinderInfo *
-
-rm -f config.log config.report configure
-rm -f m4/libtool.m4 m4/lt~obsolete.m4 m4/ltsugar.m4 m4/ltversion.m4 m4/ltoptions.m4
-rm -fr autom4te.cache build-aux
-rm -f Makefile Makefile.in
-rm -f src/Makefile src/Makefile.in
-rm -f include/libtorrent/Makefile include/libtorrent/Makefile.in
-rm -f examples/Makefile examples/Makefile.in
-rm -f test/Makefile test/Makefile.in
-rm -f bindings/Makefile bindings/Makefile.in
-rm -f bindings/python/Makefile bindings/python/Makefile.in
-chmod a-x docs/*.rst docs/*.htm* src/*.cpp include/libtorrent/*.hpp
-
-./autotool.sh
-./configure --enable-python-binding --enable-examples=yes --enable-tests=yes --with-boost-system=mt --with-boost-python=mt 
-make V=1 -j8 dist check
diff -ruN libtorrent-libtorrent_0_16_5/configure.ac libtorrent/configure.ac
--- libtorrent-libtorrent_0_16_5/configure.ac	2012-10-23 12:23:09.000000000 +0800
+++ libtorrent/configure.ac	2016-12-06 15:14:01.959100741 +0800
@@ -599,8 +599,11 @@
 AC_DEFINE([BOOST_ASIO_ENABLE_CANCELIO],[1],[Define to enable cancel support in asio on windows XP and older.])
 COMPILETIME_OPTIONS="$COMPILETIME_OPTIONS -DBOOST_ASIO_ENABLE_CANCELIO "
 
-AC_DEFINE([BOOST_ASIO_DYN_LINK],[1],[make asio export its symbols])
-COMPILETIME_OPTIONS="$COMPILETIME_OPTIONS -DBOOST_ASIO_DYN_LINK"
+AC_DEFINE([BOOST_ASIO_SEPARATE_COMPILATION],[1],[make asio not export its symbols])
+COMPILETIME_OPTIONS="$COMPILETIME_OPTIONS -DBOOST_ASIO_SEPARATE_COMPILATION"
+
+AC_DEFINE([BOOST_ASIO_HAS_EPOLL],[1],[make asio use epoll])
+COMPILETIME_OPTIONS="$COMPILETIME_OPTIONS -DBOOST_ASIO_HAS_EPOLL"
 
 dnl Use possibly specific python install params
 AC_ARG_VAR([PYTHON_INSTALL_PARAMS], [Set specific install parameters for python bindings.])
diff -ruN libtorrent-libtorrent_0_16_5/darwin_valgrind.suppressions libtorrent/darwin_valgrind.suppressions
--- libtorrent-libtorrent_0_16_5/darwin_valgrind.suppressions	2012-10-23 12:23:09.000000000 +0800
+++ libtorrent/darwin_valgrind.suppressions	1970-01-01 08:00:00.000000000 +0800
@@ -1,186 +0,0 @@
-{
-	localtime
-   Memcheck:Leak
-   fun:malloc
-   fun:tzsetwall_basic
-   fun:localtime
-}
-{
-	localtime2
-   Memcheck:Leak
-   fun:malloc
-   fun:tzload
-   fun:tzsetwall_basic
-   fun:localtime
-}
-{
-	localtime3
-   Memcheck:Leak
-   fun:malloc
-   fun:localtime
-}
-{
-	localtime4
-   Memcheck:Leak
-   fun:calloc
-   fun:token_table_add
-   fun:notify_register_check
-   fun:notify_register_tz
-   fun:tzsetwall_basic
-   fun:localtime
-}
-{
-	getc
-   Memcheck:Leak
-   fun:malloc
-   fun:__smakebuf
-   fun:__srefill0
-   fun:__srefill
-   fun:__srget
-   fun:getc
-}
-{
-	putc
-   Memcheck:Leak
-   fun:malloc
-   fun:__smakebuf
-   fun:__swsetup
-   fun:__sfvwrite
-   fun:puts
-}
-{
-	printf
-   Memcheck:Leak
-   fun:malloc
-   fun:__smakebuf
-   fun:__swsetup
-   fun:__vfprintf
-}
-{
-	printf2
-   Memcheck:Leak
-   fun:malloc
-   fun:__Balloc_D2A
-   fun:__d2b_D2A
-   fun:__dtoa
-   fun:__vfprintf
-}
-{
-	atexit_register
-   Memcheck:Leak
-   fun:malloc
-   fun:atexit_register
-}
-{
-	getipnodebyname
-   Memcheck:Leak
-   fun:malloc
-   fun:strdup
-   fun:si_module_static_file
-}
-{
-	getipnodebyname2
-   Memcheck:Leak
-   fun:calloc
-   fun:si_module_static_cache
-}
-{
-	getipnodebyname3
-   Memcheck:Leak
-   fun:calloc
-   fun:_nc_table_new
-}
-{
-	getipnodebyname4
-   Memcheck:Leak
-   fun:malloc
-   fun:dns_configuration_copy
-}
-{
-	getipnodebyname5
-   Memcheck:Leak
-   fun:calloc
-   fun:si_module_static_ds
-}
-{
-	getipnodebyname6
-   Memcheck:Leak
-   fun:calloc
-   fun:si_module_static_mdns
-}
-{
-	getipnodebyname7
-   Memcheck:Leak
-   fun:calloc
-   fun:search_alloc
-   fun:si_module_static_search
-   fun:si_module_with_name
-}
-{
-	getipnodebyname8
-   Memcheck:Leak
-   fun:calloc
-   fun:token_table_add
-}
-{
-	mdns
-   Memcheck:Leak
-   fun:malloc
-   fun:ConnectToServer
-   fun:DNSServiceCreateConnection
-   fun:_mdns_query_mDNSResponder
-}
-{
-	mdns2
-   Memcheck:Leak
-   fun:calloc
-   fun:_mdns_search
-}
-{
-	getipnodebyname9
-   Memcheck:Leak
-   fun:malloc
-   fun:strdup
-   fun:si_module_static_ds
-}
-{
-	getipnodebyname10
-   Memcheck:Leak
-   fun:malloc
-   fun:strdup
-   fun:si_module_static_mdns
-}
-{
-	getipnodebyname11
-   Memcheck:Leak
-   fun:malloc
-   fun:strdup
-   fun:si_module_static_cache
-}
-{
-	getipnodebyname12
-   Memcheck:Leak
-   fun:malloc
-   fun:strdup
-   fun:search_alloc
-   fun:si_module_static_search
-}
-{
-	getipnodebyname13
-   Memcheck:Leak
-   fun:malloc
-   fun:_nc_table_new
-}
-{
-	getipnodebyname14
-   Memcheck:Leak
-   fun:malloc
-   fun:strdup
-   fun:_mdns_search
-}
-{
-	getipbyname15
-   Memcheck:Leak
-   fun:malloc
-   fun:_nc_table_insert_n
-}
diff -ruN libtorrent-libtorrent_0_16_5/dht_flood.py libtorrent/dht_flood.py
--- libtorrent-libtorrent_0_16_5/dht_flood.py	2012-10-23 12:23:09.000000000 +0800
+++ libtorrent/dht_flood.py	1970-01-01 08:00:00.000000000 +0800
@@ -1,68 +0,0 @@
-#! /usr/bin/env python
-
-import socket
-import sys
-from types import StringType, IntType, LongType, DictType, ListType, TupleType
-import random
-
-port = int(sys.argv[1])
-
-# from BitTorrent 4.3.0
-def encode_bencached(x,r):
-    r.append(x.bencoded)
-
-def encode_int(x, r):
-    r.extend(('i', str(x), 'e'))
-
-def encode_string(x, r):
-    r.extend((str(len(x)), ':', x))
-
-def encode_list(x, r):
-    r.append('l')
-    for i in x:
-        encode_func[type(i)](i, r)
-    r.append('e')
-
-def encode_dict(x,r):
-    r.append('d')
-    ilist = x.items()
-    ilist.sort()
-    for k, v in ilist:
-        r.extend((str(len(k)), ':', k))
-        encode_func[type(v)](v, r)
-    r.append('e')
-
-encode_func = {}
-encode_func[IntType] = encode_int
-encode_func[LongType] = encode_int
-encode_func[StringType] = encode_string
-encode_func[ListType] = encode_list
-encode_func[TupleType] = encode_list
-encode_func[DictType] = encode_dict
-
-def bencode(x):
-    r = []
-    encode_func[type(x)](x, r)
-    return ''.join(r)
-
-def send_dht_message(msg):
-	s.sendto(bencode(msg), 0, ('127.0.0.1', port))
-
-def random_key():
-	ret = ''
-	for i in range(0, 20):
-		ret += chr(random.randint(0, 255))
-	return ret
-
-s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
-node_id = '1' * 20;
-query = 'get_peers'
-
-print 'test random info-hashes'
-for i in xrange(1, 30000):
-	send_dht_message({'a': {'id': node_id, 'info_hash': random_key()}, 'q': query, 'y': 'q', 't': '%d' % i})
-
-print 'test random peer-ids'
-for i in xrange(1, 30000):
-	send_dht_message({'a': {'id': random_key(), 'info_hash': random_key()}, 'q': query, 'y': 'q', 't': '%d' % i})
-
diff -ruN libtorrent-libtorrent_0_16_5/docs/auth.rst libtorrent/docs/auth.rst
--- libtorrent-libtorrent_0_16_5/docs/auth.rst	2012-10-23 12:23:09.000000000 +0800
+++ libtorrent/docs/auth.rst	1970-01-01 08:00:00.000000000 +0800
@@ -1,192 +0,0 @@
-===================================
-BitTorrent authentication extension
-===================================
-
-:Author: Arvid Norberg, arvid@rasterbar.com
-:Version: 0.16.5
-
-.. contents:: Table of contents
-  :depth: 2
-  :backlinks: none
-
-BitTorrent authentication extension
------------------------------------
-
-This extension indends to cover any combination of the following use cases:
-
-1. Verifying that a torrent is published by a trusted source
-2. Have a swarm be private and having peers authenticate peers they connect to
-3. Allow peers, with prior knowledge about each other's public key, authenticate in order to set up trusted connections to known peers (i.e. "friends")
-
-These building blocks could be used for building a web of trust, private
-swarms and trusted sources for content.
-
-torrent file extension
-----------------------
-
-A .torrent file may have the following new fields (not inside the info-hash):
-
-"publisher"
-	containing the RSA public key of the publisher of the torrent. Private counterpart
-	of this key that has the authority to allow new peers onto the swarm.
-
-"signature"
-	The RSA signature of the ``info`` dictionary (specifically, the encrypted SHA-1
-	hash of the ``info`` dictionary).
-
-These fields serve the purpose of satisfying use case (1), allowing downloaders to
-verify that the torrent has a trusted source.
-
-extension handshake
--------------------
-
-In order to satisfy use case (2), any peer supporting this extension MUST verify
-that each peer on the swarm it connects to and receive an incoming connection from
-is authenticated by the publisher's public key, if the torrent is *private*.
-
-A torrent is private if the ``info`` dictionary contains an integer key ``private``
-set to 1.
-
-The extension handshake dictionary ("m") SHOULD contain a new extension key "lt_auth".
-
-For private torrents, the extension handshake dictionary
-MUST contain the certificate granting this peer access to the torrent. The
-certificate is a dictionary ``cert`` containing the ``info-hash``,
-``pubkey`` (the peer's public key), ``expiry`` (posix time of when cert expires).
-The ``cert`` dictionary MAY be extended with more fields.
-
-Next to the ``cert`` entry is a string ``sig`` being the signature
-of the SHA-1 hash of the bencoded representation of the ``cert`` dictionary.
-The signature is required for private torrents, but not required for non-private
-torrents.
-
-An example extension handshake for a private torrent could look like this::
-
-	{
-		"cert": {
-			"expiry": 1333242356,
-			"info-hash": f0fb0ed2d73a28aece3a9e4f91c91cf60e0ea0a6,
-			"pubkey":
-				79eaeecbfc91b129c34880e3113fc9545e7169fed95a7950a335cfcef3dd2989c
-				c80c69d9e66206cdb4e41eeae8b19234804cd55b3eb6dbee15a5362e3fa6eb33b
-				a61297dfc63426832623efdf54816474189ddf1baad1d08cb614ed130f9744671
-				a0c9bdf32747c284955ad9ae65db875f4f74f51e624710fe7c3db5ec8ce55f175
-				b49131cace810d6a61a9fcd0fa4e41e466e09c2a18629f4bebb8dbf4746648122
-				bfc8153e3e76ea16cae62e0e1608effa6bf2f1d1954d2e3ef2ca1db327f75a1aa
-				711ccad6a564821824a2708c20a9184a221554d1228fdaee39ba3ce4134847fab
-				91514d4ed720fabe8082e342dfce15ced93545bdc6
-		},
-		"m": {
-			"lt_auth": 8
-		}
-		"sig":
-			1767303857272cc9133253614712584a3c6be5f81cd777e9e6e99fbf23be27ca9
-			d96c3ad596521f90dd4fb2291d6c9a6108625cf58ca836c3e7f15595306cd9311
-			5c4736276cb4ee08b7f85a5eb26759bfb46b28f36cecfd73e71fac5cad8f22bb6
-			32d07ab4e530587d4fc4d21ae1c52aacbefa0a0dbabb9e24d6c552aaa464a8b94
-			97cc776e3b1b4051dbc9ef26952ab0e74188cbf1ea54f37309ef781d37b59ded7
-			e6ce09a9531cc9916ecbe1fb93369da47ab79457e9709576f737e3d89e3774731
-			d97ac8b1283dc46a382e4ddd5a155b17d6ded6683f508f111c5e974098315c509
-			77d533ddb52f42fa5019342496a217483b622c3a
-	}
-
-
-This certificate would expire at ``Sat Mar 31 18:05:56 PDT 2012``. The values of ``sig``,
-``info-hash`` and ``pubkey`` are binary strings, they are printed as hex in this example.
-The RSA key size SHOULD be 2048 bits (256 bytes).
-
-Whenconnecting to a peer, or accepting an incoming connection, for a private torrent,
-the client MUST verify the validity of the incoming certificate. This is done by:
-
-1. Verifying that the certificate has not expired.
-2. Verifying that the ``info-hash`` matches the torrent the peers are connected over
-3. Verifying that the signature ``sig``, is a valid signature made by the private counterpart of the public key of the publisher of the torrent (i.e. the ``publisher`` key in the torrent file)
-
-If the certificate fails any one of those checks, the peer MUST be
-disconnected without exchanging any more information. As an exception, before
-disconnecting, the peer MAY send an ``lt_auto`` message saying the authentication
-failed.
-
-An example extension handshake for a non-private torrent could look like this::
-
-	{
-		"cert": {
-			"pubkey":
-				79eaeecbfc91b129c34880e3113fc9545e7169fed95a7950a335cfcef3dd2989c
-				c80c69d9e66206cdb4e41eeae8b19234804cd55b3eb6dbee15a5362e3fa6eb33b
-				a61297dfc63426832623efdf54816474189ddf1baad1d08cb614ed130f9744671
-				a0c9bdf32747c284955ad9ae65db875f4f74f51e624710fe7c3db5ec8ce55f175
-				b49131cace810d6a61a9fcd0fa4e41e466e09c2a18629f4bebb8dbf4746648122
-				bfc8153e3e76ea16cae62e0e1608effa6bf2f1d1954d2e3ef2ca1db327f75a1aa
-				711ccad6a564821824a2708c20a9184a221554d1228fdaee39ba3ce4134847fab
-				91514d4ed720fabe8082e342dfce15ced93545bdc6
-		},
-		"m": {
-			"lt_auth": 8
-		}
-	}
-
-Note that the only required field in the ``cert`` in this case is the ``pubkey``,
-The assumption in this case is that the public key is recognized by the client
-matched by a local directory of trusted peers. This is to support use case (3).
-
-extension message
------------------
-
-The ``lt_auth`` extension message is used to protect against man-in-the-middle attacks,
-and peers trying to assume someone else's identity. To do this, the entire connection
-is encrypted with RC4 following this message. If the connection is already encrypted
-with RC4, this overrides that encryption by resetting the encryption state.
-
-It has the following format:
-
-	============= ============= ======================================================
-	size          name          description
-	============= ============= ======================================================
-	uint8_t       type          0 = encrypt the connection with RC4 using the symmetric
-	                            key passed in this message.
-	                            1 = signature verification failed
-	                            2 = info-hash verification failed
-	                            3 = certificate expired
-	------------- ------------- ------------------------------------------------------
-	uint8_t[256]  rc4_key       If type is not 0, this field is not included.
-	                            The symmetric key the sender of this message will use
-	                            to encrypt every message following this one. The key
-	                            is encrypted with the recipient's public key. The
-	                            length of this field may vary, but for 2048 RSA keys
-	                            it ends up being 256 bytes.
-	============= ============= ======================================================
-
-Note that this message is somewhat of a layer violation, since it reaches down and
-starts encrypting the entire stream below itself. This is illustrated in the figure
-below.
-
-::
-
-	+---------------------------+
-	| BitTorrent messages       | -----+ lt_auth reaches down
-	+---------------------------+      | to the layer below
-	| (RC4 protocol encryption) | <----+
-	+-------------+-------------+
-	| TCP         | uTP         |
-	+----------+--+-----+-------+
-
-applications
-------------
-
-This is a low level building block and not a complete system for authenticated or
-private swarms. It does allow for peers to verify that a torrent comes from a
-trusted source (assuming their public key is known in advance). It also allows
-for publishers to limit access to content.
-
-For privacy reasons, it is possible to apply this extension in a way that each peer
-uses separate identities (key pairs) for every torrent it participates in.
-
-Issues not covered by this extension are:
-
-1. How the distribution of signed certificates are distributed to peers from
-   the signing authority (publisher), for use case (2).
-2. How peers discover each other and and *pair* by recognizing each other's
-   public keys for future trusted connections, for use case (3).
-3. How peers learn about the public keys of trusted publishers, for use case (1).
-
diff -ruN libtorrent-libtorrent_0_16_5/docs/dht_store.html libtorrent/docs/dht_store.html
--- libtorrent-libtorrent_0_16_5/docs/dht_store.html	2012-10-23 12:23:09.000000000 +0800
+++ libtorrent/docs/dht_store.html	1970-01-01 08:00:00.000000000 +0800
@@ -1,285 +0,0 @@
-<?xml version="1.0" encoding="utf-8" ?>
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
-<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
-<head>
-<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
-<meta name="generator" content="Docutils 0.5: http://docutils.sourceforge.net/" />
-<title>BitTorrent extension for arbitrary DHT store</title>
-<meta name="author" content="Arvid Norberg, arvid&#64;rasterbar.com" />
-<link rel="stylesheet" type="text/css" href="../../css/base.css" />
-<link rel="stylesheet" type="text/css" href="../../css/rst.css" />
-<script type="text/javascript">
-/* <![CDATA[ */
-    (function() {
-        var s = document.createElement('script'), t = document.getElementsByTagName('script')[0];
-        s.type = 'text/javascript';
-        s.async = true;
-        s.src = 'http://api.flattr.com/js/0.6/load.js?mode=auto';
-        t.parentNode.insertBefore(s, t);
-    })();
-/* ]]> */
-</script>
-<link rel="stylesheet" href="style.css" type="text/css" />
-<style type="text/css">
-/* Hides from IE-mac \*/
-* html pre { height: 1%; }
-/* End hide from IE-mac */
-</style>
-</head>
-<body>
-<div class="document" id="bittorrent-extension-for-arbitrary-dht-store">
-    <div id="container">
-    <div id="headerNav">
-    <ul>
-    <li class="first"><a href="/">Home</a></li>
-    <li><a href="../../products.html">Products</a></li>
-    <li><a href="../../contact.html">Contact</a></li>
-    </ul>
-    </div>
-    <div id="header">
-    <h1><span>Rasterbar Software</span></h1>
-    <h2><span>Software developement and consulting</span></h2>
-    </div>
-    <div id="main">
-<h1 class="title">BitTorrent extension for arbitrary DHT store</h1>
-<table class="docinfo" frame="void" rules="none">
-<col class="docinfo-name" />
-<col class="docinfo-content" />
-<tbody valign="top">
-<tr><th class="docinfo-name">Author:</th>
-<td>Arvid Norberg, <a class="last reference external" href="mailto:arvid&#64;rasterbar.com">arvid&#64;rasterbar.com</a></td></tr>
-<tr><th class="docinfo-name">Version:</th>
-<td>0.16.5</td></tr>
-</tbody>
-</table>
-<div class="contents topic" id="table-of-contents">
-<p class="topic-title first">Table of contents</p>
-<ul class="simple">
-<li><a class="reference internal" href="#terminology" id="id3">terminology</a></li>
-<li><a class="reference internal" href="#messages" id="id4">messages</a></li>
-<li><a class="reference internal" href="#immutable-items" id="id5">immutable items</a><ul>
-<li><a class="reference internal" href="#put-message" id="id6">put message</a></li>
-<li><a class="reference internal" href="#get-message" id="id7">get message</a></li>
-</ul>
-</li>
-<li><a class="reference internal" href="#mutable-items" id="id8">mutable items</a><ul>
-<li><a class="reference internal" href="#id1" id="id9">put message</a></li>
-<li><a class="reference internal" href="#id2" id="id10">get message</a></li>
-</ul>
-</li>
-<li><a class="reference internal" href="#signature-verification" id="id11">signature verification</a></li>
-<li><a class="reference internal" href="#expiration" id="id12">expiration</a></li>
-<li><a class="reference internal" href="#test-vectors" id="id13">test vectors</a></li>
-</ul>
-</div>
-<p>This is a proposal for an extension to the BitTorrent DHT to allow
-storing and retrieving of arbitrary data.</p>
-<p>It supports both storing <em>immutable</em> items, where the key is
-the SHA-1 hash of the data itself, and <em>mutable</em> items, where
-the key is the public key of the key pair used to sign the data.</p>
-<p>There are two new proposed messages, <tt class="docutils literal"><span class="pre">put</span></tt> and <tt class="docutils literal"><span class="pre">get</span></tt>.</p>
-<div class="section" id="terminology">
-<h1>terminology</h1>
-<p>In this document, a <em>storage node</em> refers to the node in the DHT to which
-an item is being announced and stored on. A <em>subscribing node</em> refers to
-a node which makes look-ups in the DHT to find the storage nodes, to
-request items from them, and possibly re-announce those items to keep them
-alive.</p>
-</div>
-<div class="section" id="messages">
-<h1>messages</h1>
-<p>The proposed new messages <tt class="docutils literal"><span class="pre">get</span></tt> and <tt class="docutils literal"><span class="pre">put</span></tt> are similar to the existing <tt class="docutils literal"><span class="pre">get_peers</span></tt>
-and <tt class="docutils literal"><span class="pre">announce_peer</span></tt>.</p>
-<p>Responses to <tt class="docutils literal"><span class="pre">get</span></tt> should always include <tt class="docutils literal"><span class="pre">nodes</span></tt> and <tt class="docutils literal"><span class="pre">nodes6</span></tt> has the same
-semantics as in its <tt class="docutils literal"><span class="pre">get_peers</span></tt> response. It should also include a write token,
-<tt class="docutils literal"><span class="pre">token</span></tt>, with the same semantics as <tt class="docutils literal"><span class="pre">get_peers</span></tt>.</p>
-<p>The <tt class="docutils literal"><span class="pre">id</span></tt> field in these messages has the same semantics as the standard DHT messages,
-i.e. the node ID of the node sending the message, to maintain the structure of the DHT
-network.</p>
-<p>The <tt class="docutils literal"><span class="pre">token</span></tt> field also has the same semantics as the standard DHT message <tt class="docutils literal"><span class="pre">get_peers</span></tt>
-and <tt class="docutils literal"><span class="pre">announce_peer</span></tt>, when requesting an item and to write an item respectively.</p>
-<p>The distinction between storing mutable and immutable items is the inclusion
-of a public key, a sequence number and signature (<tt class="docutils literal"><span class="pre">k</span></tt>, <tt class="docutils literal"><span class="pre">seq</span></tt> and <tt class="docutils literal"><span class="pre">sig</span></tt>).
-The distinction betwewn retrieving a mutable and immutable item is the inclusion of
-the public key spill-over (<tt class="docutils literal"><span class="pre">k</span></tt>) in the <tt class="docutils literal"><span class="pre">get</span></tt> request.</p>
-<p>The <tt class="docutils literal"><span class="pre">v</span></tt> key is the <em>value</em> to be stored. It is allowed to be any bencoded type (list,
-dict, string or integer). When it's being hashed (for verifying its signature or to calculate
-its key), its flattened, bencoded, form is used.</p>
-<p>Storing nodes are SHOULD reject <tt class="docutils literal"><span class="pre">put</span></tt> requests where the bencoded form of <tt class="docutils literal"><span class="pre">v</span></tt> is longer
-than 767 bytes.</p>
-</div>
-<div class="section" id="immutable-items">
-<h1>immutable items</h1>
-<p>Immutable items are stored under their SHA-1 hash, and since they cannot be modified,
-there is no need to authenticate the origin of them. This makes immutable items simple.</p>
-<div class="section" id="put-message">
-<h2>put message</h2>
-<p>Request:</p>
-<pre class="literal-block">
-{
-        &quot;a&quot;:
-        {
-                &quot;id&quot;: <em>&lt;20 byte id of sending node (string)&gt;</em>,
-                &quot;v&quot;: <em>&lt;any bencoded type, whose encoded size &lt; 768&gt;</em>
-        },
-        &quot;t&quot;: <em>&lt;transaction-id (string)&gt;</em>,
-        &quot;y&quot;: &quot;q&quot;,
-        &quot;q&quot;: &quot;put&quot;
-}
-</pre>
-<p>Response:</p>
-<pre class="literal-block">
-{
-        &quot;r&quot;: { &quot;id&quot;: <em>&lt;20 byte id of sending node (string)&gt;</em> },
-        &quot;t&quot;: <em>&lt;transaction-id (string)&gt;</em>,
-        &quot;y&quot;: &quot;r&quot;,
-}
-</pre>
-</div>
-<div class="section" id="get-message">
-<h2>get message</h2>
-<p>Request:</p>
-<pre class="literal-block">
-{
-        &quot;a&quot;:
-        {
-                &quot;id&quot;: <em>&lt;20 byte id of sending node (string)&gt;</em>,
-                &quot;target&quot;: <em>&lt;SHA-1 hash of item (string)&gt;</em>,
-        },
-        &quot;t&quot;: <em>&lt;transaction-id (string)&gt;</em>,
-        &quot;y&quot;: &quot;q&quot;,
-        &quot;q&quot;: &quot;get&quot;
-}
-</pre>
-<p>Response:</p>
-<pre class="literal-block">
-{
-   &quot;r&quot;:
-        {
-                &quot;id&quot;: <em>&lt;20 byte id of sending node (string)&gt;</em>,
-                &quot;token&quot;: <em>&lt;write token (string)&gt;</em>,
-                &quot;v&quot;: <em>&lt;any bencoded type whose SHA-1 hash matches 'target'&gt;</em>,
-                &quot;nodes&quot;: <em>&lt;IPv4 nodes close to 'target'&gt;</em>
-                &quot;nodes6&quot;: <em>&lt;IPv6 nodes close to 'target'&gt;</em>
-        },
-        &quot;t&quot;: <em>&lt;transaction-id&gt;</em>,
-        &quot;y&quot;: &quot;r&quot;,
-}
-</pre>
-</div>
-</div>
-<div class="section" id="mutable-items">
-<h1>mutable items</h1>
-<p>Mutable items can be updated, without changing their DHT keys. To authenticate
-that only the original publisher can update an item, it is signed by a private key
-generated by the original publisher.</p>
-<p>In order to avoid a malicious node to overwrite the list head with an old
-version, the sequence number <tt class="docutils literal"><span class="pre">seq</span></tt> must be monotonically increasing for each update,
-and a node hosting the list node MUST not downgrade a list head from a higher sequence
-number to a lower one, only upgrade.</p>
-<p>The signature is a 2048 bit RSA signature of the SHA-1 hash of the bencoded sequence
-number and <tt class="docutils literal"><span class="pre">v</span></tt> key. e.g. something like this:: <tt class="docutils literal"><span class="pre">3:seqi4e1:v12:Hello</span> <span class="pre">world!</span></tt>.</p>
-<div class="section" id="id1">
-<h2>put message</h2>
-<p>Request:</p>
-<pre class="literal-block">
-{
-        &quot;a&quot;:
-        {
-                &quot;id&quot;: <em>&lt;20 byte id of sending node (string)&gt;</em>,
-                &quot;k&quot;: <em>&lt;RSA-2048 public key (268 bytes string)&gt;</em>,
-                &quot;seq&quot;: <em>&lt;monotonically increasing sequence number (integer)&gt;</em>,
-                &quot;sig&quot;: <em>&lt;RSA-2048 signature (256 bytes string)&gt;</em>,
-                &quot;token&quot;: <em>&lt;write-token (string)&gt;</em>,
-                &quot;v&quot;: <em>&lt;any bencoded type, whose encoded size &lt; 768&gt;</em>
-        },
-        &quot;t&quot;: <em>&lt;transaction-id (string)&gt;</em>,
-        &quot;y&quot;: &quot;q&quot;,
-        &quot;q&quot;: &quot;put&quot;
-}
-</pre>
-<p>Storing nodes receiving a <tt class="docutils literal"><span class="pre">put</span></tt> request where <tt class="docutils literal"><span class="pre">seq</span></tt> is lower than what's already
-stored on the node, MUST reject the request.</p>
-<p>Response:</p>
-<pre class="literal-block">
-{
-        &quot;r&quot;: { &quot;id&quot;: <em>&lt;20 byte id of sending node (string)&gt;</em> },
-        &quot;t&quot;: <em>&lt;transaction-id (string)&gt;</em>,
-        &quot;y&quot;: &quot;r&quot;,
-}
-</pre>
-</div>
-<div class="section" id="id2">
-<h2>get message</h2>
-<p>Request:</p>
-<pre class="literal-block">
-{
-        &quot;r&quot;:
-        {
-                &quot;id&quot;: <em>&lt;20 byte id of sending node (string)&gt;</em>,
-                &quot;target:&quot; <em>&lt;first 20 bytes of public key (string)&gt;</em>,
-                &quot;k&quot;: <em>&lt;remaining 248 bytes of public key (string)&gt;</em>
-        },
-        &quot;t&quot;: <em>&lt;transaction-id (string)&gt;</em>,
-        &quot;y&quot;: &quot;r&quot;,
-        &quot;q&quot;: &quot;get&quot;
-}
-</pre>
-<p>Response:</p>
-<pre class="literal-block">
-{
-        &quot;r&quot;:
-        {
-                &quot;id&quot;: <em>&lt;20 byte id of sending node (string)&gt;</em>,
-                &quot;k&quot;: <em>&lt;RSA-2048 public key (268 bytes string)&gt;</em>,
-                &quot;seq&quot;: <em>&lt;monotonically increasing sequence number (integer)&gt;</em>,
-                &quot;sig&quot;: <em>&lt;RSA-2048 signature (256 bytes string)&gt;</em>,
-                &quot;token&quot;: <em>&lt;write-token (string)&gt;</em>,
-                &quot;v&quot;: <em>&lt;any bencoded type, whose encoded size &lt; 768&gt;</em>
-
-        },
-        &quot;t&quot;: <em>&lt;transaction-id (string)&gt;</em>,
-        &quot;y&quot;: &quot;r&quot;,
-}
-</pre>
-</div>
-</div>
-<div class="section" id="signature-verification">
-<h1>signature verification</h1>
-<p>In order to make it maximally difficult to attack the bencoding parser, signing and verification of the
-value and sequence number should be done as follows:</p>
-<ol class="arabic simple">
-<li>encode value and sequence number separately</li>
-<li>concatenate &quot;3:seqi&quot; <tt class="docutils literal"><span class="pre">seq</span></tt> &quot;e1:v&quot; and the encoded value.
-sequence number 1 of value &quot;Hello World!&quot; would be converted to: 3:seqi1e1:v12:Hello World!
-In this way it is not possible to convince a node that part of the length is actually part of the
-sequence number even if the parser contains certain bugs. Furthermore it is not possible to have a
-verification failure if a bencoding serializer alters the order of entries in the dictionary.</li>
-<li>hash the concatenated string with SHA-1</li>
-<li>sign or verify the hash digest.</li>
-</ol>
-</div>
-<div class="section" id="expiration">
-<h1>expiration</h1>
-<p>Without re-announcement, these items MAY expire in 2 hours. In order
-to keep items alive, they SHOULD be re-announced once an hour.</p>
-<p>Subscriber nodes MAY help out in announcing items the are interested in to the DHT,
-to keep them alive.</p>
-</div>
-<div class="section" id="test-vectors">
-<h1>test vectors</h1>
-</div>
-    </div>
-    <div id="footer">
-    <span>Copyright &copy; 2005 Rasterbar Software.</span>
-    </div>
-    </div>
-    <script src="http://www.google-analytics.com/urchin.js" type="text/javascript">
-    </script>
-    <script type="text/javascript">
-    _uacct = "UA-1599045-1";
-    urchinTracker();
-    </script>
-</div>
-</body>
-</html>
diff -ruN libtorrent-libtorrent_0_16_5/docs/dht_store.rst libtorrent/docs/dht_store.rst
--- libtorrent-libtorrent_0_16_5/docs/dht_store.rst	2012-10-23 12:23:09.000000000 +0800
+++ libtorrent/docs/dht_store.rst	1970-01-01 08:00:00.000000000 +0800
@@ -1,244 +0,0 @@
-============================================
-BitTorrent extension for arbitrary DHT store
-============================================
-
-:Author: Arvid Norberg, arvid@rasterbar.com
-:Version: 0.16.5
-
-.. contents:: Table of contents
-  :depth: 2
-  :backlinks: none
-
-This is a proposal for an extension to the BitTorrent DHT to allow
-storing and retrieving of arbitrary data.
-
-It supports both storing *immutable* items, where the key is
-the SHA-1 hash of the data itself, and *mutable* items, where
-the key is the public key of the key pair used to sign the data.
-
-There are two new proposed messages, ``put`` and ``get``.
-
-terminology
------------
-
-In this document, a *storage node* refers to the node in the DHT to which
-an item is being announced and stored on. A *subscribing node* refers to
-a node which makes look-ups in the DHT to find the storage nodes, to
-request items from them, and possibly re-announce those items to keep them
-alive.
-
-messages
---------
-
-The proposed new messages ``get`` and ``put`` are similar to the existing ``get_peers``
-and ``announce_peer``.
-
-Responses to ``get`` should always include ``nodes`` and ``nodes6`` has the same
-semantics as in its ``get_peers`` response. It should also include a write token,
-``token``, with the same semantics as ``get_peers``.
-
-The ``id`` field in these messages has the same semantics as the standard DHT messages,
-i.e. the node ID of the node sending the message, to maintain the structure of the DHT
-network.
-
-The ``token`` field also has the same semantics as the standard DHT message ``get_peers``
-and ``announce_peer``, when requesting an item and to write an item respectively.
-
-The distinction between storing mutable and immutable items is the inclusion
-of a public key, a sequence number and signature (``k``, ``seq`` and ``sig``).
-The distinction betwewn retrieving a mutable and immutable item is the inclusion of
-the public key spill-over (``k``) in the ``get`` request.
-
-The ``v`` key is the *value* to be stored. It is allowed to be any bencoded type (list,
-dict, string or integer). When it's being hashed (for verifying its signature or to calculate
-its key), its flattened, bencoded, form is used.
-
-Storing nodes are SHOULD reject ``put`` requests where the bencoded form of ``v`` is longer
-than 767 bytes.
-
-immutable items
----------------
-
-Immutable items are stored under their SHA-1 hash, and since they cannot be modified,
-there is no need to authenticate the origin of them. This makes immutable items simple.
-
-put message
-...........
-
-Request:
-
-.. parsed-literal::
-
-	{
-		"a":
-		{
-			"id": *<20 byte id of sending node (string)>*,
-			"v": *<any bencoded type, whose encoded size < 768>*
-		},
-		"t": *<transaction-id (string)>*,
-		"y": "q",
-		"q": "put"
-	}
-
-Response:
-
-.. parsed-literal::
-
-	{
-		"r": { "id": *<20 byte id of sending node (string)>* },
-		"t": *<transaction-id (string)>*,
-		"y": "r",
-	}
-
-get message
-...........
-
-Request:
-
-.. parsed-literal::
-
-	{
-		"a":
-		{
-			"id": *<20 byte id of sending node (string)>*,
-			"target": *<SHA-1 hash of item (string)>*,
-		},
-		"t": *<transaction-id (string)>*,
-		"y": "q",
-		"q": "get"
-	}
-
-Response:
-
-.. parsed-literal::
-
-	{
-	   "r":
-		{
-			"id": *<20 byte id of sending node (string)>*,
-			"token": *<write token (string)>*,
-			"v": *<any bencoded type whose SHA-1 hash matches 'target'>*,
-			"nodes": *<IPv4 nodes close to 'target'>*
-			"nodes6": *<IPv6 nodes close to 'target'>*
-		},
-		"t": *<transaction-id>*,
-		"y": "r",
-	}
-
-
-mutable items
--------------
-
-Mutable items can be updated, without changing their DHT keys. To authenticate
-that only the original publisher can update an item, it is signed by a private key
-generated by the original publisher.
-
-In order to avoid a malicious node to overwrite the list head with an old
-version, the sequence number ``seq`` must be monotonically increasing for each update,
-and a node hosting the list node MUST not downgrade a list head from a higher sequence
-number to a lower one, only upgrade.
-
-The signature is a 2048 bit RSA signature of the SHA-1 hash of the bencoded sequence
-number and ``v`` key. e.g. something like this:: ``3:seqi4e1:v12:Hello world!``.
-
-put message
-...........
-
-Request:
-
-.. parsed-literal::
-
-	{
-		"a":
-		{
-			"id": *<20 byte id of sending node (string)>*,
-			"k": *<RSA-2048 public key (268 bytes string)>*,
-			"seq": *<monotonically increasing sequence number (integer)>*,
-			"sig": *<RSA-2048 signature (256 bytes string)>*,
-			"token": *<write-token (string)>*,
-			"v": *<any bencoded type, whose encoded size < 768>*
-		},
-		"t": *<transaction-id (string)>*,
-		"y": "q",
-		"q": "put"
-	}
-
-Storing nodes receiving a ``put`` request where ``seq`` is lower than what's already
-stored on the node, MUST reject the request.
-
-Response:
-
-.. parsed-literal::
-
-	{
-		"r": { "id": *<20 byte id of sending node (string)>* },
-		"t": *<transaction-id (string)>*,
-		"y": "r",
-	}
-
-get message
-...........
-
-Request:
-
-.. parsed-literal::
-
-	{
-		"r":
-		{
-			"id": *<20 byte id of sending node (string)>*,
-			"target:" *<first 20 bytes of public key (string)>*,
-			"k": *<remaining 248 bytes of public key (string)>*
-		},
-		"t": *<transaction-id (string)>*,
-		"y": "r",
-		"q": "get"
-	}
-
-Response:
-
-.. parsed-literal::
-
-	{
-		"r":
-		{
-			"id": *<20 byte id of sending node (string)>*,
-			"k": *<RSA-2048 public key (268 bytes string)>*,
-			"seq": *<monotonically increasing sequence number (integer)>*,
-			"sig": *<RSA-2048 signature (256 bytes string)>*,
-			"token": *<write-token (string)>*,
-			"v": *<any bencoded type, whose encoded size < 768>*
-
-		},
-		"t": *<transaction-id (string)>*,
-		"y": "r",
-	}
-
-signature verification
-----------------------
-
-In order to make it maximally difficult to attack the bencoding parser, signing and verification of the
-value and sequence number should be done as follows:
-
-1. encode value and sequence number separately
-2. concatenate "3:seqi" ``seq`` "e1:v" and the encoded value.
-   sequence number 1 of value "Hello World!" would be converted to: 3:seqi1e1:v12:Hello World!
-   In this way it is not possible to convince a node that part of the length is actually part of the
-   sequence number even if the parser contains certain bugs. Furthermore it is not possible to have a
-   verification failure if a bencoding serializer alters the order of entries in the dictionary.
-3. hash the concatenated string with SHA-1
-4. sign or verify the hash digest.
-
-expiration
-----------
-
-Without re-announcement, these items MAY expire in 2 hours. In order
-to keep items alive, they SHOULD be re-announced once an hour.
-
-Subscriber nodes MAY help out in announcing items the are interested in to the DHT,
-to keep them alive.
-
-test vectors
-------------
-
-
Binary files libtorrent-libtorrent_0_16_5/docs/disk_access_elevator.png and libtorrent/docs/disk_access_elevator.png differ
Binary files libtorrent-libtorrent_0_16_5/docs/disk_access_no_elevator.png and libtorrent/docs/disk_access_no_elevator.png differ
Binary files libtorrent-libtorrent_0_16_5/docs/folx.png and libtorrent/docs/folx.png differ
diff -ruN libtorrent-libtorrent_0_16_5/docs/hacking.rst libtorrent/docs/hacking.rst
--- libtorrent-libtorrent_0_16_5/docs/hacking.rst	2012-10-23 12:23:09.000000000 +0800
+++ libtorrent/docs/hacking.rst	1970-01-01 08:00:00.000000000 +0800
@@ -1,155 +0,0 @@
-==================
-libtorrent hacking
-==================
-
-:Author: Arvid Norberg, arvid@rasterbar.com
-:Version: 0.16.5
-
-.. contents:: Table of contents
-  :depth: 2
-  :backlinks: none
-
-terminology
-===========
-
-This section describes some of the terminology used throughout the
-libtorrent source. Having a good understanding of some of these keywords
-helps understanding what's going on.
-
-A *piece* is a part of the data of a torrent that has a SHA-1 hash in
-the .torrent file. Pieces are almost always a power of two in size, but not
-necessarily. Each piece is plit up in *blocks*, which is a 16 kiB. A block
-never spans two pieces. If a piece is smaller than 16 kiB or not divisible
-by 16 kiB, there are blocks smaller than that.
-
-16 kiB is a de-facto standard of the largest transfer unit in the bittorrent
-protocol. Clients typically reject any request for larger pieces than this.
-
-The *piece picker* is the part of a bittorrent client that is responsible for
-the logic to determine which requests to send to peers. It doesn't actually
-pick full pieces, but blocks (from pieces).
-
-The file layout of a torrent is represented by *file storage* objects. This
-class contains a list of all files in the torrent (in a well defined order),
-the size of the pieces and implicitly the total size of the whole torrent and
-number of pieces. The file storage determines the mapping from *pieces*
-to *files*. This representation may be quite complex in order to keep it extremely
-compact. This is useful to load very large torrents without exploding in memory
-usage.
-
-A *torrent* object represents all the state of swarm download. This includes
-a piece picker, a list of peer connections, file storage (torrent file). One
-important distiction is between a connected peer (*peer_connection*) and a peer
-we just know about, and may have been connected to, and may connect to in the
-future (*policy::peer*). The list of (not connected) peers may grow very large
-if not limited (through tracker responses, DHT and peer exchange). This list
-is typically limited to a few thousand peers.
-
-The *policy* in libtorrent is somewhat poorly named. It was initially intended
-to be a customization point where a client could define peer selection behavior
-and unchoke logic. It didn't end up being though, and a more accurate name would
-be peer_list. It really just maintains a potentially large list of known peers
-for a swarm (not necessarily connected).
-
-structure
-=========
-
-This is the high level structure of libtorrent. Bold types are part of the public
-interface:
-
-.. parsed-literal::
-
-	+=========+  pimpl     +-------------------+
-	| **session** | ---------> | aux::session_impl |
-	+=========+            +-------------------+
-	                m_torrents[]  |  |
-	+================+            |  |
-	| **torrent_handle** | ------+    |  |
-	+================+       |    |  |
-	                         |    |  | m_connections[]
-	                         |    |  |
-	                         |    |  +---------------------+
-	         m_picker        v    v                        |
-	 +--------------+      +---------+---------+-- . .     |
-	 | piece_picker | <--+-| torrent | torrent | to        |
-	 +--------------+    | +---------+---------+-- . .     |
-	      m_torrent_file |      | m_connections[]          |
-	 +==============+    |      |                          |
-	 | **torrent_info** | <--+      v                          v
-	 +==============+    |     +-----------------+-----------------+-- . .
-	            m_policy |     | peer_connection | peer_connection | pe
-	 +--------+          |     +-----------------+-----------------+-- . .
-	 | policy | <--------+      |             | m_socket
-	 +--------+                 |             |
-	   | m_peers[]              |             v
-	   |                        |            +-----------------------+
-	   |                        |            | socket_type (variant) |
-	   v                        |            +-----------------------+
-	+--------------+            |
-	| policy::peer |            |
-	+--------------+            |
-	| policy::peer |            |
-	+--------------+ m_peer_info|
-	| policy::peer | <----------+
-	+--------------+
-	.              .
-	+ - - - - - - -+
-
-session_impl
-------------
-
-This is the session state object, containing all session global information, such as:
-
-	* the list of all torrents ``m_torrent``.
-	* the list of all peer connections ``m_connections``.
-	* the global rate limits ``m_settings``.
-	* the DHT state ``m_dht``.
-	* the port mapping state, ``m_upnp`` and ``m_natpmp``.
-
-session
--------
-
-This is the public interface to the session. It implements pimpl (pointer to implementation)
-in order to hide the internal representation of the ``session_impl`` object from the user and
-make binary compatibility simpler to maintain.
-
-torrent_handle
---------------
-
-This is the public interface to a ``torrent``. It holds a weak reference to the internal
-``torrent`` object and manipulates it by sending messages to the network thread.
-
-torrent
--------
-
-peer_connection
----------------
-
-policy
-------
-
-piece_picker
-------------
-
-torrent_info
-------------
-
-threads
-=======
-
-libtorrent starts 2 or 3 threads.
-
- * The first thread is the main thread that will sit
-   idle in a ``kqueue()`` or ``epoll`` call most of the time.
-   This thread runs the main loop that will send and receive
-   data on all connections.
-
- * The second thread is the disk I/O thread. All disk read and write operations
-   are passed to this thread and messages are passed back to the main thread when
-   the operation completes. The disk thread also verifies the piece hashes.
-
- * The third and forth threads are spawned by asio on systems that don't support
-   non-blocking host name resolution to simulate non-blocking getaddrinfo().
-
-
-
Binary files libtorrent-libtorrent_0_16_5/docs/ip_id_v4.png and libtorrent/docs/ip_id_v4.png differ
Binary files libtorrent-libtorrent_0_16_5/docs/ip_id_v6.png and libtorrent/docs/ip_id_v6.png differ
diff -ruN libtorrent-libtorrent_0_16_5/docs/ips.py libtorrent/docs/ips.py
--- libtorrent-libtorrent_0_16_5/docs/ips.py	2012-10-23 12:23:09.000000000 +0800
+++ libtorrent/docs/ips.py	1970-01-01 08:00:00.000000000 +0800
@@ -1,56 +0,0 @@
-#/bin/python
-
-import os
-import sys
-
-def num_ids(bits, total_bits):
-
-	if total_bits == 32:
-		bit_dec = 2
-	else:
-		bit_dec = 1
-
-	num_used = 7;
-	ret = 3
-
-	while bits > 0:
-		ret += min(num_used, bits)
-		num_used -= bit_dec
-		if num_used < 0: num_used = 0
-		bits -= 8
-	
-	return 1 << ret
-
-f = open('ip_id_v4.dat', 'w+')
-for i in range(0, 33):
-	print >>f, '%d\t%d\t%d' % (i, num_ids(i, 32), 1 << i)
-f.close()
-
-f = open('ip_id_v6.dat', 'w+')
-for i in range(0, 65):
-	print >>f, '%d\t%d\t%d' % (i, num_ids(i, 64), 1 << i)
-f.close()
-
-f = open('ip_id.gnuplot', 'w+')
-
-f.write('''
-set term png size 600,300
-set output "ip_id_v4.png"
-set logscale y
-set title "Number of possible node IDs"
-set ylabel "possible node IDs"
-set xlabel "bits controlled in IPv4"
-set xtics 4
-set grid
-plot "ip_id_v4.dat" using 1:2 title "octet-wise modulus" with lines, \
-	"ip_id_v4.dat" using 1:3 title "hash of IP" with lines
-
-set output "ip_id_v6.png"
-set title "Number of possible node IDs"
-set xlabel "bits controlled in IPv6"
-plot "ip_id_v6.dat" using 1:2 title "octet-wise modulus" with lines, \
-	"ip_id_v6.dat" using 1:3 title "hash of IP" with lines
-''')
-f.close()
-os.system('gnuplot ip_id.gnuplot')
-
diff -ruN libtorrent-libtorrent_0_16_5/docs/makefile libtorrent/docs/makefile
--- libtorrent-libtorrent_0_16_5/docs/makefile	2012-10-23 12:23:09.000000000 +0800
+++ libtorrent/docs/makefile	1970-01-01 08:00:00.000000000 +0800
@@ -1,53 +0,0 @@
-# this makefile assumes that you have docutils and rst2pdf installed
-
-WEB_PATH = ~/Documents/rasterbar/web/products/libtorrent
-
-TARGETS = index \
-	udp_tracker_protocol \
-	dht_rss \
-	dht_store \
-	auth \
-	client_test \
-	manual \
-	building \
-	features \
-	contributing\
-	examples \
-	extension_protocol \
-	make_torrent \
-	dht_extensions \
-	dht_sec \
-	libtorrent_plugins \
-	python_binding \
-	projects \
-	running_tests \
-	utp \
-	tuning \
-	hacking
-
-FIGURES = read_disk_buffers write_disk_buffers troubleshooting
-
-html: $(TARGETS:=.html) $(FIGURES:=.png)
-
-pdf: $(TARGETS:=.pdf) $(FIGURES:=.eps)
-
-all: html
-
-%.pdf:%.rst
-	rst2pdf $? -o $@ --stylesheets stylesheet
-
-%.html:%.rst
-	rst2html.py --template=template.txt --stylesheet-path=style.css --link-stylesheet --no-toc-backlinks $? > $@
-	cp $@ $(WEB_PATH)/$@
-
-%.png:%.dot
-	dot -Tpng $? >$@
-	cp $@ $(WEB_PATH)/$@
-
-%.eps:%.dot
-	dot -Teps $? >$@
-	cp $@ $(WEB_PATH)/$@
-
-clean:
-	rm -f $(TARGETS:=.html) $(TARGETS:=.pdf)
-
diff -ruN libtorrent-libtorrent_0_16_5/docs/make_thumb.sh libtorrent/docs/make_thumb.sh
--- libtorrent-libtorrent_0_16_5/docs/make_thumb.sh	2012-10-23 12:23:09.000000000 +0800
+++ libtorrent/docs/make_thumb.sh	1970-01-01 08:00:00.000000000 +0800
@@ -1,2 +0,0 @@
-convert $1 -resize 150x130 $1
-
diff -ruN libtorrent-libtorrent_0_16_5/docs/stylesheet libtorrent/docs/stylesheet
--- libtorrent-libtorrent_0_16_5/docs/stylesheet	2012-10-23 12:23:09.000000000 +0800
+++ libtorrent/docs/stylesheet	1970-01-01 08:00:00.000000000 +0800
@@ -1,287 +0,0 @@
-{
-  "embeddedFonts" : [ ],
-  "pageSetup" : {
-    "size": "A4",
-    "width": null,
-    "height": null,
-    "margin-top": "2cm",
-    "margin-bottom": "2cm",
-    "margin-left": "2cm",
-    "margin-right": "2cm",
-    "margin-gutter": "0cm",
-    "firstTemplate": "oneColumn"
-  },
-  "pageTemplates" : {
-    "coverPage": {
-        "frames": [
-            ["0cm", "0cm", "100%", "100%"]
-        ],
-        "showHeader" : false,
-        "showFooter" : false
-    },
-    "oneColumn": {
-        "frames": [
-            ["0cm", "0cm", "100%", "100%"]
-        ]
-    },
-    "twoColumn": {
-        "frames": [
-            ["0cm", "0cm", "49%", "100%"],
-            ["51%", "0cm", "49%", "100%"]
-        ]
-    }
-  },
-  "fontsAlias" : {
-    "stdFont": "Times-Roman",
-    "stdBold": "Times-Bold",
-    "stdItalic": "Times-Italic",
-    "stdBoldItalic": "Times-BoldItalic",
-    "stdMono": "Courier",
-    "stdMonoItalic": "Courier-Oblique",
-    "stdMonoBold": "Courier-Bold",
-    "stdMonoBoldItalic": "Courier-BoldOblique",
-    "stdSerif": "Times-Roman"
-  },
-  "linkColor" : "black",
-  "styles" : [
-    [ "base" , {
-      "parent": null,
-      "fontName": "stdFont",
-      "fontSize":10,
-      "leading":12,
-      "leftIndent":0,
-      "rightIndent":0,
-      "firstLineIndent":0,
-      "alignment":"TA_LEFT",
-      "spaceBefore":0,
-      "spaceAfter":0,
-      "bulletFontName":"stdFont",
-      "bulletFontSize":10,
-      "bulletIndent":0,
-      "textColor": "black",
-      "backColor": null,
-      "wordWrap": null,
-      "borderWidth": 0,
-      "borderPadding": 0,
-      "borderColor": null,
-      "borderRadius": null,
-      "allowWidows": false,
-      "allowOrphans": false,
-      "hyphenation": false
-    }] ,
-    ["normal" , {
-      "parent": "base"
-    }],
-    ["title-reference" , {
-      "parent": "normal",
-      "fontName": "stdItalic"
-    }],
-    ["bodytext" , {
-      "parent": "normal",
-      "spaceBefore":6,
-      "alignment": "TA_JUSTIFY",
-      "hyphenation": true
-    }],
-    ["footer" , {
-      "parent": "normal",
-      "alignment": "TA_CENTER"
-    }],
-    ["header" , {
-      "parent": "normal",
-      "alignment": "TA_CENTER"
-    }],
-    ["attribution" , {
-      "parent": "bodytext",
-      "alignment": "TA_RIGHT"
-    }],
-    ["figure" , {
-      "parent": "bodytext",
-      "alignment": "TA_CENTER"
-    }],
-    ["definition-list-term" , {
-      "parent": "normal",
-      "fontName": "stdBold",
-      "spaceBefore": 4,
-      "spaceAfter": 0,
-      "keepWithNext": true
-    }],
-    ["definition-list-classifier" , {
-      "parent": "normal",
-      "fontName": "stdItalic"
-    }],
-    ["definition" , {
-      "parent": "bodytext",
-      "firstLineIndent": 0,
-      "bulletIndent": 0,
-      "spaceBefore": 0
-    }],
-    ["fieldname" , {
-      "parent": "bodytext",
-      "alignment": "TA_RIGHT",
-      "fontName": "stdBold"
-    }],
-    ["rubric" , {
-      "parent": "bodytext",
-      "textColor": "darkred",
-      "alignment": "TA_CENTER"
-    }],
-    ["italic" , {
-      "parent": "bodytext",
-      "fontName": "stdItalic"
-    }],
-    ["title" , {
-      "parent": "normal",
-      "fontName": "stdBold",
-      "fontSize": "200%",
-      "alignment": "TA_CENTER",
-      "spaceBefore": 12,
-      "spaceAfter": 10
-    }],
-    ["subtitle" , {
-      "parent": "title",
-      "spaceBefore": 9,
-      "spaceAfter": 6,
-      "fontSize": "75%"
-    }],
-    ["heading1" , {
-      "parent": "normal",
-      "fontName": "stdBold",
-      "fontSize": "150%",
-      "keepWithNext": true,
-      "spaceBefore": 9,
-      "spaceAfter": 3
-    }],
-    ["heading2" , {
-      "parent": "normal",
-      "fontName": "stdBold",
-      "fontSize": "125%",
-      "keepWithNext": true,
-      "spaceBefore": 9,
-      "spaceAfter": 3
-    }],
-    ["heading3" , {
-      "parent": "normal",
-      "fontName": "stdBold",
-      "keepWithNext": true,
-      "spaceBefore": 4,
-      "spaceAfter": 2
-    }],
-    ["heading4" , {
-      "parent": "normal",
-      "fontName": "stdBold",
-      "keepWithNext": true
-    }],
-    ["sidebar-title" , {
-      "parent": "heading3"
-    }],
-    ["sidebar-subtitle" , {
-      "parent": "heading4"
-    }],
-    ["sidebar" , {
-      "float": "left",
-      "width": "30%",
-      "parent": "normal",
-      "backColor": "beige",
-      "borderColor": "darkgray",
-      "borderPadding": 8,
-      "borderWidth": 0.5
-    }],
-    ["literal" , {
-      "parent": "normal",
-      "fontName": "stdMono",
-      "firstLineIndent": 0
-    }],
-    ["table" , {
-      "rowBackgrounds" : ["f0f0d8","#ffffe8"],
-      "borderColor": "white"
-    }],
-    ["table-title" , {
-      "parent" : "heading4",
-      "backColor" : "#e0e0c8",
-      "alignment" : "TA_CENTER"
-    }],
-    ["table-heading" , {
-      "parent" : "heading4",
-      "backColor" : "#e0e0c0",
-      "alignment" : "TA_CENTER",
-      "valign" : "BOTTOM"
-    }],
-    ["code" , {
-      "parent": "literal",
-      "fontSize": "75%",
-      "leftIndent": 0,
-      "spaceBefore": 5,
-      "spaceAfter": 5,
-      "backColor": "#e7e7e7",
-      "borderColor": "#808080",
-      "borderRadius": 3,
-      "borderWidth": 0.5,
-      "borderPadding": 4
-    }],
-    ["pygments-n" , {"parent": "code"}],
-    ["pygments-nx" , {"parent": "code"}],
-    ["pygments-p" , {"parent": "code"}],
-    ["pygments-hll", {"parent": "code", "backColor": "#ffffcc"}],
-    ["pygments-c", {"textColor": "#008800", "parent": "code"}],
-    ["pygments-err", {"parent": "code"}],
-    ["pygments-k", {"textColor": "#AA22FF", "parent": "code"}],
-    ["pygments-o", {"textColor": "#666666", "parent": "code"}],
-    ["pygments-cm", {"textColor": "#008800", "parent": "code"}],
-    ["pygments-cp", {"textColor": "#008800", "parent": "code"}],
-    ["pygments-c1", {"textColor": "#008800", "parent": "code"}],
-    ["pygments-cs", {"textColor": "#008800", "parent": "code"}],
-    ["pygments-gd", {"textColor": "#A00000", "parent": "code"}],
-    ["pygments-ge", {"parent": "code"}],
-    ["pygments-gr", {"textColor": "#FF0000", "parent": "code"}],
-    ["pygments-gh", {"textColor": "#000080", "parent": "code"}],
-    ["pygments-gi", {"textColor": "#00A000", "parent": "code"}],
-    ["pygments-go", {"textColor": "#808080", "parent": "code"}],
-    ["pygments-gp", {"textColor": "#000080", "parent": "code"}],
-    ["pygments-gs", {"parent": "code"}],
-    ["pygments-gu", {"textColor": "#800080", "parent": "code"}],
-    ["pygments-gt", {"textColor": "#0040D0", "parent": "code"}],
-    ["pygments-kc", {"textColor": "#AA22FF", "parent": "code"}],
-    ["pygments-kd", {"textColor": "#AA22FF", "parent": "code"}],
-    ["pygments-kn", {"textColor": "#AA22FF", "parent": "code"}],
-    ["pygments-kp", {"textColor": "#AA22FF", "parent": "code"}],
-    ["pygments-kr", {"textColor": "#AA22FF", "parent": "code"}],
-    ["pygments-kt", {"textColor": "#00BB00", "parent": "code"}],
-    ["pygments-m", {"textColor": "#666666", "parent": "code"}],
-    ["pygments-s", {"textColor": "#BB4444", "parent": "code"}],
-    ["pygments-na", {"textColor": "#BB4444", "parent": "code"}],
-    ["pygments-nb", {"textColor": "#AA22FF", "parent": "code"}],
-    ["pygments-nc", {"textColor": "#0000FF", "parent": "code"}],
-    ["pygments-no", {"textColor": "#880000", "parent": "code"}],
-    ["pygments-nd", {"textColor": "#AA22FF", "parent": "code"}],
-    ["pygments-ni", {"textColor": "#999999", "parent": "code"}],
-    ["pygments-ne", {"textColor": "#D2413A", "parent": "code"}],
-    ["pygments-nf", {"textColor": "#00A000", "parent": "code"}],
-    ["pygments-nl", {"textColor": "#A0A000", "parent": "code"}],
-    ["pygments-nn", {"textColor": "#0000FF", "parent": "code"}],
-    ["pygments-nt", {"textColor": "#008000", "parent": "code"}],
-    ["pygments-nv", {"textColor": "#B8860B", "parent": "code"}],
-    ["pygments-ow", {"textColor": "#AA22FF", "parent": "code"}],
-    ["pygments-w", {"textColor": "#bbbbbb", "parent": "code"}],
-    ["pygments-mf", {"textColor": "#666666", "parent": "code"}],
-    ["pygments-mh", {"textColor": "#666666", "parent": "code"}],
-    ["pygments-mi", {"textColor": "#666666", "parent": "code"}],
-    ["pygments-mo", {"textColor": "#666666", "parent": "code"}],
-    ["pygments-sb", {"textColor": "#BB4444", "parent": "code"}],
-    ["pygments-sc", {"textColor": "#BB4444", "parent": "code"}],
-    ["pygments-sd", {"textColor": "#BB4444", "parent": "code"}],
-    ["pygments-s2", {"textColor": "#BB4444", "parent": "code"}],
-    ["pygments-se", {"textColor": "#BB6622", "parent": "code"}],
-    ["pygments-sh", {"textColor": "#BB4444", "parent": "code"}],
-    ["pygments-si", {"textColor": "#BB6688", "parent": "code"}],
-    ["pygments-sx", {"textColor": "#008000", "parent": "code"}],
-    ["pygments-sr", {"textColor": "#BB6688", "parent": "code"}],
-    ["pygments-s1", {"textColor": "#BB4444", "parent": "code"}],
-    ["pygments-ss", {"textColor": "#B8860B", "parent": "code"}],
-    ["pygments-bp", {"textColor": "#AA22FF", "parent": "code"}],
-    ["pygments-vc", {"textColor": "#B8860B", "parent": "code"}],
-    ["pygments-vg", {"textColor": "#B8860B", "parent": "code"}],
-    ["pygments-vi", {"textColor": "#B8860B", "parent": "code"}],
-    ["pygments-il", {"textColor": "#666666", "parent": "code"}]
-  ]
-}
-
diff -ruN libtorrent-libtorrent_0_16_5/docs/template.txt libtorrent/docs/template.txt
--- libtorrent-libtorrent_0_16_5/docs/template.txt	2012-10-23 12:23:09.000000000 +0800
+++ libtorrent/docs/template.txt	1970-01-01 08:00:00.000000000 +0800
@@ -1,50 +0,0 @@
-%(head_prefix)s
-%(head)s
-<link rel="stylesheet" type="text/css" href="../../css/base.css" />
-<link rel="stylesheet" type="text/css" href="../../css/rst.css" />
-<script type="text/javascript">
-/* <![CDATA[ */
-    (function() {
-        var s = document.createElement('script'), t = document.getElementsByTagName('script')[0];
-        s.type = 'text/javascript';
-        s.async = true;
-        s.src = 'http://api.flattr.com/js/0.6/load.js?mode=auto';
-        t.parentNode.insertBefore(s, t);
-    })();
-/* ]]> */
-</script>
-%(stylesheet)s
-<style type="text/css">
-/* Hides from IE-mac \*/
-* html pre { height: 1%%; }
-/* End hide from IE-mac */
-</style>
-%(body_prefix)s
-    <div id="container">
-    <div id="headerNav">
-    <ul>
-    <li class="first"><a href="/">Home</a></li>
-    <li><a href="../../products.html">Products</a></li>
-    <li><a href="../../contact.html">Contact</a></li>
-    </ul>
-    </div>
-    <div id="header">
-    <h1><span>Rasterbar Software</span></h1>
-    <h2><span>Software developement and consulting</span></h2>
-    </div>
-    <div id="main">
-%(body_pre_docinfo)s
-%(docinfo)s
-%(body)s
-    </div>
-    <div id="footer">
-    <span>Copyright &copy; 2005 Rasterbar Software.</span>
-    </div>
-    </div>
-    <script src="http://www.google-analytics.com/urchin.js" type="text/javascript">
-    </script>
-    <script type="text/javascript">
-    _uacct = "UA-1599045-1";
-    urchinTracker();
-    </script>
-%(body_suffix)s
Binary files libtorrent-libtorrent_0_16_5/docs/tonidoplug.png and libtorrent/docs/tonidoplug.png differ
diff -ruN libtorrent-libtorrent_0_16_5/docs/troubleshooting.dot libtorrent/docs/troubleshooting.dot
--- libtorrent-libtorrent_0_16_5/docs/troubleshooting.dot	2012-10-23 12:23:09.000000000 +0800
+++ libtorrent/docs/troubleshooting.dot	1970-01-01 08:00:00.000000000 +0800
@@ -1,108 +0,0 @@
-digraph no_download {
-
-	node [shape=box];
-
-	node_peers [label="Do you have any peers?\n(torrent_status::num_peers)"];
-	node_unchoked [label="Have any of the peers unchoked you?\n(peer_info::flags & peer_info::remote_unchoked)"];
-	node_error [label="Does the torrent have an error state?\n(torrent_status::error)"];
-	node_paused [label="Is the torrent paused?\n(torrent_status::paused)"];
-	node_end_error [label="The error string in the torrent describes what\nwent wrong in the torrent. This is typically\nindicative of a fatal error that, once resolved,\nrequires you to call torrent_handle::clear_error()\nto clear before resuming"];
-	node_tracker [label="Do you have any trackers in the torrent?\n(torrent_handle::trackers())"];
-	node_auto [label="Is the torrent auto managed?\n(torrent_status::auto_managed)"];
-	node_outstanding_reqs [label="Do you have any outstanding requests to any peer?\n(peer_info::download_queue_length)"];
-	node_interested [label="Are you interested in any peers?\n(peer_info::flags & peer_info::interesting)"];
-	node_tracker_peers [label="Did any tracker return any peers?\n(tracker_reply_alert::num_peers)"];
-
-	node_dht_enabled [label="Is DHT enabled?\n(session::is_dht_running())"];
-
-	node_dht_nodes [label="Do you see more than 5 DHT nodes?\n(session_status::dht_nodes)"]
-
-	node_peers_for_sure [label="Do you know for sure the torrent has peers?"];
-
-	node_peers_connected [label="Were any of the peers connected to?\n(peer_info::flags & peer_info::connecting)"];
-
-	node_end_wireshark_tracker [label="Wireshark the tracker announce\nfrom all your peers and make sure\nthey all send identical info-hashes."];
-
-	node_connect_speed [label="connect_speed, connection_limit, ip-filter"];
-
-	node_upload_mode [label="Is the torrent in upload mode?\n(torrent_status::upload_mode)"];
-	node_bwstate [label="What is the peer read_state set to?\n(peer_info::read_state)"];
-
-	node_dl_limit [label="There is a download rate limit in affect on your peers.\nDo you have a download rate limit set?\n(session_settings::download_rate_limit)"];
-
-	node_dl_disk [label="Peers are blocked waiting on the disk.\nThis typically means your disk is overloaded"];
-
-	node_dl_socket [label="The peer is listening on the socket,\nbut no data is coming down"];
-
-// end states
-
-	node_end_queued [label="This means the torrent is 'queued'. i.e. it will\nbe started once the torrents in front of it\ncompletes downloading. To know the queue\norder, see torrent_status::queue_position. To\nconfigure the number of simultaneous downloads,\nsee session_settings::active_limit and\nsession_settings::active_downloads."];
-
-	node_end_stopped [label="This means the torrent is\n'stopped'. To start it call\ntorrent_handle::resume()."];
-
-	node_end_no_peer_source [label="You don't have any peers and you don't\nhave a way to acquire peers. You either\nneed a torrent with a tracker or you need\nDHT to be enabled. The DHT will not help\nfor private torrents"];
-
-	node_end_dht_broken [label="The DHT is probably not working correctly.\nYou might want to add a DHT bootstrap node\nthrough session::add_dht_router(), or have a\ntorrent with DHT nodes in it, or peer\nconnections of peers that are part of the DHT\nnetwork."];
-
-	node_end_no_peers [label="The torrent you are trying to\ndownload may not have any peers,\n and all peers you may see are stale\nand not responding anymore."];
-
-	node_end_supply_demand [label="There might be a much higher demand\nthan supply in this torrent. Waiting\naround will probably get you unchoked\neventually."];
-
-	node_end_flash_crowd [label="The torrent might have a very large number\nof peers and only very few seeds. This sometimes\nhappens with torrents that gain popularity\nvery fast, much faster than the initial seed\nand early peers can keep up distributing\nto. Typically when this happens all your peers,\nand you, will get pieces in lock-step."];
-
-	node_end_no_download [label="This means the torrent is configured to not\ndownload anything. If you want to download,\ntake the torrent out of upload only mode. If\nthe disk the torrent is downloading to is full,\nor if writing to the disk failed in some way, the\ntorrent may have switched into upload mode\nautomatically"];
-	
-	node_peers -> node_error [label="no"];
-	node_peers -> node_unchoked [label="yes"];
-
-	node_error -> node_end_error [label="yes"];
-	node_error -> node_paused [label="no"];
-
-	node_paused -> node_auto [label="yes"];
-	node_paused -> node_tracker [label="no"];
-
-	node_auto -> node_end_queued [label="yes"];
-	node_auto -> node_end_stopped [label="no"];
-
-	node_tracker -> node_tracker_peers [label="yes"];
-	node_tracker -> node_dht_enabled [label="no"];
-
-	node_tracker_peers -> node_peers_for_sure [label="no"];
-	node_tracker_peers -> node_peers_connected [label="yes"];
-
-	node_peers_for_sure -> node_end_wireshark_tracker [label="yes"];
-	node_peers_for_sure -> node_dht_enabled [label="no"];
-
-	node_peers_connected -> node_connect_speed [label="no"];
-	node_peers_connected -> node_end_no_peers [label="yes"];
-
-	node_dht_enabled -> node_end_no_peer_source [label="no"];
-	node_dht_enabled -> node_dht_nodes [label="yes"];
-
-	node_dht_nodes -> node_end_dht_broken [label="no"];
-	node_dht_nodes -> node_end_no_peers [label="yes"];
-
-	node_unchoked -> node_outstanding_reqs [label="yes"];
-	node_unchoked -> node_interested [label="no"];
-
-	node_outstanding_reqs -> node_bwstate [label="yes"];
-	node_outstanding_reqs -> node_upload_mode [label="no"];
-
-	node_upload_mode -> node_end_flash_crowd [label="no"];
-	node_upload_mode -> node_end_no_download [label="yes"];
-
-	node_interested -> node_upload_mode [label="no"];
-	node_interested -> node_end_supply_demand [label="yes"];
-
-	node_bwstate -> "?" [label="peer_info::bw_idle"];
-	node_bwstate -> node_dl_limit [label="peer_info::bw_limit"];
-	node_bwstate -> node_dl_socket [label="peer_info::bw_network"];
-	node_bwstate -> node_dl_disk [label="peer_info::bw_disk"];
-
-	node_dl_limit -> "Your download rate limit may be set too low.\nKeep in mind that it is specified in bytes\nper second." [label="yes"];
-	node_dl_limit -> "mixed mode?" [label="no"];
-
-	node_dl_disk -> "e" [label="yes"];
-	node_dl_disk -> "f" [label="no"];
-}
-
Binary files libtorrent-libtorrent_0_16_5/docs/troubleshooting.png and libtorrent/docs/troubleshooting.png differ
diff -ruN libtorrent-libtorrent_0_16_5/examples/fragmentation_test.cpp libtorrent/examples/fragmentation_test.cpp
--- libtorrent-libtorrent_0_16_5/examples/fragmentation_test.cpp	2012-10-23 12:23:09.000000000 +0800
+++ libtorrent/examples/fragmentation_test.cpp	1970-01-01 08:00:00.000000000 +0800
@@ -1,152 +0,0 @@
-/*
-
-Copyright (c) 2010, Arvid Norberg
-All rights reserved.
-
-Redistribution and use in source and binary forms, with or without
-modification, are permitted provided that the following conditions
-are met:
-
-    * Redistributions of source code must retain the above copyright
-      notice, this list of conditions and the following disclaimer.
-    * Redistributions in binary form must reproduce the above copyright
-      notice, this list of conditions and the following disclaimer in
-      the documentation and/or other materials provided with the distribution.
-    * Neither the name of the author nor the names of its
-      contributors may be used to endorse or promote products derived
-      from this software without specific prior written permission.
-
-THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
-AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
-LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
-CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
-SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
-INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
-CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
-ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
-POSSIBILITY OF SUCH DAMAGE.
-
-*/
-
-#include "libtorrent/storage.hpp"
-#include "libtorrent/file_pool.hpp"
-
-#include <boost/utility.hpp>
-
-#include <stdlib.h>
-
-using namespace libtorrent;
-
-int main(int argc, char* argv[])
-{
-	if (argc != 3 && argc != 2)
-	{
-		fprintf(stderr, "Usage: fragmentation_test torrent-file file-storage-path\n"
-			"       fragmentation_test file\n\n");
-		return 1;
-	}
-
-	if (argc == 2)
-	{
-		error_code ec;
-		file f(argv[1], file::read_only, ec);
-		if (ec)
-		{
-			fprintf(stderr, "Error opening file %s: %s\n", argv[1], ec.message().c_str());
-			return 1;
-		}
-		size_type off = f.phys_offset(0);
-		printf("physical offset of file %s: %" PRId64 "\n", argv[1], off);
-		return 0;
-	}
-
-	error_code ec;
-	boost::intrusive_ptr<torrent_info> ti(new torrent_info(argv[1], ec));
-
-	if (ec)
-	{
-		fprintf(stderr, "Error while loading torrent file: %s\n", ec.message().c_str());
-		return 1;
-	}
-
-	file_pool fp;
-	boost::shared_ptr<storage_interface> st(default_storage_constructor(ti->files(), 0, argv[2], fp, std::vector<boost::uint8_t>()));
-
-	// the first field is the piece index, the second
-	// one is the physical location of the piece on disk
-	std::vector<std::pair<int, size_type> > pieces;
-
-	// make sure all the files are there
-/*	std::vector<std::pair<size_type, std::time_t> > files = get_filesizes(ti->files(), argv[2]);
-	for (int i = 0; i < ti->num_files(); ++i)
-	{
-		if (ti->file_at(i).size == files[i].first) continue;
-		fprintf(stderr, "Files for this torrent are missing or incomplete: %s was %"PRId64" bytes, expected %"PRId64" bytes\n"
-			, ti->files().file_path(ti->file_at(i)).c_str(), files[i].first, ti->file_at(i).size);
-		return 1;
-	}
-*/
-	bool warned = false;
-	for (int i = 0; i < ti->num_pieces(); ++i)
-	{
-		pieces.push_back(std::make_pair(i, st->physical_offset(i, 0)));
-		if (pieces.back().second == size_type(i) * ti->piece_length())
-		{
-			if (!warned)
-			{
-				fprintf(stderr, "The files are incomplete\n");
-				warned = true;
-			}
-			pieces.pop_back();
-		}
-	}
-
-	// this suggests that the OS doesn't support physical offset
-	// or that the file doesn't exist or is incomplete
-	if (pieces.empty())
-	{
-		fprintf(stderr, "Your operating system or filesystem "
-			"does not appear to support querying physical disk offset\n");
-	}
-
-	FILE* f = fopen("fragmentation.log", "w+");
-	if (f == 0)
-	{
-		fprintf(stderr, "error while opening log file: %s\n", strerror(errno));
-		return 1;
-	}
-
-	for (int i = 0; i < pieces.size(); ++i)
-	{
-		fprintf(f, "%d %"PRId64"\n", pieces[i].first, pieces[i].second);
-	}
-
-	fclose(f);
-
-	f = fopen("fragmentation.gnuplot", "w+");
-	if (f == 0)
-	{
-		fprintf(stderr, "error while opening gnuplot file: %s\n", strerror(errno));
-		return 1;
-	}
-
-	fprintf(f,
-		"set term png size 1200,800\n"
-		"set output \"fragmentation.png\"\n"
-		"set xrange [*:*]\n"
-		"set xlabel \"piece\"\n"
-		"set ylabel \"drive offset\"\n"
-		"set key box\n"
-		"set title \"fragmentation for '%s'\"\n"
-		"set tics nomirror\n"
-		"plot \"fragmentation.log\" using 1:2 with points lt rgb \"#e07070\" notitle axis x1y1\n"
-		, ti->name().c_str());
-
-	fclose(f);
-
-	system("gnuplot fragmentation.gnuplot");
-}
-
-
diff -ruN libtorrent-libtorrent_0_16_5/examples/run_benchmarks.py libtorrent/examples/run_benchmarks.py
--- libtorrent-libtorrent_0_16_5/examples/run_benchmarks.py	2012-10-23 12:23:09.000000000 +0800
+++ libtorrent/examples/run_benchmarks.py	1970-01-01 08:00:00.000000000 +0800
@@ -1,250 +0,0 @@
-import sys
-import os
-import resource
-import shutil
-import shlex
-import time
-import subprocess
-import random
-
-# this is a disk I/O benchmark script. It runs menchmarks
-# over different filesystems, different cache sizes and
-# different number of peers (can be used to find a reasonable
-# range for unchoke slots).
-
-# it also measures performance improvements of re-ordering
-# read requests based on physical location and OS hints
-# like posix_fadvice(FADV_WILLNEED). It can also be used
-# for the AIO branch to measure improvements over the
-# classic thread based disk I/O
-
-# to set up the test, build the example directory in release
-# with statistics=on and copy fragmentation_test, client_test
-# and connection_tester to a directory called 'stage_aio'
-# and 'stage_syncio' (or make a symbolic link to the bjam
-# output directory).
-# make sure gnuplot is installed.
-
-# the following lists define the space tests will be run in
-
-# variables to test. All these are run on the first
-# entry in the filesystem list.
-cache_sizes = [0, 32768, 393216]
-peers = [200, 1000, 2000]
-builds = ['syncio']
-
-# the drives are assumed to be mounted under ./<name>
-# or have symbolic links to them.
-#filesystem = ['ext4', 'ext3', 'reiser', 'xfs']
-filesystem = ['ext3']
-
-# the number of peers for the filesystem test. The
-# idea is to stress test the filesystem by using a lot
-# of peers, since each peer essentially is a separate
-# read location on the platter
-filesystem_peers = 200
-
-# the amount of cache for the filesystem test
-# 6 GiB of cache
-filesystem_cache = 393216
-
-# the number of seconds to run each test. It's important that
-# this is shorter than what it takes to finish downloading
-# the test torrent, since then the average rate will not
-# be representative of the peak anymore
-# this has to be long enough to download a full copy
-# of the test torrent
-test_duration = 1000
-
-
-
-# make sure the environment is properly set up
-if resource.getrlimit(resource.RLIMIT_NOFILE)[0] < 4000:
-	print 'please set ulimit -n to at least 4000'
-	sys.exit(1)
-
-def build_stage_dirs():
-	ret = []
-	for i in builds:
-		ret.append('stage_%s' % i)
-	return ret
-
-# make sure we have all the binaries available
-binaries = ['client_test', 'connection_tester', 'fragmentation_test']
-for b in build_stage_dirs():
-	for i in binaries:
-		p = os.path.join(b, i)
-		if not os.path.exists(p):
-			print 'make sure "%s" is available in ./%s' % (i, b)
-			sys.exit(1)
-
-for i in filesystem:
-	if not os.path.exists(i):
-		print ('the path "%s" does not exist. This is directory/mountpoint is ' +
-			'used as the download directory and is the filesystem that will be benchmarked ' +
-			'and need to exist.') % i
-		sys.exit(1)
-
-# make sure we have a test torrent
-if not os.path.exists('test.torrent'):
-	print 'generating test torrent'
-	os.system('./stage_%s/connection_tester gen-torrent test.torrent' % builds[0])
-
-# use a new port for each test to make sure they keep working
-# this port is incremented for each test run
-port = 10000 + random.randint(0, 5000)
-
-def build_commandline(config, port):
-	num_peers = config['num-peers']
-	no_disk_reorder = '';
-	if config['allow-disk-reorder'] == False:
-		no_disk_reorder = '-O'
-	no_read_ahead = ''
-	if config['read-ahead'] == False:
-		no_read_ahead = '-j'
-	allocation_mode = config['allocation-mode']
-
-	#TODO: take config['coalesce'] into account
-		
-	global test_duration
-
-	return './stage_%s/client_test -k -z -N -h -H -M -B %d -l %d -S %d -T %d -c %d -C %d -s "%s" %s %s -q %d -p %d -f session_stats/alerts_log.txt -a %s test.torrent' \
-		% (config['build'], test_duration, num_peers, num_peers, num_peers, num_peers, config['cache-size'], config['save-path'] \
-			, no_disk_reorder, no_read_ahead, test_duration, port, config['allocation-mode'])
-
-def delete_files(files):
-	for i in files:
-		try: os.remove(i)
-		except:
-			try: shutil.rmtree(i)
-			except:
-				try:
-					if os.exists(i): print 'failed to delete %s' % i
-				except: pass
-
-def build_test_config(fs, num_peers, cache_size, readahead=True, reorder=True, preallocate=False, coalesce=True, test='upload', build='aio'):
-	config = {'test': test, 'save-path': os.path.join('./', fs), 'num-peers': num_peers, 'allow-disk-reorder': reorder, 'cache-size': cache_size, 'read-ahead': readahead}
-	if preallocate: config['allocation-mode'] = 'allocate'
-	else: config['allocation-mode'] = 'sparse'
-	if coalesce: config['coalesce'] = True
-	else: config['coalesce'] = False
-	config['build'] = build
-	return config
-
-def build_target_folder(config):
-	reorder = 'reorder'
-	if config['allow-disk-reorder'] == False: reorder = 'no-reorder'
-	readahead = 'readahead'
-	if config['read-ahead'] == False: readahead = 'no-readahead'
-	coalesce = 'coalesce'
-	if config['coalesce'] == False: coalesce = 'no-coalesce'
-	test = 'seed'
-	if config['test'] == 'upload': test = 'download'
-
-	return 'results_%s_%s_%d_%d_%s_%s_%s_%s_%s' % (config['build'], test, config['num-peers'], config['cache-size'], os.path.split(config['save-path'])[1], reorder, readahead, config['allocation-mode'], coalesce)
-
-def run_test(config):
-
-	target_folder = build_target_folder(config)
-	if os.path.exists(target_folder):
-		print 'results already exists, skipping test (%s)' % target_folder
-		return
-
-	# make sure any previous test file is removed
-	# don't clean up unless we're running a download-test, so that we leave the test file
-	# complete for a seed test.
-	if config['test'] == 'upload':
-		print 'deleting files'
-		delete_files([os.path.join(config['save-path'], 'stress_test_file'), '.ses_state', os.path.join(config['save-path'], '.resume'), '.dht_state', 'session_stats'])
-
-	try: os.mkdir('session_stats')
-	except: pass
-
-	# save off the command line for reference
-	global port
-	cmdline = build_commandline(config, port)
-	f = open('session_stats/cmdline.txt', 'w+')
-	f.write(cmdline)
-	f.close()
-
-	f = open('session_stats/config.txt', 'w+')
-	print >>f, config
-	f.close()
-
-	print '\n\n*********************************'
-	print '*          RUNNING TEST         *'
-	print '*********************************\n\n'
-	client_output = open('session_stats/client.output', 'w+')
-	print 'launching: %s' % cmdline
-	client = subprocess.Popen(shlex.split(cmdline), stdout=client_output, stdin=subprocess.PIPE)
-	# enable disk stats printing
-	print >>client.stdin, 'x',
-	# when allocating storage, we have to wait for it to complete before we can connect
-	time.sleep(1)
-	cmdline = './stage_%s/connection_tester %s %d 127.0.0.1 %d test.torrent' % (config['build'], config['test'], config['num-peers'], port)
-	print 'launching: %s' % cmdline
-	tester_output = open('session_stats/tester.output', 'w+')
-	tester = subprocess.Popen(shlex.split(cmdline), stdout=tester_output)
-	
-	tester.wait()
-	client.wait()
-	tester_output.close()
-	client_output.close()
-	if tester.returncode != 0: sys.exit(tester.returncode)
-	if client.returncode != 0: sys.exit(client.returncode)
-
-	# run fragmentation test
-	print 'analyzing fragmentation'
-	os.system('./stage_%s/fragmentation_test test.torrent %s' % (config['build'], config['save-path']))
-	shutil.copy('fragmentation.log', 'session_stats/')
-	shutil.copy('fragmentation.png', 'session_stats/')
-	shutil.copy('fragmentation.gnuplot', 'session_stats/')
-
-	os.chdir('session_stats')
-
-	# parse session stats
-	print 'parsing session log'
-	os.system('python ../../parse_session_stats.py *.0000.log')
-
-	os.chdir('..')
-
-	# move the results into its final place
-	print 'saving results'
-	os.rename('session_stats', build_target_folder(config))
-
-	# clean up
-	# don't clean up unless we ran a seed-test, so that we leave the test file
-	# complete for the seed test. i.e. we don't clean up if we ran a download test
-#	if config['test'] == 'download':
-#		print 'cleaning up'
-#		delete_files([os.path.join(config['save-path'], 'stress_test_file'), '.ses_state', os.path.join(config['save-path'], '.resume'), '.dht_state'])
-
-	port += 1
-
-#config = build_test_config('ext4', filesystem_peers, filesystem_cache, True, True, False)
-#run_test(config)
-#sys.exit(0)
-
-for fs in filesystem:
-#	for preallocate in [True, False]:
-	rdahead = True
-	reorder = True
-	preallocate = False
-	for b in builds:
-		for test in ['upload', 'download']:
-			config = build_test_config(fs, filesystem_peers, filesystem_cache, rdahead, reorder, preallocate, test=test, build=b)
-			run_test(config)
-
-for c in cache_sizes:
-	for p in peers:
-#		for rdahead in [True, False]:
-		rdahead = False
-#		for reorder in [True, False]:
-		reorder = True
-#		for preallocate in [True, False]:
-		preallocate = False
-		for b in builds:
-			for test in ['upload', 'download']:
-				config = build_test_config(filesystem[0], p, c, rdahead, reorder, preallocate, test=test, build=b)
-				run_test(config)
-
diff -ruN libtorrent-libtorrent_0_16_5/examples/upnp_test.cpp libtorrent/examples/upnp_test.cpp
--- libtorrent-libtorrent_0_16_5/examples/upnp_test.cpp	2012-10-23 12:23:09.000000000 +0800
+++ libtorrent/examples/upnp_test.cpp	1970-01-01 08:00:00.000000000 +0800
@@ -1,93 +0,0 @@
-/*
-
-Copyright (c) 2003, Arvid Norberg
-All rights reserved.
-
-Redistribution and use in source and binary forms, with or without
-modification, are permitted provided that the following conditions
-are met:
-
-    * Redistributions of source code must retain the above copyright
-      notice, this list of conditions and the following disclaimer.
-    * Redistributions in binary form must reproduce the above copyright
-      notice, this list of conditions and the following disclaimer in
-      the documentation and/or other materials provided with the distribution.
-    * Neither the name of the author nor the names of its
-      contributors may be used to endorse or promote products derived
-      from this software without specific prior written permission.
-
-THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
-AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
-LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
-CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
-SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
-INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
-CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
-ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
-POSSIBILITY OF SUCH DAMAGE.
-
-*/
-
-#include <stdlib.h>
-#include "libtorrent/session.hpp"
-#include "libtorrent/alert_types.hpp"
-
-void print_alert(libtorrent::alert const* a)
-{
-	using namespace libtorrent;
-
-	if (alert_cast<portmap_error_alert>(a))
-	{
-		printf("%s","\x1b[32m");
-	}
-	else if (alert_cast<portmap_alert>(a))
-	{
-		printf("%s","\x1b[33m");
-	}
-
-	printf("[%s] %s\n", time_now_string(), a->message().c_str());
-	printf("%s", "\x1b[0m");
-}
-
-int main(int argc, char* argv[])
-{
-	using namespace libtorrent;
-
-	if (argc != 1)
-	{
-		fputs("usage: ./upnp_test\n", stderr);
-		return 1;
-	}
-
-	session s;
-	s.set_alert_mask(alert::port_mapping_notification);
-
-	for (;;)
-	{
-		alert const* a = s.wait_for_alert(seconds(5));
-		if (a == 0)
-		{
-			s.stop_upnp();
-			s.stop_natpmp();
-			break;
-		}
-		std::auto_ptr<alert> holder = s.pop_alert();
-		print_alert(holder.get());
-	}
-
-	printf("\x1b[1m\n\n===================== done mapping. Now deleting mappings ========================\n\n\n\x1b[0m");
-
-	for (;;)
-	{
-		alert const* a = s.wait_for_alert(seconds(5));
-		if (a == 0) break;
-		std::auto_ptr<alert> holder = s.pop_alert();
-		print_alert(holder.get());
-	}
-
-
-	return 0;
-}
-
diff -ruN libtorrent-libtorrent_0_16_5/examples/utp_test.cpp libtorrent/examples/utp_test.cpp
--- libtorrent-libtorrent_0_16_5/examples/utp_test.cpp	2012-10-23 12:23:09.000000000 +0800
+++ libtorrent/examples/utp_test.cpp	1970-01-01 08:00:00.000000000 +0800
@@ -1,48 +0,0 @@
-#include "libtorrent/error_code.hpp"
-#include "libtorrent/session.hpp"
-#include "libtorrent/socket_type.hpp"
-#include "libtorrent/utp_socket_manager.hpp"
-#include "libtorrent/utp_stream.hpp"
-
-using namespace libtorrent;
-
-void on_connect(error_code const& e)
-{
-}
-
-void on_udp_receive(error_code const& e, udp::endpoint const& ep
-		, char const* buf, int size)
-{
-}
-
-void on_utp_incoming(void* userdata
-		, boost::shared_ptr<utp_stream> const& utp_sock)
-{
-}
-
-int main(int argc, char* argv[])
-{
-	//int rtt, rtt_var;
-	//int max_window, cur_window;
-	//int delay_factor, window_factor, scaled_gain;
-
-	/*session s;
-	s.listen_on(std::make_pair(6881, 6889));*/
-
-	io_service ios;
-	connection_queue cc(ios);
-	udp_socket udp_sock(ios, boost::bind(&on_udp_receive, _1, _2, _3, _4), cc);
-	
-	void* userdata;
-	utp_socket_manager utp_sockets(udp_sock, boost::bind(&on_utp_incoming, _1, _2), userdata);
-	
-	/*error_code ec;
-	utp_stream sock(ios, cc);
-	sock.bind(udp::endpoint(address_v4::any(), 0), ec);
-	
-	tcp::endpoint ep(address_v4::from_string("239.192.152.143", ec), 6771);
-	
-	sock.async_connect(ep, boost::bind(on_connect, _1));*/
-
-	return 0;
-}
diff -ruN libtorrent-libtorrent_0_16_5/include/libtorrent/add_torrent_params.hpp libtorrent/include/libtorrent/add_torrent_params.hpp
--- libtorrent-libtorrent_0_16_5/include/libtorrent/add_torrent_params.hpp	2012-10-23 12:23:09.000000000 +0800
+++ libtorrent/include/libtorrent/add_torrent_params.hpp	2016-12-06 15:16:09.020164130 +0800
@@ -71,6 +71,10 @@
 #else
 			, flags(default_flags)
 #endif
+			, max_uploads(0)
+			, max_connections(0)
+			, upload_limit(0)
+			, download_limit(0)
 		{
 		}
 
@@ -105,6 +109,8 @@
 			flag_duplicate_is_error = 0x080,
 			flag_merge_resume_trackers = 0x100,
 			flag_update_subscribe = 0x200,
+			flag_real_seed = 0x400,// added by liuming03
+            flag_transfer = 0x800, // added by yanghanlin 
 
 			default_flags = flag_update_subscribe | flag_auto_managed | flag_paused | flag_apply_ip_filter
 #ifndef TORRENT_NO_DEPRECATE
@@ -119,20 +125,38 @@
 		char const* tracker_url;
 #endif
 		std::vector<std::string> trackers;
+		std::vector<std::pair<std::string, int> > thrift_trackers;
+		// url seeds to be added to the torrent (`BEP 17`_).
+		std::vector<std::string> url_seeds;
 		std::vector<std::pair<std::string, int> > dht_nodes;
 		sha1_hash info_hash;
 		std::string name;
 		std::string save_path;
-		std::vector<char>* resume_data;
+		std::vector<char> resume_data;
 		storage_mode_t storage_mode;
 		storage_constructor_type storage;
 		void* userdata;
-		std::vector<boost::uint8_t> const* file_priorities;
+		std::vector<boost::uint8_t> file_priorities;
 		std::string trackerid;
 		std::string url;
 		std::string uuid;
 		std::string source_feed_url;
 		boost::uint64_t flags;
+
+		// ``max_uploads``, ``max_connections``, ``upload_limit``,
+		// ``download_limit`` correspond to the ``set_max_uploads()``,
+		// ``set_max_connections()``, ``set_upload_limit()`` and
+		// ``set_download_limit()`` functions on torrent_handle. These values let
+		// you initialize these settings when the torrent is added, instead of
+		// calling these functions immediately following adding it.
+		//
+		// -1 means unlimited on these settings just like their counterpart
+		// functions on torrent_handle
+		int max_uploads;
+		int max_connections;
+		int upload_limit;
+		int download_limit;
+
 #ifndef TORRENT_NO_DEPRECATE
 		bool seed_mode;
 		bool override_resume_data;
diff -ruN libtorrent-libtorrent_0_16_5/include/libtorrent/alert_types.hpp libtorrent/include/libtorrent/alert_types.hpp
--- libtorrent-libtorrent_0_16_5/include/libtorrent/alert_types.hpp	2012-10-23 12:23:09.000000000 +0800
+++ libtorrent/include/libtorrent/alert_types.hpp	2016-12-04 14:56:17.597364908 +0800
@@ -565,7 +565,7 @@
 
 		TORRENT_DEFINE_ALERT(piece_finished_alert);
 
-		const static int static_category = alert::progress_notification;
+		const static int static_category = alert::progress_notification | alert::peer_notification;
 		virtual std::string message() const;
 
 		int piece_index;
@@ -967,11 +967,17 @@
 
 	struct TORRENT_EXPORT listen_failed_alert: alert
 	{
+		enum socket_type_t { tcp, tcp_ssl, udp, i2p, socks5 };
+
 		listen_failed_alert(
 			tcp::endpoint const& ep
-			, error_code const& ec)
+			, int op
+			, error_code const& ec
+			, socket_type_t t)
 			: endpoint(ep)
 			, error(ec)
+			, operation(op)
+			, sock_type(t)
 		{}
 
 		TORRENT_DEFINE_ALERT(listen_failed_alert);
@@ -980,8 +986,22 @@
 		virtual std::string message() const;
 		virtual bool discardable() const { return false; }
 
+		// the endpoint libtorrent attempted to listen on
 		tcp::endpoint endpoint;
+
+		// the error the system returned
 		error_code error;
+
+		enum op_t
+		{
+			parse_addr, open, bind, listen, get_peer_name, accept
+		};
+
+		// the specific low level operation that failed. See op_t.
+		int operation;
+
+		// the type of listen socket this alert refers to.
+		socket_type_t sock_type;
 	};
 
 	struct TORRENT_EXPORT listen_succeeded_alert: alert
diff -ruN libtorrent-libtorrent_0_16_5/include/libtorrent/aux_/session_impl.hpp libtorrent/include/libtorrent/aux_/session_impl.hpp
--- libtorrent-libtorrent_0_16_5/include/libtorrent/aux_/session_impl.hpp	2012-10-23 12:23:09.000000000 +0800
+++ libtorrent/include/libtorrent/aux_/session_impl.hpp	2016-12-04 14:56:16.908362145 +0800
@@ -533,6 +533,9 @@
 			void update_disk_thread_settings();
 			void on_lsd_peer(tcp::endpoint peer, sha1_hash const& ih);
 			void setup_socket_buffers(socket_type& s);
+            void setup_socket_buffers(socket_acceptor &s);
+
+            void release_files();
 
 			// the settings for the client
 			session_settings m_settings;
@@ -714,6 +717,13 @@
 			tcp::endpoint m_ipv6_interface;
 			tcp::endpoint m_ipv4_interface;
 			
+			tcp::endpoint m_ipv4_local_interface;
+			void init_local_interface();
+			const tcp::endpoint& local_interface()
+			{
+				return m_ipv4_local_interface;
+			}
+
 			// since we might be listening on multiple interfaces
 			// we might need more than one listen socket
 			std::list<listen_socket_t> m_listen_sockets;
@@ -1137,6 +1147,17 @@
 
 			// the main working thread
 			boost::scoped_ptr<thread> m_thread;
+			// --------------------------------------------------------------
+			// added by liuming03
+			// --------------------------------------------------------------
+			typedef boost::function<void(torrent_handle,
+			                             boost::shared_ptr<ex_announce_request>)> ex_announce_func;
+			ex_announce_func m_ex_annfunc;
+			inline void add_ex_announce_func(const ex_announce_func &func)
+			{
+			    m_ex_annfunc = func;
+			}
+
 
 #if (defined TORRENT_DEBUG || TORRENT_RELEASE_ASSERTS) && defined BOOST_HAS_PTHREADS
 			pthread_t m_network_thread;
diff -ruN libtorrent-libtorrent_0_16_5/include/libtorrent/bandwidth_socket.hpp libtorrent/include/libtorrent/bandwidth_socket.hpp
--- libtorrent-libtorrent_0_16_5/include/libtorrent/bandwidth_socket.hpp	2012-10-23 12:23:09.000000000 +0800
+++ libtorrent/include/libtorrent/bandwidth_socket.hpp	2016-12-04 14:56:17.596364904 +0800
@@ -34,15 +34,21 @@
 #ifndef TORRENT_BANDWIDTH_SOCKET_HPP_INCLUDED
 #define TORRENT_BANDWIDTH_SOCKET_HPP_INCLUDED
 
+#include <boost/weak_ptr.hpp>
 #include "libtorrent/intrusive_ptr_base.hpp"
 
 namespace libtorrent
 {
+  class torrent;
+
 	struct bandwidth_socket
 		: public intrusive_ptr_base<bandwidth_socket>
 	{
 		virtual void assign_bandwidth(int channel, int amount) = 0;
 		virtual bool is_disconnecting() const = 0;
+		// 防止torrent删除后，导致出core
+		virtual boost::weak_ptr<torrent> associated_torrent() const
+		{   return boost::weak_ptr<torrent>();}
 		virtual ~bandwidth_socket() {}
 	};
 }
diff -ruN libtorrent-libtorrent_0_16_5/include/libtorrent/create_torrent.hpp libtorrent/include/libtorrent/create_torrent.hpp
--- libtorrent-libtorrent_0_16_5/include/libtorrent/create_torrent.hpp	2012-10-23 12:23:09.000000000 +0800
+++ libtorrent/include/libtorrent/create_torrent.hpp	2016-12-04 14:56:17.594364896 +0800
@@ -71,6 +71,7 @@
 			, modification_time = 4
 			, symlinks = 8
 			, calculate_file_hashes = 16
+			, no_piece_hashes = 32
 		};
 
 		create_torrent(file_storage& fs, int piece_size = 0
@@ -81,6 +82,7 @@
 
 		file_storage const& files() const { return m_files; }
 
+        void set_sp_infohash(const sha1_hash& sp_infohash);
 		void set_comment(char const* str);
 		void set_creator(char const* str);
 		void set_hash(int index, sha1_hash const& h);
@@ -91,6 +93,13 @@
 		void add_tracker(std::string const& url, int tier = 0);
 		void set_root_cert(std::string const& pem);
 		void set_priv(bool p) { m_private = p; }
+		void set_cluster_config(const std::string &protocol, const std::string &host, int port
+				, const std::string &user, const std::string &passwd, const std::string &path);
+		void set_cluster_config(const cluster_config_entry &cluster_config);
+		const sha1_hash& get_info_hash() { return m_info_hash; }
+		const sha1_hash& get_sp_infohash() { 
+            return m_sp_infohash; 
+        }
 
 		int num_pieces() const { return m_files.num_pieces(); }
 		int piece_length() const { return m_files.piece_length(); }
@@ -142,6 +151,11 @@
 		// this will be set to that comment
 		std::string m_comment;
 
+        // if we need record its old infohash
+        // this will be set to m_sp_infohash
+        // 2015.12.29 @yanghanlin
+        sha1_hash m_sp_infohash;
+
 		// an optional string naming the software used
 		// to create the torrent file
 		std::string m_created_by;
@@ -149,6 +163,8 @@
 		// this is the root cert for SSL torrents
 		std::string m_root_cert;
 
+		cluster_config_entry m_cluster_config;// added by liuming03
+
 		// this is used when creating a torrent. If there's
 		// only one file there are cases where it's impossible
 		// to know if it should be written as a multifile torrent
@@ -176,6 +192,8 @@
 		// calculate sha1 hashes for each file and add it
 		// to the file list
 		bool m_calculate_file_hashes:1;
+
+		bool m_no_piece_hashes:1;
 	};
 
 	namespace detail
@@ -187,7 +205,7 @@
 
 		inline void nop(int i) {}
 
-		int get_file_attributes(std::string const& p);
+		int get_file_attributes(std::string const& p, int flags);
 		std::string get_symlink_path(std::string const& p);
 
 		TORRENT_EXPORT void add_files_impl(file_storage& fs, std::string const& p
diff -ruN libtorrent-libtorrent_0_16_5/include/libtorrent/file.hpp libtorrent/include/libtorrent/file.hpp
--- libtorrent-libtorrent_0_16_5/include/libtorrent/file.hpp	2012-10-23 12:23:09.000000000 +0800
+++ libtorrent/include/libtorrent/file.hpp	2016-12-04 14:56:17.592364888 +0800
@@ -96,13 +96,13 @@
 			directory = 0x4000,  // directory
 			regular_file = 0x8000  // regular
 #else
-			fifo = 0010000, // named pipe (fifo)
-			character_special = 0020000,  // character special
-			directory = 0040000,  // directory
-			block_special = 0060000,  // block special
-			regular_file = 0100000,  // regular
-			link = 0120000,  // symbolic link
-			socket = 0140000  // socket
+			fifo = 0x01000, // named pipe (fifo)
+			character_special = 0x02000,  // character special
+			directory = 0x04000,  // directory
+			block_special = 0x08000,  // block special (maybe a bug. liuming03)
+			regular_file = 0x10000,  // regular
+			link = 0x20000,  // symbolic link
+			socket = 0x40000  // socket
 #endif
 		} modes_t;
 		int mode;
diff -ruN libtorrent-libtorrent_0_16_5/include/libtorrent/file_storage.hpp libtorrent/include/libtorrent/file_storage.hpp
--- libtorrent-libtorrent_0_16_5/include/libtorrent/file_storage.hpp	2012-10-23 12:23:09.000000000 +0800
+++ libtorrent/include/libtorrent/file_storage.hpp	2016-12-04 14:56:17.591364884 +0800
@@ -41,6 +41,7 @@
 #include "libtorrent/assert.hpp"
 #include "libtorrent/peer_request.hpp"
 #include "libtorrent/peer_id.hpp"
+#include "libtorrent/entry.hpp"
 
 namespace libtorrent
 {
@@ -64,6 +65,7 @@
 		bool hidden_attribute:1;
 		bool executable_attribute:1;
 		bool symlink_attribute:1;
+		mode_t mode;// added by liuming03
 		std::string symlink_path;
 	};
 
@@ -89,6 +91,7 @@
 			, executable_attribute(false)
 			, symlink_attribute(false)
 			, path_index(-1)
+		    , mode(0644)
 		{}
 
 		internal_file_entry(file_entry const& e)
@@ -102,6 +105,7 @@
 			, executable_attribute(e.executable_attribute)
 			, symlink_attribute(e.symlink_attribute)
 			, path_index(-1)
+		    , mode(e.mode)
 		{
 			set_name(e.path.c_str());
 		}
@@ -150,6 +154,7 @@
 		// from that array with the 'name' field in
 		// this struct
 		int path_index;
+		mode_t mode;// added by liuming03
 	};
 
 	struct TORRENT_EXPORT file_slice
@@ -159,9 +164,37 @@
 		size_type size;
 	};
 
+	struct TORRENT_EXPORT symlink_file
+	{
+	    symlink_file()
+	        : mode(0777)
+	        , path()
+	        , symlink_path()
+	    {}
+
+	    symlink_file(symlink_file const& f)
+	        : mode(f.mode)
+	        , path(f.path)
+	        , symlink_path(f.symlink_path)
+	    {}
+
+	    symlink_file& operator=(symlink_file const& f)
+	    {
+	        mode = f.mode;
+	        path = f.path;
+	        symlink_path = f.symlink_path;
+	        return *this;
+	    }
+
+	    mode_t mode;
+	    std::string path;
+	    std::string symlink_path;
+	};
+
 	class TORRENT_EXPORT file_storage
 	{
 	friend class torrent_info;
+	friend class create_torrent;
 	public:
 		file_storage();
 		~file_storage() {}
@@ -181,7 +214,7 @@
 		void add_file(file_entry const& e, char const* filehash = 0);
 
 		void add_file(std::string const& p, size_type size, int flags = 0
-			, std::time_t mtime = 0, std::string const& s_p = "");
+			, std::time_t mtime = 0, std::string const& s_p = "", mode_t mode = 0644);
 
 		void rename_file(int index, std::string const& new_filename);
 
@@ -264,6 +297,32 @@
 		std::string file_path(internal_file_entry const& fe) const;
 		size_type file_size(internal_file_entry const& fe) const;
 
+		void add_path(std::string path, mode_t mode);
+		void gen_paths_entry(entry &paths) const;
+		void print_paths() const
+		{
+		    std::vector<mode_t>::const_iterator mode_it = m_paths_mode.begin();
+		    std::vector<std::string>::const_iterator it = m_paths.begin();
+		    for (; it != m_paths.end(); ++it, ++mode_it)
+		    {
+		        fprintf(stdout, "          %o %s\n", *mode_it, it->c_str());
+		    }
+		}
+
+		bool has_symlinks() const { return !m_symlinks_ex.empty(); }
+        bool has_paths() const { return !m_paths.empty(); }
+		const std::vector<symlink_file>& get_symlink_file() const { return m_symlinks_ex; }
+		void add_symlink(const std::string& path, const std::string& symlink_path, mode_t mode);
+		void gen_symlinks_entry(entry &symlinks) const;
+		void print_symlinks() const
+		{
+		    std::vector<symlink_file>::const_iterator it = m_symlinks_ex.begin();
+		    for (; it != m_symlinks_ex.end(); ++it)
+		    {
+		        fprintf(stdout, "          %o %s -> %s\n"
+		                , it->mode, it->path.c_str(), it->symlink_path.c_str());
+		    }
+		}
 #if !defined TORRENT_VERBOSE_LOGGING \
 	&& !defined TORRENT_LOGGING \
 	&& !defined TORRENT_ERROR_LOGGING
@@ -304,6 +363,13 @@
 		// points into this array
 		std::vector<std::string> m_paths;
 
+		// added by liuming03 all paths mode,
+		// each element corresponds to the m_paths with same index
+		std::vector<mode_t> m_paths_mode;
+
+		// added by liuming03 all symlinks
+		std::vector<symlink_file> m_symlinks_ex;
+
 		// name of torrent. For multi-file torrents
 		// this is always the root directory
 		std::string m_name;
diff -ruN libtorrent-libtorrent_0_16_5/include/libtorrent/peer_connection.hpp libtorrent/include/libtorrent/peer_connection.hpp
--- libtorrent-libtorrent_0_16_5/include/libtorrent/peer_connection.hpp	2012-10-23 12:23:09.000000000 +0800
+++ libtorrent/include/libtorrent/peer_connection.hpp	2016-12-04 14:56:16.911362157 +0800
@@ -568,8 +568,8 @@
 			// bittorrent connections should never use this function, since
 			// they might be encrypted and this would circumvent the actual
 			// encryption. bt_peer_connection overrides this function with
-			// its own version.
-			TORRENT_ASSERT(encrypted || type() != bittorrent_connection);
+			// its own version. (bugs bt will call this)
+			// TORRENT_ASSERT(encrypted || type() != bittorrent_connection);
 			m_send_buffer.append_buffer(buffer, size, size, destructor);
 		}
 
diff -ruN libtorrent-libtorrent_0_16_5/include/libtorrent/piece_picker.hpp libtorrent/include/libtorrent/piece_picker.hpp
--- libtorrent-libtorrent_0_16_5/include/libtorrent/piece_picker.hpp	2012-10-23 12:23:09.000000000 +0800
+++ libtorrent/include/libtorrent/piece_picker.hpp	2016-12-04 14:56:16.911362157 +0800
@@ -445,7 +445,7 @@
 			void set_not_have() { index = 0; TORRENT_ASSERT(!have()); }
 			
 			bool filtered() const { return piece_priority == filter_priority; }
-			void filtered(bool f) { piece_priority = f ? filter_priority : 0; }
+			void filtered(bool f) { piece_priority = f ? (boost::uint32_t)(filter_priority) : 0; }
 			
 			//  prio 7 is always top priority
 			//  prio 0 is always -1 (don't pick)
diff -ruN libtorrent-libtorrent_0_16_5/include/libtorrent/policy.hpp libtorrent/include/libtorrent/policy.hpp
--- libtorrent-libtorrent_0_16_5/include/libtorrent/policy.hpp	2012-10-23 12:23:09.000000000 +0800
+++ libtorrent/include/libtorrent/policy.hpp	2016-12-04 14:56:16.911362157 +0800
@@ -430,7 +430,8 @@
 
 		bool compare_peer_erase(policy::peer const& lhs, policy::peer const& rhs) const;
 		bool compare_peer(policy::peer const& lhs, policy::peer const& rhs
-			, address const& external_ip) const;
+			, address const& external_ip, bool if_both_bad = false) const;
+		void get_to_compare_ip(address const& original_ip, address &changed_ip) const;
 
 		iterator find_connect_candidate(int session_time);
 
diff -ruN libtorrent-libtorrent_0_16_5/include/libtorrent/session.hpp libtorrent/include/libtorrent/session.hpp
--- libtorrent-libtorrent_0_16_5/include/libtorrent/session.hpp	2012-10-23 12:23:09.000000000 +0800
+++ libtorrent/include/libtorrent/session.hpp	2016-12-04 14:56:16.911362157 +0800
@@ -156,11 +156,13 @@
 		{
 			TORRENT_CFG();
 			TORRENT_ASSERT(listen_port_range.first > 0);
-			TORRENT_ASSERT(listen_port_range.first < listen_port_range.second);
+			TORRENT_ASSERT(listen_port_range.first <= listen_port_range.second);
 			init(listen_port_range, listen_interface, print, flags, alert_mask TORRENT_LOGPATH);
 		}
 			
 		~session();
+		typedef boost::function<void(torrent_handle, boost::shared_ptr<ex_announce_request>)> ex_announce_func;
+		void add_ex_announce_func(const ex_announce_func &func);
 
 		enum save_state_flags_t
 		{
diff -ruN libtorrent-libtorrent_0_16_5/include/libtorrent/session_settings.hpp libtorrent/include/libtorrent/session_settings.hpp
--- libtorrent-libtorrent_0_16_5/include/libtorrent/session_settings.hpp	2012-10-23 12:23:09.000000000 +0800
+++ libtorrent/include/libtorrent/session_settings.hpp	2016-12-04 14:56:16.909362149 +0800
@@ -501,7 +501,10 @@
 		// any announce intervals reported from a tracker
 		// that is lower than this, will be clamped to this
 		// value. It's specified in seconds
-		int min_announce_interval;
+		int min_announce_interval; // now this will only for seed torrent intervals
+
+		// download torrent any intervals will less than this
+		int max_announce_interval;
 
 		// if true, partial pieces are picked before pieces
 		// that are more rare
@@ -931,6 +934,9 @@
 
 		// when true, web seeds sending bad data will be banned
 		bool ban_web_seeds;
+
+		bool use_php_tracker;
+		bool use_c_tracker;
 	};
 
 #ifndef TORRENT_DISABLE_DHT
diff -ruN libtorrent-libtorrent_0_16_5/include/libtorrent/torrent_handle.hpp libtorrent/include/libtorrent/torrent_handle.hpp
--- libtorrent-libtorrent_0_16_5/include/libtorrent/torrent_handle.hpp	2012-10-23 12:23:09.000000000 +0800
+++ libtorrent/include/libtorrent/torrent_handle.hpp	2016-12-04 14:56:16.909362149 +0800
@@ -58,6 +58,7 @@
 #include "libtorrent/address.hpp"
 #include "libtorrent/bitfield.hpp"
 #include "libtorrent/socket.hpp" // tcp::endpoint
+#include "libtorrent/stat.hpp"
 
 namespace libtorrent
 {
@@ -72,6 +73,41 @@
 	struct torrent_status;
 	class torrent;
 
+	struct ex_announce_peer {
+		std::string peerid;
+		std::string ip;
+		uint16_t port;
+	};
+
+	struct ex_announce_request {
+		enum status_t {
+			METADATA = 0,
+			DOWNLOAD = 1,
+			SEEDING = 2,
+			STOPPED = 3,
+			PAUSED = 4,
+		};
+
+		std::string infohash;
+		ex_announce_peer peer;
+		int64_t uploaded;
+		int64_t downloaded;
+		int64_t left;
+		bool is_seed;
+		int num_want;
+		bool is_transfer;
+		status_t status;
+		std::vector<std::pair<std::string, int> > trackers;
+	};
+
+	struct ex_announce_response {
+		int ret;
+		std::string failure_reason;
+		int min_interval;
+		bool have_seed;
+		std::vector<ex_announce_peer>  peers;
+	};
+
 	TORRENT_EXPORT std::size_t hash_value(torrent_status const& ts);
 
 #ifndef BOOST_NO_EXCEPTIONS
@@ -162,11 +198,17 @@
 
 		torrent_handle() {}
 
+		void recv_ex_tracker_announce_reply(boost::shared_ptr<ex_announce_response> response) const;
+
 		enum flags_t { overwrite_existing = 1 };
 		void add_piece(int piece, char const* data, int flags = 0) const;
 		void read_piece(int piece) const;
 		bool have_piece(int piece) const;
 
+		void set_hash_piece(int piece, const sha1_hash &hash);
+
+		void add_stats(stat const& s) const;
+
 		void get_full_peer_list(std::vector<peer_list_entry>& v) const;
 		void get_peer_info(std::vector<peer_info>& v) const;
 
@@ -226,6 +268,7 @@
 #endif
 
 		bool set_metadata(char const* metadata, int size) const;
+		boost::intrusive_ptr<torrent_info const> torrent_file() const;
 		const torrent_info& get_torrent_info() const;
 		bool is_valid() const;
 
@@ -264,6 +307,11 @@
 
 		storage_interface* get_storage_impl() const;
 
+		int get_peer_upload_limit(tcp::endpoint ip) const;
+		int get_peer_download_limit(tcp::endpoint ip) const;
+		void set_peer_upload_limit(tcp::endpoint ip, int limit) const;
+		void set_peer_download_limit(tcp::endpoint ip, int limit) const;
+
 		// all these are deprecated, use piece
 		// priority functions instead
 
@@ -272,16 +320,6 @@
 #ifndef TORRENT_NO_DEPRECATE
 		// deprecated in 0.16, feature will be removed
 		TORRENT_DEPRECATED_PREFIX
-		int get_peer_upload_limit(tcp::endpoint ip) const TORRENT_DEPRECATED;
-		TORRENT_DEPRECATED_PREFIX
-		int get_peer_download_limit(tcp::endpoint ip) const TORRENT_DEPRECATED;
-		TORRENT_DEPRECATED_PREFIX
-		void set_peer_upload_limit(tcp::endpoint ip, int limit) const TORRENT_DEPRECATED;
-		TORRENT_DEPRECATED_PREFIX
-		void set_peer_download_limit(tcp::endpoint ip, int limit) const TORRENT_DEPRECATED;
-
-		// deprecated in 0.16, feature will be removed
-		TORRENT_DEPRECATED_PREFIX
 		void set_ratio(float up_down_ratio) const TORRENT_DEPRECATED;
 
 		// deprecated in 0.16. use status() instead
@@ -442,6 +480,9 @@
 		bool operator==(torrent_status const& st) const
 		{ return handle == st.handle; }
 
+		bool operator<(torrent_status const& st) const
+		{ return handle < st.handle; }
+
 		// handle to the torrent
 		torrent_handle handle;
 
diff -ruN libtorrent-libtorrent_0_16_5/include/libtorrent/torrent.hpp libtorrent/include/libtorrent/torrent.hpp
--- libtorrent-libtorrent_0_16_5/include/libtorrent/torrent.hpp	2012-10-23 12:23:09.000000000 +0800
+++ libtorrent/include/libtorrent/torrent.hpp	2016-12-04 14:56:16.909362149 +0800
@@ -681,6 +681,10 @@
 		torrent_info const& torrent_file() const
 		{ return *m_torrent_file; }
 
+		void set_piece_hash(int index, const sha1_hash &hash) {
+		    m_torrent_file->set_piece_hash(index, hash);
+		}
+
 		std::string const& uuid() const { return m_uuid; }
 		void set_uuid(std::string const& s) { m_uuid = s; }
 		std::string const& url() const { return m_url; }
@@ -695,6 +699,7 @@
 		void add_tracker(announce_entry const& url);
 
 		torrent_handle get_handle();
+		boost::intrusive_ptr<torrent_info const> get_torrent_copy();
 
 		void write_resume_data(entry& rd) const;
 		void read_resume_data(lazy_entry const& rd);
@@ -730,14 +735,14 @@
 		void set_peer_upload_limit(tcp::endpoint ip, int limit);
 		void set_peer_download_limit(tcp::endpoint ip, int limit);
 
-		void set_upload_limit(int limit);
+		void set_upload_limit(int limit, bool state_update = true);
 		int upload_limit() const;
-		void set_download_limit(int limit);
+		void set_download_limit(int limit, bool state_update = true);
 		int download_limit() const;
 
-		void set_max_uploads(int limit);
+		void set_max_uploads(int limit, bool state_update = true);
 		int max_uploads() const { return m_max_uploads; }
-		void set_max_connections(int limit);
+		void set_max_connections(int limit, bool state_update = true);
 		int max_connections() const { return m_max_connections; }
 
 		void move_storage(std::string const& save_path);
@@ -775,7 +780,7 @@
 			m_seed_mode = false;
 			// seed is false if we turned out not
 			// to be a seed after all
-			if (!seed) force_recheck();
+			//if (!seed) force_recheck();// modify by liuming03, we don't want a seed torrent to repeat download or break file!
 			m_num_verified = 0;
 			m_verified.free();
 		}
@@ -824,6 +829,8 @@
 			TORRENT_ASSERT(m_num_connecting > 0);
 			--m_num_connecting;
 		}
+
+		void recv_ex_tracker_announce_reply(boost::shared_ptr<ex_announce_response> response);
 #ifdef TORRENT_USE_OPENSSL
 		void set_ssl_cert(std::string const& certificate
 			, std::string const& private_key
@@ -876,6 +883,9 @@
 		void remove_time_critical_pieces(std::vector<int> const& priority);
 		void request_time_critical_pieces();
 
+		void ex_tracker_announce(error_code ec);
+		void add_ex_tracker_timer(const time_duration& interval);
+
 		policy m_policy;
 
 		// all time totals of uploaded and downloaded payload
@@ -953,6 +963,12 @@
 		// used for tracker announces
 		deadline_timer m_tracker_timer;
 
+		deadline_timer m_ex_tracker_timer;
+		std::vector<std::pair<std::string, int> > m_thrift_trackers;
+		boost::uint8_t m_ex_tracker_failed_count:7;
+		bool m_real_seed:1;
+		bool m_transfer:1;
+
 		// this is the upload and download statistics for the whole torrent.
 		// it's updated from all its peers once every second.
 		libtorrent::stat m_stat;
diff -ruN libtorrent-libtorrent_0_16_5/include/libtorrent/torrent_info.hpp libtorrent/include/libtorrent/torrent_info.hpp
--- libtorrent-libtorrent_0_16_5/include/libtorrent/torrent_info.hpp	2012-10-23 12:23:09.000000000 +0800
+++ libtorrent/include/libtorrent/torrent_info.hpp	2016-12-04 14:56:16.909362149 +0800
@@ -212,13 +212,26 @@
 		policy::peer peer_info;
 	};
 
+	// added by liuming03
+	struct cluster_config_entry
+	{
+		cluster_config_entry() : protocol("hdfs"), port(0) {}
+
+		std::string protocol;
+		std::string host;
+		int port;
+		std::string user;
+		std::string passwd;
+		std::string prefix_path;
+	};
+
 #ifndef BOOST_NO_EXCEPTIONS
 	// for backwards compatibility with 0.14
 	typedef libtorrent_exception invalid_torrent_file;
 #endif
 
 	int TORRENT_EXPORT load_file(std::string const& filename
-		, std::vector<char>& v, error_code& ec, int limit = 8000000);
+		, std::vector<char>& v, error_code& ec, int limit = 80000000);
 
 	class TORRENT_EXPORT torrent_info : public intrusive_ptr_base<torrent_info>
 	{
@@ -238,10 +251,12 @@
 #endif
 
 		torrent_info(torrent_info const& t, int flags = 0);
-		torrent_info(sha1_hash const& info_hash, int flags = 0);
+		torrent_info(sha1_hash const& info_hash, int flags = 0, const std::string &new_name = "");
 		torrent_info(lazy_entry const& torrent_file, error_code& ec, int flags = 0);
-		torrent_info(char const* buffer, int size, error_code& ec, int flags = 0);
-		torrent_info(std::string const& filename, error_code& ec, int flags = 0);
+		torrent_info(char const* buffer, int size, error_code& ec, int flags = 0
+				, const std::string &new_name = "");
+		torrent_info(std::string const& filename, error_code& ec, int flags = 0
+				, const std::string &new_name = "");
 #if TORRENT_USE_WSTRING
 		torrent_info(std::wstring const& filename, error_code& ec, int flags = 0);
 #endif // TORRENT_USE_WSTRING
@@ -292,8 +307,11 @@
 		size_type total_size() const { return m_files.total_size(); }
 		int piece_length() const { return m_files.piece_length(); }
 		int num_pieces() const { return m_files.num_pieces(); }
+
 		const sha1_hash& info_hash() const { return m_info_hash; }
 		const std::string& name() const { return m_files.name(); }
+		const std::string& new_name() const { return m_new_name; }
+		const cluster_config_entry& cluster_config() const { return m_cluster_config; }
 
 		typedef file_storage::iterator file_iterator;
 		typedef file_storage::reverse_iterator reverse_file_iterator;
@@ -305,6 +323,9 @@
 		int num_files() const { return m_files.num_files(); }
 		file_entry file_at(int index) const { return m_files.at(index); }
 
+		const std::vector<std::string>& get_paths() const { return m_files.m_paths; }
+		const std::vector<mode_t>& get_paths_mode() const { return m_files.m_paths_mode; }
+
 		file_iterator file_at_offset(size_type offset) const
 		{ return m_files.file_at_offset(offset); }
 		std::vector<file_slice> map_block(int piece, size_type offset, int size) const
@@ -337,6 +358,14 @@
 		sha1_hash hash_for_piece(int index) const
 		{ return sha1_hash(hash_for_piece_ptr(index)); }
 
+		void set_piece_hash(int index, const sha1_hash &hash) {
+		    // 明确确定hash校验的时候肯定已经填充好了，因此不需要加锁
+            char const* ptr = hash_for_piece_ptr(index);
+            if (ptr != NULL) {
+		        memcpy(const_cast<char *>(ptr), hash.begin(), 20);
+            }
+		}
+
 		std::vector<sha1_hash> const& merkle_tree() const { return m_merkle_tree; }
 		void set_merkle_tree(std::vector<sha1_hash>& h)
 		{ TORRENT_ASSERT(h.size() == m_merkle_tree.size() ); m_merkle_tree.swap(h); }
@@ -352,6 +381,14 @@
 			}
 			else
 			{
+                if (m_piece_hashes == NULL
+                    || m_piece_hashes < m_info_section.get()
+                    || m_piece_hashes >= m_info_section.get() + m_info_section_size
+                    || index >= int(m_info_section_size / 20)) {
+                    // we need this condition because assert flows doesn't work now!
+                    return NULL;
+                }
+
 				TORRENT_ASSERT(m_piece_hashes);
 				TORRENT_ASSERT(m_piece_hashes >= m_info_section.get());
 				TORRENT_ASSERT(m_piece_hashes < m_info_section.get() + m_info_section_size);
@@ -368,6 +405,10 @@
 		const std::string& comment() const
 		{ return m_comment; }
 
+        const sha1_hash& sp_infohash() const {
+            return m_sp_infohash;
+        }
+
 		// dht nodes to add to the routing table/bootstrap from
 		typedef std::vector<std::pair<std::string, int> > nodes_t;
 		
@@ -451,6 +492,13 @@
 		// this will be set to that comment
 		std::string m_comment;
 
+        // if a sp_infohash is found in the torrent file
+        // this will be set to that sp_infohash
+        // 2015.12.29 @yanghanlin
+        sha1_hash m_sp_infohash;
+
+		std::string m_new_name;
+
 		// an optional string naming the software used
 		// to create the torrent file
 		std::string m_created_by;
@@ -493,6 +541,8 @@
 		// features are disabled for this torrent (unless the
 		// settings allows mixing i2p peers with regular peers)
 		bool m_i2p:1;
+
+		cluster_config_entry m_cluster_config;// added by liuming03
 	};
 
 }
diff -ruN libtorrent-libtorrent_0_16_5/Jamfile libtorrent/Jamfile
--- libtorrent-libtorrent_0_16_5/Jamfile	2012-10-23 12:23:09.000000000 +0800
+++ libtorrent/Jamfile	2016-12-04 14:56:18.141367076 +0800
@@ -600,7 +600,7 @@
 	<define>BOOST_ASIO_HASH_MAP_BUCKETS=1021
 # make sure asio symbols are properly exported
 # and imported
-	<link>shared:<define>BOOST_ASIO_DYN_LINK
+# <link>shared:<define>BOOST_ASIO_DYN_LINK
 	<define>BOOST_ASIO_SEPARATE_COMPILATION
 	<tag>@tag
 	;
diff -ruN libtorrent-libtorrent_0_16_5/list_files.py libtorrent/list_files.py
--- libtorrent-libtorrent_0_16_5/list_files.py	2012-10-23 12:23:09.000000000 +0800
+++ libtorrent/list_files.py	1970-01-01 08:00:00.000000000 +0800
@@ -1,22 +0,0 @@
-#! /usr/bin/env python
-# Copyright Arvid Norberg 2008. Use, modification and distribution is
-# subject to the Boost Software License, Version 1.0. (See accompanying
-# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
-
-import os
-import sys
-
-def list_directory(path):
-	tree = os.walk(path)
-	for i in tree:
-		dirs = i[0].split('/')
-		if 'CVS' in dirs: continue
-		if '.svn' in dirs: continue
-
-		for file in i[2]:
-			if file.startswith('.#'): continue
-			if file == '.DS_Store': continue
-			print os.path.join(i[0], file) + ' \\'
-
-list_directory(sys.argv[1])
-
diff -ruN libtorrent-libtorrent_0_16_5/parse_bandwidth_log.py libtorrent/parse_bandwidth_log.py
--- libtorrent-libtorrent_0_16_5/parse_bandwidth_log.py	2012-10-23 12:23:09.000000000 +0800
+++ libtorrent/parse_bandwidth_log.py	1970-01-01 08:00:00.000000000 +0800
@@ -1,24 +0,0 @@
-#! /usr/bin/env python
-import os, sys, time
-
-keys = [['upload rate', 'x1y1', 6], ['history entries', 'x1y2', 10], ['queue', 'x1y2', 4]]
-
-out = open('bandwidth.gnuplot', 'wb')
-print >>out, "set term png size 1200,700"
-print >>out, 'set output "bandwidth_manager.png"'
-print >>out, 'set xrange [0:*]'
-print >>out, 'set xlabel "time (ms)"'
-print >>out, 'set ylabel "Rate (B/s)"'
-print >>out, 'set ytics 10000'
-print >>out, 'set y2label "number"'
-print >>out, 'set y2range [0:*]'
-#print >>out, "set style data lines"
-print >>out, "set key box"
-print >>out, 'plot',
-for k, a, c in keys:
-   print >>out, ' "%s" using 1:%d title "%s" axes %s with steps,' % (sys.argv[1], c, k, a),
-print >>out, 'x=0'
-out.close()
-
-os.system('gnuplot bandwidth.gnuplot');
-
diff -ruN libtorrent-libtorrent_0_16_5/parse_buffer_log.py libtorrent/parse_buffer_log.py
--- libtorrent-libtorrent_0_16_5/parse_buffer_log.py	2012-10-23 12:23:09.000000000 +0800
+++ libtorrent/parse_buffer_log.py	1970-01-01 08:00:00.000000000 +0800
@@ -1,90 +0,0 @@
-#! /usr/bin/env python
-# Copyright Arvid Norberg 2008. Use, modification and distribution is
-# subject to the Boost Software License, Version 1.0. (See accompanying
-# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
-
-import os, sys, time
-
-lines = open(sys.argv[1], 'rb').readlines()
-
-#keys = ['send_buffer_utilization']
-keys = ['send_buffer_size', 'used_send_buffer', 'protocol_buffer']
-#keys = ['send_buffer_alloc', 'send_buffer', 'allocate_buffer_alloc', 'allocate_buffer', 'protocol_buffer']
-#keys = ['send_buffer_alloc', 'send_buffer', 'allocate_buffer_alloc', 'allocate_buffer', 'protocol_buffer', 'append_send_buffer']
-
-average = ['send_buffer_utilization', 'send_buffer_size', 'used_send_buffer']
-average_interval = 120000
-render = 'lines'
-
-time_limit = -1
-if len(sys.argv) > 2:
-   time_limit = long(sys.argv[2])
-
-
-# logfile format:
-# <time(ms)> <key> <value>
-# example:
-# 16434 allocate_buffer: 17
-for k in keys:
-
-   last_sample = 0
-   average_accumulator = 0
-   average_samples = 0
-   peak = 0
-
-   out = open(k + '.dat', 'wb')
-   eval_average = False
-   if k in average:
-      eval_average = True
-      peak_out = open(k + '_peak.dat', 'wb')
-
-   for l in lines:
-      l = l.split(' ')
-      if len(l) != 3:
-         print l
-         continue
-      try:
-         if l[1] == k + ':':
-            if time_limit != -1 and long(l[0]) > time_limit: break
-            time = l[0]
-            value = l[2]
-            if eval_average:
-               while long(time) > last_sample + average_interval:
-                  last_sample = last_sample + average_interval
-                  if average_samples < 1: average_samples = 1
-                  print >>out, '%d %f' % (last_sample, average_accumulator / average_samples)
-                  print >>peak_out, '%d %f' % (last_sample, peak)
-                  average_accumulator = 0
-                  average_samples = 0
-                  peak = 0
-               average_accumulator = average_accumulator + float(value)
-               average_samples = average_samples + 1
-               if float(value) > peak: peak = float(value)
-            else:
-               print >>out, time + ' ' + value,
-      except:
-         print l
-
-   out.close()
-   peak_out.close()
-
-out = open('send_buffer.gnuplot', 'wb')
-print >>out, "set term png size 1200,700"
-print >>out, 'set output "send_buffer.png"'
-print >>out, 'set xrange [0:*]'
-print >>out, 'set xlabel "time (ms)"'
-print >>out, 'set ylabel "bytes (B)"'
-print >>out, "set style data lines"
-print >>out, "set key box"
-print >>out, 'plot',
-for k in keys:
-   if k in average:
-      print >>out, ' "%s.dat" using 1:2 title "%s %d seconds average" with %s,' % (k, k, average_interval / 1000., render),
-      print >>out, ' "%s_peak.dat" using 1:2 title "%s %d seconds peak" with %s,' % (k, k, average_interval / 1000., render),
-   else:
-      print >>out, ' "%s.dat" using 1:2 title "%s" with %s,' % (k, k, render),
-print >>out, 'x=0'
-out.close()
-
-os.system('gnuplot send_buffer.gnuplot')
-
diff -ruN libtorrent-libtorrent_0_16_5/parse_dht_rtt.py libtorrent/parse_dht_rtt.py
--- libtorrent-libtorrent_0_16_5/parse_dht_rtt.py	2012-10-23 12:23:09.000000000 +0800
+++ libtorrent/parse_dht_rtt.py	1970-01-01 08:00:00.000000000 +0800
@@ -1,51 +0,0 @@
-#! /usr/bin/env python
-
-import sys
-import os
-
-quantize = 100
-max_rtt = 5000
-
-f = open(sys.argv[1])
-distribution = {}
-num_messages = 0
-
-for i in range(0, max_rtt, quantize):
-	distribution[i] = 0
-
-for line in f:
-	time = int(line.split('\t')[1])
-	if (time < 0 or time > max_rtt - quantize): continue
-	num_messages += 1
-	time /= quantize
-	time *= quantize
-	distribution[time] += 1
-
-f = open('round_trip_distribution.log', 'w+')
-
-for k, v in distribution.items():
-	print >>f, '%f %d' % ((k + (quantize / 2)) / 1000.0, v)
-f.close();
-
-f = open('round_trip_distribution.gnuplot', 'w+')
-
-f.write('''
-set term png size 1200,700
-set title "Message round trip times"
-set terminal postscript
-set ylabel "# of requests"
-set xlabel "Round trip time (seconds)"
-set grid
-set style fill solid border -1 pattern 2
-set output "round_trip_distribution.ps"
-set boxwidth %f
-plot "round_trip_distribution.log" using 1:2 title "requests" with boxes
-
-set terminal png small
-set output "round_trip_distribution.png"
-replot
-''' % (float(quantize) / 1000.0))
-f.close()
-
-os.system('gnuplot round_trip_distribution.gnuplot');
-
diff -ruN libtorrent-libtorrent_0_16_5/parse_dht_stats.py libtorrent/parse_dht_stats.py
--- libtorrent-libtorrent_0_16_5/parse_dht_stats.py	2012-10-23 12:23:09.000000000 +0800
+++ libtorrent/parse_dht_stats.py	1970-01-01 08:00:00.000000000 +0800
@@ -1,53 +0,0 @@
-#! /usr/bin/env python
-import sys
-import os
-
-gnuplot_scripts = []
-
-def gen_stats_gnuplot(name, y, lines):
-
-	global gnuplot_scripts
-
-	stat = open(sys.argv[1])
-	line = stat.readline()
-	while not 'minute:' in line:
-		line = stat.readline()
-
-	names = line.strip().split(':')
-	counter = 1
-	for i in names:
-		print '%d: %s' % (counter, i)
-		counter += 1
-
-	out = open('%s.gnuplot' % name, 'w+')
-	out.write('''
-set term png size 1200,700 small
-set output "%s.png"
-set title "%s"
-set ylabel "%s"
-set xlabel "time (minutes)"
-plot ''' % (name, name.strip('_'), y))
-	first = True
-	for i in lines:
-		if not first:
-			out.write(', \\\n')
-		first = False
-		out.write('"%s" using 1:%d title "%s" with lines' % (sys.argv[1], names.index(i)+1, i))
-	out.write('\n')
-
-	out.write('''set terminal postscript
-set output "%s.ps"
-replot
-''' % (name))
-	out.close()
-	gnuplot_scripts += [name]
-
-gen_stats_gnuplot('dht_routing_table_size', 'nodes', ['active nodes','passive nodes'])
-gen_stats_gnuplot('dht_tracker_table_size', '', ['num torrents', 'num peers'])
-gen_stats_gnuplot('dht_announces', 'messages per minute', ['announces per min', 'failed announces per min'])
-gen_stats_gnuplot('dht_clients', 'messages per minute', ['total msgs per min', 'az msgs per min', 'ut msgs per min', 'lt msgs per min', 'mp msgs per min', 'gr msgs per min'])
-gen_stats_gnuplot('dht_rate', 'bytes per second',  ['bytes in per sec', 'bytes out per sec'])
-gen_stats_gnuplot('dht_errors', 'messages per minute',  ['error replies sent', 'error queries recvd'])
-
-for i in gnuplot_scripts:
-	os.system('gnuplot %s.gnuplot' % i);
diff -ruN libtorrent-libtorrent_0_16_5/parse_disk_access.py libtorrent/parse_disk_access.py
--- libtorrent-libtorrent_0_16_5/parse_disk_access.py	2012-10-23 12:23:09.000000000 +0800
+++ libtorrent/parse_disk_access.py	1970-01-01 08:00:00.000000000 +0800
@@ -1,102 +0,0 @@
-#! /usr/bin/env python
-
-import os, sys, time
-
-lines = open(sys.argv[1], 'rb').readlines()
-
-# logfile format:
-# <time(us)> <key>: <value>
-# example:
-# 16434 read cache: 17
-
-keys = ['read', 'write', 'head movement', 'seek per read byte', 'seek per written byte',
-	'read operations per second', 'write operations per second']
-colors = ['305030', '503030', '3030f0', '10a010', 'a01010', 'd0d040', 'd040d0']
-style = ['dots', 'points', 'lines', 'lines', 'lines', 'lines', 'lines']
-axis = ['x1y1', 'x1y1', 'x1y2', 'x1y2', 'x1y2', 'x1y2', 'x1y2']
-plot = [True, False, False, False, False, True, False]
-
-out = open('disk_access_log.dat', 'w+')
-
-time = 1000000
-
-last_pos = 0
-last_t = 0
-cur_movement = 0
-cur_read = 0
-cur_write = 0
-cur_read_ops = 0
-cur_write_ops = 0
-
-for l in lines:
-	try:
-		# strip newline
-		l = l[0:-1].split(' ')
-		t = int(l[0])
-		k = l[1]
-		n = int(l[2])
-	except:
-		print l
-		continue
-
-	read = '-'
-	write = '-'
-	movement = '-'
-	amount_read = '-'
-	amount_write = '-'
-	read_ops = '-'
-	write_ops = '-'
-	if k == 'read':
-		read = '%d' % n
-		cur_read_ops += 1
-	if k == 'write':
-		write = '%d' % n
-		cur_write_ops += 1
-	if k == 'read_end': cur_read += n - last_pos
-	if k == 'write_end': cur_write += n - last_pos
-
-	cur_movement += abs(last_pos - n)
-	last_pos = n
-
-	if last_t + time <= t:
-		movement = '%d' % cur_movement
-		if cur_read > 0:
-			amount_read = '%d' % (cur_movement / cur_read)
-		if cur_write > 0:
-			amount_write = '%d' % (cur_movement / cur_write)
-		read_ops = '%d' % cur_read_ops
-		write_ops = '%d' % cur_write_ops
-		cur_movement = 0
-		cur_read = 0
-		cur_write = 0
-		last_t = t
-		cur_read_ops = 0
-		cur_write_ops = 0
-
-	print >>out, '%d\t%s\t%s\t%s\t%s\t%s\t%s\t%s' % (t, read, write, movement, amount_read, amount_write, read_ops, write_ops)
-
-out.close()
-
-out = open('disk_access.gnuplot', 'wb')
-print >>out, "set term png size 1200,700"
-print >>out, 'set output "disk_access.png"'
-print >>out, 'set xrange [*:*]'
-#print >>out, 'set y2range [0:*]'
-print >>out, 'set xlabel "time (us)"'
-print >>out, 'set ylabel "drive offset"'
-#print >>out, 'set y2label "bytes / %d second(s)"' % (time / 1000)
-print >>out, "set key box"
-print >>out, "set tics nomirror"
-print >>out, "set y2tics auto"
-print >>out, 'plot',
-count = 1
-for k in keys:
-	count += 1
-	if not plot[count-2]: continue
-	print >>out, ' "disk_access_log.dat" using 1:%d title "%s" with %s lt rgb "#%s" axis %s,' \
-		% (count, k, style[count-2], colors[count-2], axis[count-2]),
-print >>out, 'x=0'
-out.close()
-
-os.system('gnuplot disk_access.gnuplot')
-
diff -ruN libtorrent-libtorrent_0_16_5/parse_disk_buffer_log.py libtorrent/parse_disk_buffer_log.py
--- libtorrent-libtorrent_0_16_5/parse_disk_buffer_log.py	2012-10-23 12:23:09.000000000 +0800
+++ libtorrent/parse_disk_buffer_log.py	1970-01-01 08:00:00.000000000 +0800
@@ -1,91 +0,0 @@
-#! /usr/bin/env python
-
-import os, sys, time
-
-lines = open(sys.argv[1], 'rb').readlines()
-
-# logfile format:
-# <time(ms)> <key>: <value>
-# example:
-# 16434 read cache: 17
-
-key_order = ['receive buffer', 'send buffer', 'released send buffer', 'posted send buffer',
-	'received send buffer', 'dispatched send buffer', 'queued send buffer',
-	'write cache', 'read cache', 'hash temp']
-colors = ['30f030', '001070', '101080', '2040a0',
-	'4070d0', '80a0f0', 'f03030',
-	'80f080', 'f08080', '4040ff']
-
-keys = []
-fields = {}
-maximum = {}
-out = open('disk_buffer_log.dat', 'w+')
-
-field_sum = {}
-field_num_samples = {}
-field_timestamp = {}
-
-for c in key_order:
-	keys.append(c)
-	fields[c] = 0
-	maximum[c] = 0
-	field_sum[c] = 0
-	field_num_samples[c] = 0
-	field_timestamp[c] = 0
-
-last_t = 0
-for l in lines:
-	try:
-		t = int(l[0:l.find(' ')])
-		c = l[l.find(' ')+1:l.find(':')]
-		n = int(l[l.find(':')+1:-1])
-	except:
-		print l
-		continue
-
-	if last_t != t:
-		print >>out, '%d\t' % last_t,
-		for i in keys:
-			print >>out, '%d\t' % maximum[i],
-		print >>out, '\n',
-
-	if not c in keys: continue
-
-	field_sum[c] += fields[c] * float(t - field_timestamp[c])
-	field_timestamp[c] = t
-
-	fields[c] = n
-
-	if n > maximum[c]: maximum[c] = n
-
-	if last_t != t:
-		last_t = t
-		maximum = fields
-
-for i in keys:
-	print '%s: avg: %f' % (i, field_sum[i] / last_t)
-print
-	
-out.close()
-
-out = open('disk_buffer.gnuplot', 'wb')
-print >>out, "set term png size 1200,700"
-print >>out, 'set output "disk_buffer.png"'
-print >>out, 'set xrange [0:*]'
-print >>out, 'set xlabel "time (ms)"'
-print >>out, 'set ylabel "buffers"'
-print >>out, "set style data lines"
-print >>out, "set key box"
-print >>out, 'plot',
-count = 1 + len(keys)
-keys.reverse()
-for k in keys:
-	expr = "$%d" % count
-	for i in xrange(2, count): expr += "+$%d" % i
-	count -= 1
-	print >>out, ' "disk_buffer_log.dat" using 1:(%s) title "%s" with filledcurves x1 lt rgb "#%s",' % (expr, k, colors[count-1]),
-print >>out, 'x=0'
-out.close()
-
-os.system('gnuplot disk_buffer.gnuplot')
-
diff -ruN libtorrent-libtorrent_0_16_5/parse_disk_log.py libtorrent/parse_disk_log.py
--- libtorrent-libtorrent_0_16_5/parse_disk_log.py	2012-10-23 12:23:09.000000000 +0800
+++ libtorrent/parse_disk_log.py	1970-01-01 08:00:00.000000000 +0800
@@ -1,121 +0,0 @@
-#! /usr/bin/env python
-# Copyright Arvid Norberg 2008. Use, modification and distribution is
-# subject to the Boost Software License, Version 1.0. (See accompanying
-# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
-
-import os, sys, time
-
-lines = open(sys.argv[1], 'rb').readlines()
-
-if len(sys.argv) < 2:
-	print "usage: parse_disk_log.py logfile [seconds]"
-	sys.exit(1)
-
-keys = ['write', 'read', 'read-cache-hit', 'hash', 'move', 'release', 'idle', \
-	'delete', 'check_fastresume', 'check_files', 'clear-cache', \
-	'abort_thread', 'abort_torrent', 'save_resume_data', 'rename_file', \
-	'flushing', 'update_settings', 'finalize_file', 'sorting_job', \
-	'check_cache_hit']
-throughput_keys = ['write', 'read', 'read-cache-hit']
-
-# logfile format:
-# <time(ms)> <state>
-# example:
-# 34523 idle
-# 34722 write
-
-if len(sys.argv) > 2:
-	quantization = long(sys.argv[2]) * 1000000
-else:
-	quantization = 1000000
-
-out = open('disk_io.dat', 'wb')
-out2 = open('disk_throughput.dat', 'wb')
-state = 'idle'
-time = -1
-start_time = -1
-i = 0
-state_timer = {}
-throughput = {}
-for k in keys: state_timer[k] = 0
-for k in throughput_keys: throughput[k] = 0
-
-for l in lines:
-	l = l.strip().split()
-	if len(l) < 2:
-		print l
-		continue
-#	try:
-	new_time = long(l[0])
-	if time == -1:
-		time = new_time
-		i = new_time
-		start_time = new_time
-	while new_time > i + quantization:
-		i += quantization
-		state_timer[state] += i - time
-		time = i
-		for k in keys: print >>out, (state_timer[k] / float(quantization) * 100.),
-		print >>out
-		print >>out2, time - start_time,
-		for k in throughput_keys:
-			print >>out2, throughput[k] * 1000 / float(quantization),
-			print '-- %s %d' % (k, throughput[k])
-		print >>out2
-		for k in keys: state_timer[k] = 0
-		for k in throughput_keys: throughput[k] = 0
-	state_timer[state] += new_time - time
-	time = new_time
-	state = l[1]
-	if state in throughput_keys:
-		throughput[state] += long(l[2])
-#	except:
-#		print l
-
-i += quantization
-state_timer[state] += i - time
-time = i
-for k in keys: print >>out, (state_timer[k] / float(quantization) * 100.),
-print >>out
-print >>out2, time - start_time,
-for k in throughput_keys:
-	print >>out2, throughput[k] * 1000 / float(quantization),
-	print '-- %s %d' % (k, throughput[k])
-print >>out2
-for k in keys: state_timer[k] = 0
-for k in throughput_keys: throughput[k] = 0
-out.close()
-out2.close()
-
-out = open('disk_io.gnuplot', 'wb')
-print >>out, "set term png size 1200,700"
-
-print >>out, 'set output "disk_throughput.png"'
-print >>out, 'set title "disk throughput per %f second(s)"' % (quantization / float(1000000))
-print >>out, 'set ylabel "throughput (kB/s)"'
-print >>out, 'plot',
-i = 0
-for k in throughput_keys:
-	print >>out, ' "disk_throughput.dat" using 1:%d title "%s" with lines,' % (i + 2, throughput_keys[i]),
-	i = i + 1
-print >>out, 'x=0'
-
-print >>out, 'set output "disk_io.png"'
-print >>out, 'set ylabel "utilization (%)"'
-print >>out, 'set xrange [0:*]'
-print >>out, 'set title "disk io utilization per %f second(s)"' % (quantization / float(1000000))
-print >>out, "set key box"
-print >>out, "set style data histogram"
-print >>out, "set style histogram rowstacked"
-print >>out, "set style fill solid"
-print >>out, 'plot',
-i = 0
-for k in keys:
-	if k != 'idle':
-		print >>out, ' "disk_io.dat" using %d title "%s",' % (i + 1, keys[i]),
-	i = i + 1
-print >>out, 'x=0'
-out.close()
-
-os.system('gnuplot disk_io.gnuplot');
-
diff -ruN libtorrent-libtorrent_0_16_5/parse_memory_log.py libtorrent/parse_memory_log.py
--- libtorrent-libtorrent_0_16_5/parse_memory_log.py	2012-10-23 12:23:09.000000000 +0800
+++ libtorrent/parse_memory_log.py	1970-01-01 08:00:00.000000000 +0800
@@ -1,126 +0,0 @@
-#! /usr/bin/env python
-import os, sys, time
-
-# usage: memory.log memory_index.log
-
-lines = open(sys.argv[1], 'rb').readlines()
-index = open(sys.argv[2], 'rb').readlines()
-
-# logfile format:
-# #<allocation-point> <time(ms)> <key ('A' | 'F')> <address> <size> <total-size> <total-space-time> <peak-total-size>
-# example:
-# #12 38 A 0xd902a0 16 16 0 16
-
-allocation_points_to_print = 30
-
-def print_allocation_point(ap):
-   print 'space_time: %d kBms' % (ap['spacetime'] / 1024)
-   print 'allocations: %d' % ap['allocations']
-   print 'peak: %d kB' % (ap['peak'] / 1024)
-   print 'stack: '
-   counter = 0
-   for e in ap['stack']:
-      print '#%d %s' % (counter, e)
-      counter += 1
-
-allocation_points = []
-for l in index:
-   l = l.split('#')
-   l.pop(0)
-   ap = { 'allocations': 0, 'peak': 0, 'spacetime': 0, 'allocation_point': len(allocation_points), 'stack': l}
-   allocation_points.append(ap);
-
-for l in lines:
-   l = l.lstrip('#').rstrip('\n').split(' ')
-   if len(l) != 8:
-      print l
-      continue
-   try:
-      ap = int(l[0])
-      allocation_points[ap]['allocations'] += 1
-      allocation_points[ap]['peak'] = int(l[7])
-      allocation_points[ap]['spacetime'] = int(l[6])
-   except Exception, e:
-      print type(e), e, l
-
-print '=== space time ==='
-
-hot_ap = []
-allocation_points.sort(key = lambda x:x['spacetime'], reverse=True);
-counter = 0
-for ap in allocation_points[0:allocation_points_to_print]:
-   print '== %d ==' % counter
-   counter += 1
-   print_allocation_point(ap)
-   hot_ap.append(ap['allocation_point']);
-
-print '=== allocations ==='
-
-allocation_points.sort(key = lambda x:x['allocations'], reverse=True);
-for ap in allocation_points[0:allocation_points_to_print]:
-   print_allocation_point(ap)
-
-print '=== peak ==='
-
-allocation_points.sort(key = lambda x:x['peak'], reverse=True);
-for ap in allocation_points[0:allocation_points_to_print]:
-   print_allocation_point(ap)
-
-# generate graph
-lines = open(sys.argv[1], 'rb').readlines()
-
-out = open('memory.dat', 'wb')
-cur_line = [0] * allocation_points_to_print
-prev_line = [0] * allocation_points_to_print
-last_time = 0
-
-for l in lines:
-   l = l.lstrip('#').rstrip('\n').split(' ')
-   if len(l) != 8:
-      print l
-      continue
-   try:
-      time = int(l[1])
-      if time != last_time:
-         print >>out, last_time, '\t',
-         for i in range(allocation_points_to_print):
-	    if cur_line[i] == -1:
-	       print >>out, prev_line[i], '\t',
-	    else:
-	       print >>out, cur_line[i], '\t',
-	       prev_line[i] = cur_line[i]
-         print >>out
-	 cur_line = [-1] * allocation_points_to_print
-         last_time = time
- 
-      size = int(l[5])
-      ap = int(l[0])
-      if ap in hot_ap:
-         index = hot_ap.index(ap)
-         cur_line[index] = max(cur_line[index], size)
-
-   except Exception, e:
-      print type(e), e, l
-
-out.close()
-
-out = open('memory.gnuplot', 'wb')
-print >>out, "set term png size 1200,700"
-print >>out, 'set output "memory.png"'
-print >>out, 'set xrange [0:*]'
-print >>out, 'set xlabel "time (ms)"'
-print >>out, 'set ylabel "bytes (B)"'
-print >>out, "set style data lines"
-print >>out, "set key box"
-print >>out, 'plot',
-for k in range(allocation_points_to_print):
-   print >>out, ' "memory.dat" using 1:(',
-   for i in range(k, allocation_points_to_print):
-      if i == k: print >>out, '$%d' % (i + 2),
-      else: print >>out, '+$%d' % (i + 2),
-   print >>out, ') title "%d" with filledcurves x1, \\' % k
-print >>out, 'x=0'
-out.close()
-
-os.system('gnuplot memory.gnuplot');
-
diff -ruN libtorrent-libtorrent_0_16_5/parse_sample.py libtorrent/parse_sample.py
--- libtorrent-libtorrent_0_16_5/parse_sample.py	2012-10-23 12:23:09.000000000 +0800
+++ libtorrent/parse_sample.py	1970-01-01 08:00:00.000000000 +0800
@@ -1,101 +0,0 @@
-import sys
-
-# to use this script, first run 'sample' to sample your libtorrent based process
-# the output can then be passed to this script to auto-fold call stacks at
-# relevant depths and to filter out low sample counts
-f = open(sys.argv[1])
-
-def parse_line(l):
-	indentation = 0
-	while indentation < len(l) and l[indentation] == ' ':
-		indentation += 1
-	if indentation == 0:
-		return (0, 0, '')
-
-
-	l = l.strip().split(' ')
-	samples = int(l[0])
-	fun = ' '.join(l[1:])
-
-	return (indentation, samples, fun)
-
-fold = -1
-
-try:
-	sample_limit = int(sys.argv[2])
-except:
-	sample_limit = 5
-
-fun_samples = {}
-
-for l in f:
-	if 'Sort by top of stack' in l: break
-
-	indentation, samples, fun = parse_line(l)
-	if samples < sample_limit: continue
-	if fold != -1 and indentation > fold: continue
-	fold = -1
-
-	if '__gnu_cxx::__normal_iterator<' in fun:
-		fold = indentation - 1
-		continue
-
-	if 'boost::_bi::bind_t' in fun: continue
-	if 'boost::_bi::list' in fun: continue
-	if 'boost::_mfi::mf' in fun: continue
-	if 'boost::_bi::storage' in fun: continue
-
-# should only add leaves
-	if fun in fun_samples: fun_samples[fun] += samples
-	else: fun_samples[fun] = samples
-
-	output = '%s%-4d %s' % (' ' * (indentation/2), samples, fun)
-	if len(output) > 200: output = output[0:200]
-	print output
-
-	if 'invariant_checker_impl' in fun: fold = indentation
-	if '::find_POD' in fun: fold = indentation
-	if 'SHA1_Update' in fun: fold = indentation
-	if 'boost::detail::function::basic_vtable' in fun: fold = indentation
-	if 'operator new' in fun: fold = indentation
-	if 'malloc' == fun: fold = indentation
-	if 'free' == fun: fold = indentation
-	if 'std::_Rb_tree' in fun: fold = indentation
-	if 'pthread_cond_wait' in fun: fold = indentation
-	if 'mp_exptmod' == fun: fold = indentation
-	if '::check_invariant()' in fun: fold = indentation
-	if 'libtorrent::condition::wait' in fun: fold = indentation
-	if 'libtorrent::sleep' in fun: fold = indentation
-	if 'puts' == fun: fold = indentation
-	if 'boost::asio::basic_stream_socket' in fun: fold = indentation
-	if 'recvmsg' == fun: fold = indentation
-	if 'sendmsg' == fun: fold = indentation
-	if 'semaphore_signal_trap' == fun: fold = indentation
-	if 'boost::detail::atomic_count::operator' in fun: fold = indentation
-	if 'pthread_mutex_lock' == fun: fold = indentation
-	if 'pthread_mutex_unlock' == fun: fold = indentation
-	if '>::~vector()' == fun: fold = indentation
-	if 'szone_free_definite_size' == fun: fold = indentation
-	if 'snprintf' == fun: fold = indentation
-	if 'usleep' == fun: fold = indentation
-	if 'pthread_mutex_lock' == fun: fold = indentation
-	if 'pthread_mutex_unlock' == fun: fold = indentation
-	if 'std::string::append' in fun: fold = indentation
-	if 'getipnodebyname' == fun: fold = indentation
-	if '__gnu_debug::_Safe_iterator<std::' in fun: fold = indentation
-	if 'fflush' == fun: fold = indentation
-	if 'vfprintf' == fun: fold = indentation
-	if 'fprintf' == fun: fold = indentation
-	if 'BN_mod_exp' == fun: fold = indentation
-	if 'BN_CTX_free' == fun: fold = indentation
-	if 'cerror' == fun: fold = indentation
-	
-list = []
-for k in fun_samples:
-	list.append((fun_samples[k], k))
-
-list = sorted(list, reverse=True)
-
-for i in list:
-	print '%-4d %s' % (i[0], i[1])
-
diff -ruN libtorrent-libtorrent_0_16_5/parse_utp_log.py libtorrent/parse_utp_log.py
--- libtorrent-libtorrent_0_16_5/parse_utp_log.py	2012-10-23 12:23:09.000000000 +0800
+++ libtorrent/parse_utp_log.py	1970-01-01 08:00:00.000000000 +0800
@@ -1,309 +0,0 @@
-import os, sys, time
-
-# usage: parse_log.py log-file [socket-index to focus on]
-
-
-socket_filter = None
-if len(sys.argv) >= 3:
-	socket_filter = sys.argv[2].strip()
-
-if socket_filter == None:
-	print "scanning for socket with the most packets"
-	file = open(sys.argv[1], 'rb')
-
-	sockets = {}
-
-	for l in file:
-		if not 'our_delay' in l: continue
-	
-		try:
-			a = l.strip().split(" ")
-			socket_index = a[1][:-1]
-		except:
-			continue
-
-		# msvc's runtime library doesn't prefix pointers
-		# with '0x'
-#		if socket_index[:2] != '0x':
-#			continue
-
-		if socket_index in sockets:
-			sockets[socket_index] += 1
-		else:
-			sockets[socket_index] = 1
-
-	items = sockets.items()
-	items.sort(lambda x, y: y[1] - x[1])
-
-	count = 0
-	for i in items:
-		print '%s: %d' % (i[0], i[1])
-		count += 1
-		if count > 5: break
-	
-	file.close()
-	socket_filter = items[0][0]
-	print '\nfocusing on socket %s' % socket_filter
-
-file = open(sys.argv[1], 'rb')
-out_file = 'utp.out%s' % socket_filter;
-out = open(out_file, 'wb')
-
-delay_samples = 'points lc rgb "blue"'
-delay_base = 'steps lw 2 lc rgb "purple"'
-target_delay = 'steps lw 2 lc rgb "red"'
-off_target = 'dots lc rgb "blue"'
-cwnd = 'steps lc rgb "green"'
-window_size = 'steps lc rgb "sea-green"'
-rtt = 'lines lc rgb "light-blue"'
-
-metrics = {
-	'our_delay':['our delay (ms)', 'x1y2', delay_samples],
-	'upload_rate':['send rate (B/s)', 'x1y1', 'lines'],
-	'max_window':['cwnd (B)', 'x1y1', cwnd],
-	'target_delay':['target delay (ms)', 'x1y2', target_delay],
-	'cur_window':['bytes in-flight (B)', 'x1y1', window_size],
-	'cur_window_packets':['number of packets in-flight', 'x1y2', 'steps'],
-	'packet_size':['current packet size (B)', 'x1y2', 'steps'],
-	'rtt':['rtt (ms)', 'x1y2', rtt],
-	'off_target':['off-target (ms)', 'x1y2', off_target],
-	'delay_sum':['delay sum (ms)', 'x1y2', 'steps'],
-	'their_delay':['their delay (ms)', 'x1y2', delay_samples],
-	'get_microseconds':['clock (us)', 'x1y1', 'steps'],
-	'wnduser':['advertised window size (B)', 'x1y1', 'steps'],
-
-	'delay_base':['delay base (us)', 'x1y1', delay_base],
-	'their_delay_base':['their delay base (us)', 'x1y1', delay_base],
-	'their_actual_delay':['their actual delay (us)', 'x1y1', delay_samples],
-	'actual_delay':['actual_delay (us)', 'x1y1', delay_samples],
-	'send_buffer':['send buffer size (B)', 'x1y1', 'lines'],
-	'recv_buffer':['receive buffer size (B)', 'x1y1', 'lines']
-}
-
-histogram_quantization = 1
-socket_index = None
-
-columns = []
-
-begin = None
-
-title = "-"
-packet_loss = 0
-packet_timeout = 0
-
-delay_histogram = {}
-packet_size_histogram = {}
-window_size = {'0': 0, '1': 0}
-
-# [35301484] 0x00ec1190: actual_delay:1021583 our_delay:102 their_delay:-1021345 off_target:297 max_window:2687 upload_rate:18942 delay_base:1021481154 delay_sum:-1021242 target_delay:400 acked_bytes:1441 cur_window:2882 scaled_gain:2.432
-
-counter = 0
-
-print "reading log file"
-
-for l in file:
-    if "UTP_Connect" in l:
-        title = l[:-2]
-        if socket_filter != None:
-            title += ' socket: %s' % socket_filter
-        else:
-            title += ' sum of all sockets'
-        continue
-
-    try:
-        a = l.strip().split(" ")
-        t = a[0][1:-1]
-        socket_index = a[1][:-1]
-    except:
-        continue
-#    if socket_index[:2] != '0x':
-#        continue
-    
-    if socket_filter != None and socket_index != socket_filter:
-        continue
-
-    counter += 1
-    if (counter % 300 == 0):
-        print "\r%d  " % counter,
-
-    if "lost." in l:
-        packet_loss = packet_loss + 1
-        continue
-    if "Packet timeout" in l:
-        packet_timeout = packet_timeout + 1
-        continue
-
-    if "sending packet" in l:
-        v = l.split('size:')[1].split(' ')[0]
-        packet_size_histogram[v] = 1 + packet_size_histogram.get(v, 0)
-
-    if "our_delay:" not in l:
-        continue
-
-# used for Logf timestamps
-#    t, m = t.split(".")
-#    t = time.strptime(t, "%H:%M:%S")
-#    t = list(t)
-#    t[0] += 107
-#    t = tuple(t)
-#    m = float(m)
-#    m /= 1000.0
-#    t = time.mktime(t) + m
-
-# used for tick count timestamps
-    t = int(t)
-
-    if begin is None:
-        begin = t
-    t = t - begin
-    # print time. Convert from milliseconds to seconds
-    print >>out, '%f\t' % (float(t)/1000.),
-
-    #if t > 200000:
-    #    break
-
-    fill_columns = not columns
-    for i in a[2:]:
-        try:
-            n, v = i.split(':')
-        except:
-            continue
-        v = float(v)
-        if n == "our_delay":
-            bucket = int(v / histogram_quantization)
-            delay_histogram[bucket] = 1 + delay_histogram.get(bucket, 0)
-        if not n in metrics: continue
-        if fill_columns:
-            columns.append(n)
-        if n == "max_window":
-            window_size[socket_index] = v
-            print >>out, '%f\t' % int(reduce(lambda a,b: a+b, window_size.values())),
-        else:
-            print >>out, '%f\t' % v,
-    print >>out, float(packet_loss * 8000), float(packet_timeout * 8000)
-    packet_loss = 0
-    packet_timeout = 0
-
-out.close()
-
-out = open('%s.histogram' % out_file, 'wb')
-for d,f in delay_histogram.iteritems():
-    print >>out, float(d*histogram_quantization) + histogram_quantization / 2, f
-out.close()
-
-out = open('%s_packet_size.histogram' % out_file, 'wb')
-for d,f in packet_size_histogram.iteritems():
-    print >>out, d, f
-out.close()
-
-plot = [
-	{
-		'data': ['upload_rate', 'max_window', 'cur_window', 'wnduser', 'cur_window_packets', 'packet_size', 'rtt'],
-		'title': 'send-packet-size',
-		'y1': 'Bytes',
-		'y2': 'Time (ms)'
-	},
-	{
-		'data': ['max_window', 'cur_window', 'our_delay', 'target_delay'],
-		'title': 'cwnd',
-		'y1': 'Bytes',
-		'y2': 'Time (ms)'
-	},
-	{
-		'data': ['our_delay', 'max_window', 'target_delay', 'cur_window', 'wnduser', 'cur_window_packets'],
-		'title': 'uploading',
-		'y1': 'Bytes',
-		'y2': 'Time (ms)'
-	},
-	{
-		'data': ['our_delay', 'max_window', 'target_delay', 'cur_window', 'send_buffer'],
-		'title': 'uploading_packets',
-		'y1': 'Bytes',
-		'y2': 'Time (ms)'
-	},
-	{
-		'data': ['their_delay', 'target_delay', 'rtt'],
-		'title': 'their_delay',
-		'y1': '',
-		'y2': 'Time (ms)'
-	},
-	{
-		'data': ['their_actual_delay','their_delay_base'],
-		'title': 'their_delay_base',
-		'y1': 'Time (us)',
-		'y2': ''
-	},
-	{
-		'data': ['our_delay', 'target_delay', 'rtt'],
-		'title': 'our-delay',
-		'y1': '',
-		'y2': 'Time (ms)'
-	},
-	{
-		'data': ['actual_delay', 'delay_base'],
-		'title': 'our_delay_base',
-		'y1': 'Time (us)',
-		'y2': ''
-	}
-]
-
-out = open('utp.gnuplot', 'w+')
-
-files = ''
-
-#print >>out, 'set xtics 0, 20'
-print >>out, "set term png size 1280,800"
-print >>out, 'set output "%s.delays.png"' % out_file
-print >>out, 'set xrange [0:200]'
-print >>out, 'set xlabel "delay (ms)"'
-print >>out, 'set boxwidth 1'
-print >>out, 'set ylabel "number of packets"'
-print >>out, 'plot "%s.histogram" using 1:2 with boxes fs solid 0.3' % out_file
-files += out_file + '.delays.png '
-
-print >>out, 'set output "%s.packet_sizes.png"' % out_file
-print >>out, 'set xrange [0:*]'
-print >>out, 'set xlabel "packet size (B)"'
-print >>out, 'set boxwidth 1'
-print >>out, 'set ylabel "number of packets sent"'
-print >>out, 'set logscale y'
-print >>out, 'plot "%s_packet_size.histogram" using 1:2 with boxes fs solid 0.3' % out_file
-print >>out, 'set nologscale y'
-files += out_file + '.packet_sizes.png '
-
-print >>out, "set style data steps"
-#print >>out, "set yrange [0:*]"
-print >>out, "set y2range [*:*]"
-#set hidden3d
-#set title "Peer bandwidth distribution"
-#set xlabel "Ratio"
-
-for p in plot:
-	print >>out, 'set title "%s %s"' % (p['title'], title)
-	print >>out, 'set xlabel "time (s)"'
-	print >>out, 'set ylabel "%s"' % p['y1']
-	print >>out, "set tics nomirror"
-	print >>out, 'set y2tics'
-	print >>out, 'set y2label "%s"' % p['y2']
-	print >>out, 'set xrange [0:*]'
-	print >>out, "set key box"
-	print >>out, "set term png size 1280,800"
-	print >>out, 'set output "%s-%s.png"' % (out_file, p['title'])
-	files += '%s-%s.png ' % (out_file, p['title'])
-
-	comma = ''
-	print >>out, "plot",
-
-	for c in p['data']:
-		if not c in metrics: continue
-		i = columns.index(c)
-		print >>out, '%s"%s" using ($1/1000):%d title "%s-%s" axes %s with %s' % (comma, out_file, i + 2, metrics[c][0], metrics[c][1], metrics[c][1], metrics[c][2]),
-		comma = ', '
-	print >>out, ''
-
-out.close()
-
-os.system("gnuplot utp.gnuplot")
-
-os.system("open %s" % files)
-
diff -ruN libtorrent-libtorrent_0_16_5/set_version.py libtorrent/set_version.py
--- libtorrent-libtorrent_0_16_5/set_version.py	2012-10-23 12:23:09.000000000 +0800
+++ libtorrent/set_version.py	1970-01-01 08:00:00.000000000 +0800
@@ -1,42 +0,0 @@
-#! /usr/bin/env python
-import os
-import sys
-import glob
-
-version = (int(sys.argv[1]), int(sys.argv[2]), int(sys.argv[3]), int(sys.argv[4]))
-
-def substitute_file(name):
-	subst = ''
-	f = open(name)
-	for l in f:
-		if '#define LIBTORRENT_VERSION_MAJOR' in l and name.endswith('.hpp'):
-			l = '#define LIBTORRENT_VERSION_MAJOR %d\n' % version[0]
-		elif '#define LIBTORRENT_VERSION_MINOR' in l and name.endswith('.hpp'):
-			l = '#define LIBTORRENT_VERSION_MINOR %d\n' % version[1]
-		elif '#define LIBTORRENT_VERSION_TINY' in l and name.endswith('.hpp'):
-			l = '#define LIBTORRENT_VERSION_TINY %d\n' % version[2]
-		elif '#define LIBTORRENT_VERSION ' in l and name.endswith('.hpp'):
-			l = '#define LIBTORRENT_VERSION "%d.%d.%d.%d"\n' % (version[0], version[1], version[2], version[3])
-		elif 'AC_INIT([libtorrent-rasterbar]' in l and name.endswith('.ac'):
-			l = 'AC_INIT([libtorrent-rasterbar],[%d.%d.%d],[arvid@cs.umu.se],\n' % (version[0], version[1], version[2])
-		elif 'set (VERSION ' in l and name.endswith('.txt'):
-			l = 'set (VERSION "%d.%d.%d")\n' % (version[0], version[1], version[2])
-		elif ':Version: ' in l and name.endswith('.rst'):
-			l = ':Version: %d.%d.%d\n' % (version[0], version[1], version[2])
-		elif 'VERSION = ' in l and name.endswith('Jamfile'):
-			l = 'VERSION = %d.%d.%d ;\n' % (version[0], version[1], version[2])
-
-		subst += l
-
-	f.close()
-	open(name, 'w+').write(subst)
-
-
-substitute_file('include/libtorrent/version.hpp')
-substitute_file('CMakeLists.txt')
-substitute_file('configure.ac')
-for i in glob.glob('docs/*.rst'):
-	substitute_file(i)
-substitute_file('Jamfile')
-
-
diff -ruN libtorrent-libtorrent_0_16_5/src/alert.cpp libtorrent/src/alert.cpp
--- libtorrent-libtorrent_0_16_5/src/alert.cpp	2012-10-23 12:23:09.000000000 +0800
+++ libtorrent/src/alert.cpp	2016-12-04 14:56:15.967358319 +0800
@@ -67,8 +67,10 @@
 	std::string peer_alert::message() const
 	{
 		error_code ec;
-		return torrent_alert::message() + " peer (" + ip.address().to_string(ec)
-			+ ", " + identify_client(pid) + ")";
+		char msg[200];
+		snprintf(msg, sizeof(msg), "%s peer(%s:%d, %s)", torrent_alert::message().c_str()
+		        , ip.address().to_string(ec).c_str(), ip.port(), identify_client(pid).c_str());
+		return msg;
 	}
 
 	std::string tracker_alert::message() const
@@ -274,9 +276,25 @@
 
 	std::string listen_failed_alert::message() const
 	{
-		char ret[200];
-		snprintf(ret, sizeof(ret), "listening on %s failed: %s"
-			, print_endpoint(endpoint).c_str(), error.message().c_str());
+		static char const* op_str[] =
+		{
+				"parse_addr",
+				"open",
+				"bind",
+				"listen",
+				"get_peer_name",
+				"accept"
+		};
+		static char const* type_str[] =
+		{
+				"TCP", "TCP/SSL", "UDP", "I2P", "Socks5"
+		};
+		char ret[250];
+		snprintf(ret, sizeof(ret), "listening on %s failed: [%s] [%s] %s"
+						, print_endpoint(endpoint).c_str()
+						, op_str[operation]
+						, type_str[sock_type]
+						, convert_from_native(error.message()).c_str());
 		return ret;
 	}
 
diff -ruN libtorrent-libtorrent_0_16_5/src/bandwidth_limit.cpp libtorrent/src/bandwidth_limit.cpp
--- libtorrent-libtorrent_0_16_5/src/bandwidth_limit.cpp	2012-10-23 12:23:09.000000000 +0800
+++ libtorrent/src/bandwidth_limit.cpp	2016-12-04 14:56:15.967358319 +0800
@@ -47,7 +47,7 @@
 	{
 		TORRENT_ASSERT(limit >= 0);
 		// if the throttle is more than this, we might overflow
-		TORRENT_ASSERT(limit < INT_MAX / 31);
+		// TORRENT_ASSERT(limit < INT_MAX / 31);
 		m_limit = limit;
 	}
 	
diff -ruN libtorrent-libtorrent_0_16_5/src/bandwidth_manager.cpp libtorrent/src/bandwidth_manager.cpp
--- libtorrent-libtorrent_0_16_5/src/bandwidth_manager.cpp	2012-10-23 12:23:09.000000000 +0800
+++ libtorrent/src/bandwidth_manager.cpp	2016-12-04 14:56:15.967358319 +0800
@@ -158,6 +158,14 @@
 				// bandwidth channels this peer belongs to
 				for (int j = 0; j < 5 && i->channel[j]; ++j)
 				{
+				    if (j == 1) {// torrent chanel check added by liuming03
+				        boost::shared_ptr<torrent> t = i->peer->associated_torrent().lock();
+				        if (t) {
+		                    bandwidth_channel* bwc = i->channel[j];
+		                    bwc->return_quota(i->assigned);
+				        }
+				        continue;
+				    }
 					bandwidth_channel* bwc = i->channel[j];
 					bwc->return_quota(i->assigned);
 				}
diff -ruN libtorrent-libtorrent_0_16_5/src/create_torrent.cpp libtorrent/src/create_torrent.cpp
--- libtorrent-libtorrent_0_16_5/src/create_torrent.cpp	2012-10-23 12:23:09.000000000 +0800
+++ libtorrent/src/create_torrent.cpp	2016-12-04 14:56:15.966358315 +0800
@@ -53,7 +53,7 @@
 
 	namespace detail
 	{
-		int get_file_attributes(std::string const& p)
+		int get_file_attributes(std::string const& p, int flags)
 		{
 #ifdef TORRENT_WINDOWS
 
@@ -69,7 +69,12 @@
 			return 0;
 #else
 			struct stat s;
-			if (lstat(convert_to_native(p).c_str(), &s) < 0) return 0;
+	        int retval;
+	        if (flags & dont_follow_links)
+	            retval = ::lstat(convert_to_native(p).c_str(), &s);
+	        else
+	            retval = ::stat(convert_to_native(p).c_str(), &s);
+	        if (retval < 0) return 0;
 			int file_attr = 0;
 			if (s.st_mode & S_IXUSR) 
 				file_attr += file_storage::attribute_executable;
@@ -124,6 +129,7 @@
 
 			if (recurse)
 			{
+			    fs.add_path(parent_path(combine_path(l, "x")), s.mode & 0777);
 				for (directory i(f, ec); !i.done(); i.next(ec))
 				{
 					std::string leaf = i.file();
@@ -131,23 +137,28 @@
 					add_files_impl(fs, p, combine_path(l, leaf), pred, flags);
 				}
 			}
-			else
+			else if (s.mode & (file_status::regular_file | file_status::link))
 			{
 				// #error use the fields from s
-				int file_flags = get_file_attributes(f);
+				int file_flags = get_file_attributes(f
+				        , (flags & create_torrent::symlinks) ? dont_follow_links : 0);
 
 				// mask all bits to check if the file is a symlink
 				if ((file_flags & file_storage::attribute_symlink)
-					&& (flags & create_torrent::symlinks)) 
+					&& (flags & create_torrent::symlinks))
 				{
 					std::string sym_path = get_symlink_path(f);
-					fs.add_file(l, 0, file_flags, s.mtime, sym_path);
+					fs.add_file(l, 0, file_flags, s.mtime, sym_path, s.mode & 0777);
 				}
 				else
 				{
-					fs.add_file(l, s.file_size, file_flags, s.mtime);
+					fs.add_file(l, s.file_size, file_flags, s.mtime, "", s.mode & 0777);
 				}
 			}
+            if (fs.num_files() == 0) 
+            {
+                fs.set_name(l);
+            }
 		}
 	}
 
@@ -203,9 +214,12 @@
 #else
 		std::string const& path = p;
 #endif
+        if (t.files().num_pieces() == 0) {
+            return;
+        }
 		boost::scoped_ptr<storage_interface> st(
 			default_storage_constructor(const_cast<file_storage&>(t.files()), 0, path, fp
-			, std::vector<boost::uint8_t>()));
+			, std::vector<boost::uint8_t>(t.files().num_files(), 1)));
 
 		// if we're calculating file hashes as well, use this hasher
 		hasher filehash;
@@ -270,13 +284,14 @@
 		, m_include_mtime((flags & modification_time) != 0)
 		, m_include_symlinks((flags & symlinks) != 0)
 		, m_calculate_file_hashes((flags & calculate_file_hashes) != 0)
+		, m_no_piece_hashes((flags & no_piece_hashes) != 0)
 	{
 		TORRENT_ASSERT(fs.num_files() > 0);
 
 		// return instead of crash in release mode
-		if (fs.num_files() == 0) return;
+		if (fs.num_files() < 0) return;
 
-		if (!m_multifile && has_parent_path(m_files.file_path(*m_files.begin()))) m_multifile = true;
+		if (!m_multifile && fs.num_files() > 0 && has_parent_path(m_files.file_path(*m_files.begin()))) m_multifile = true;
 
 		// a piece_size of 0 means automatic
 		if (piece_size == 0 && !m_merkle_torrent)
@@ -284,8 +299,8 @@
 			const int target_size = 40 * 1024;
 			piece_size = int(fs.total_size() / (target_size / 20));
 	
-			int i = 16*1024;
-			for (; i < 2*1024*1024; i *= 2)
+			int i = 2 * 1024 * 1024;// 默认分块值改为2MB
+			for (; i < 10*1024*1024; i *= 2)// update max piece_size from 2M to 10M liuming03
 			{
 				if (piece_size > i) continue;
 				break;
@@ -313,7 +328,9 @@
 			m_files.optimize(pad_file_limit);
 		m_files.set_num_pieces(static_cast<int>(
 			(m_files.total_size() + m_files.piece_length() - 1) / m_files.piece_length()));
-		m_piece_hash.resize(m_files.num_pieces());
+		if (!m_no_piece_hashes) {
+		    m_piece_hash.resize(m_files.num_pieces());
+		}
 	}
 
 	create_torrent::create_torrent(torrent_info const& ti)
@@ -331,6 +348,9 @@
 
 		if (!ti.creator().empty()) set_creator(ti.creator().c_str());
 		if (!ti.comment().empty()) set_comment(ti.comment().c_str());
+		if (!ti.sp_infohash().is_all_zeros()) {
+            set_sp_infohash(ti.sp_infohash());
+        }
 
 		torrent_info::nodes_t const& nodes = ti.nodes();
 		for (torrent_info::nodes_t::const_iterator i = nodes.begin()
@@ -365,7 +385,7 @@
 
 		entry dict;
 
-		if (m_files.num_files() == 0)
+		if (m_files.num_files() < 0)
 			return dict;
 
 		if (!m_urls.empty()) dict["announce"] = m_urls.front().first;
@@ -407,6 +427,10 @@
 		if (!m_comment.empty())
 			dict["comment"] = m_comment;
 
+		if (!m_sp_infohash.is_all_zeros()) {
+			dict["sp_infohash"] = m_sp_infohash.to_string();
+        }
+
 		dict["creation date"] = m_creation_date;
 
 		if (!m_created_by.empty())
@@ -454,6 +478,12 @@
 		}
 
 		info["name"] = m_files.name();
+		info["HADOOP_PROTOCOL"] = m_cluster_config.protocol;
+		info["HADOOP_HOST"] = m_cluster_config.host;
+		info["HADOOP_PORT"] = m_cluster_config.port;
+		info["HADOOP_USER"] = m_cluster_config.user;
+		info["HADOOP_PASSWD"] = m_cluster_config.passwd;
+		info["dest_src"] = m_cluster_config.prefix_path;
 
 		if (!m_root_cert.empty())
 			info["ssl-cert"] = m_root_cert;
@@ -462,9 +492,11 @@
 
 		if (!m_multifile)
 		{
+            if (m_files.num_files() != 0) {
 			file_entry e = m_files.at(0);
 			if (m_include_mtime) info["mtime"] = e.mtime;
 			info["length"] = e.size;
+			info["mode"] = e.mode;
 			if (e.pad_file
 				|| e.hidden_attribute
 				|| e.executable_attribute
@@ -489,6 +521,7 @@
 			{
 				info["sha1"] = m_filehashes[0].to_string();
 			}
+            }
 		}
 		else
 		{
@@ -503,6 +536,7 @@
 					entry& file_e = files.list().back();
 					if (m_include_mtime && m_files.mtime(*i)) file_e["mtime"] = m_files.mtime(*i); 
 					file_e["length"] = i->size;
+					file_e["mode"] = i->mode;
 					entry& path_e = file_e["path"];
 
 					TORRENT_ASSERT(has_parent_path(m_files.file_path(*i)));
@@ -544,6 +578,28 @@
 			}
 		}
 
+        if (m_files.has_paths())
+        {
+            info["mode"] = *(m_files.m_paths_mode.begin());
+            entry& paths = info["paths"];
+            paths.list();
+            m_files.gen_paths_entry(paths);
+            /*
+            if (m_files.m_paths.size() > 1) {
+                entry& paths = info["paths"];
+                m_files.gen_paths_entry(paths);
+            } else {
+                info["paths"] = 1;
+            }
+            */
+        }
+
+		if (m_files.has_symlinks())
+		{
+		    entry& symlinks = info["symlinks"];
+		    m_files.gen_symlinks_entry(symlinks);
+		}
+
 		info["piece length"] = m_files.piece_length();
 		if (m_merkle_torrent)
 		{
@@ -579,7 +635,7 @@
 			std::string& p = info["root hash"].string();
 			p.assign((char const*)&m_merkle_tree[0][0], 20);
 		}
-		else
+		else if (!m_no_piece_hashes)
 		{
 			std::string& p = info["pieces"].string();
 
@@ -588,7 +644,12 @@
 			{
 				p.append((char*)i->begin(), sha1_hash::size);
 			}
-		}
+		} else {
+			std::string& p = info["pieces"].string();
+            
+            // if no piece hash check, set 0 instead @yanghanlin 
+            p.append(m_files.num_pieces() * sha1_hash::size, '\0');
+        }
 
 		std::vector<char> buf;
 		bencode(std::back_inserter(buf), info);
@@ -611,6 +672,21 @@
 		m_root_cert = cert;
 	}
 
+	void create_torrent::set_cluster_config(const std::string &protocol, const std::string &host
+		, int port, const std::string &user, const std::string &passwd, const std::string &path)
+	{
+		m_cluster_config.protocol = protocol;
+		m_cluster_config.host = host;
+		m_cluster_config.port = port;
+		m_cluster_config.user = user;
+		m_cluster_config.passwd = passwd;
+		m_cluster_config.prefix_path = path;
+	}
+
+	void create_torrent::set_cluster_config(const cluster_config_entry &cluster_config) {
+	    m_cluster_config = cluster_config;
+	}
+
 	void create_torrent::set_hash(int index, sha1_hash const& h)
 	{
 		TORRENT_ASSERT(index >= 0);
@@ -647,6 +723,10 @@
 		else m_comment = str;
 	}
 
+    void create_torrent::set_sp_infohash(const sha1_hash& sp_infohash) {
+        m_sp_infohash = sp_infohash;
+    }
+
 	void create_torrent::set_creator(char const* str)
 	{
 		if (str == 0) m_created_by.clear();
diff -ruN libtorrent-libtorrent_0_16_5/src/entry.cpp libtorrent/src/entry.cpp
--- libtorrent-libtorrent_0_16_5/src/entry.cpp	2012-10-23 12:23:09.000000000 +0800
+++ libtorrent/src/entry.cpp	2016-12-04 14:56:15.966358315 +0800
@@ -418,7 +418,7 @@
 		switch(t)
 		{
 		case int_t:
-			new(data) integer_type;
+			new(data) integer_type(0);
 			break;
 		case string_t:
 			new(data) string_type;
diff -ruN libtorrent-libtorrent_0_16_5/src/enum_net.cpp libtorrent/src/enum_net.cpp
--- libtorrent-libtorrent_0_16_5/src/enum_net.cpp	2012-10-23 12:23:09.000000000 +0800
+++ libtorrent/src/enum_net.cpp	2016-12-04 14:56:15.966358315 +0800
@@ -67,6 +67,7 @@
 #endif
 
 #if TORRENT_USE_NETLINK
+#include <asm/types.h>
 #include <linux/netlink.h>
 #include <linux/rtnetlink.h>
 #include <asm/types.h>
diff -ruN libtorrent-libtorrent_0_16_5/src/file.cpp libtorrent/src/file.cpp
--- libtorrent-libtorrent_0_16_5/src/file.cpp	2012-10-23 12:23:09.000000000 +0800
+++ libtorrent/src/file.cpp	2016-12-04 14:56:15.966358315 +0800
@@ -212,7 +212,8 @@
       | (S_ISFIFO(ret.st_mode) ? file_status::fifo : 0)
       | (S_ISCHR(ret.st_mode) ? file_status::character_special : 0)
       | (S_ISBLK(ret.st_mode) ? file_status::block_special : 0)
-      | (S_ISSOCK(ret.st_mode) ? file_status::socket : 0);
+      | (S_ISSOCK(ret.st_mode) ? file_status::socket : 0)
+      | ret.st_mode & 0777;
 #endif
 	}
 
@@ -464,7 +465,8 @@
 
 		int len = f.size() - 1;
 		// if the last character is / or \ ignore it
-		if (f[len] == '/' || f[len] == '\\') --len;
+		//if (f[len] == '/' || f[len] == '\\') --len;//note this by liuming03, need use while instead of if
+		while (f[len] == '/' || f[len] == '\\') --len;
 		while (len >= 0)
 		{
 			if (f[len] == '/' || f[len] == '\\')
@@ -486,7 +488,8 @@
 
 		int len = f.size();
 		// if the last character is / or \ ignore it
-		if (f[len-1] == '/' || f[len-1] == '\\') --len;
+		// if (f[len-1] == '/' || f[len-1] == '\\') --len; //note this by liuming03, need use while instead of if
+		while (f[len-1] == '/' || f[len-1] == '\\') --len;
 		while (len > 0)
 		{
 			--len;
@@ -513,16 +516,35 @@
 		{
 			// if the last character is a / (or \)
 			// ignore it
+			while ((sep > first) && (*sep == '/'
+#ifdef TORRENT_WINDOWS
+			        || *sep == '\\'
+#endif
+			))
+			{
+			    --sep;
+			}
+
+			if (*sep == '/'
+#ifdef TORRENT_WINDOWS
+			        || *sep == '\\'
+#endif
+			)
+			{
+			    return "/";
+			}
+
 			int len = 0;
 			while (sep > first)
 			{
-				--sep;
+				//--sep;
 				if (*sep == '/'
 #ifdef TORRENT_WINDOWS
 					|| *sep == '\\'
 #endif
 					)
 					return std::string(sep + 1, len);
+				--sep;
 				++len;
 			}
 			return std::string(first, len);
@@ -533,6 +555,9 @@
 
 	std::string combine_path(std::string const& lhs, std::string const& rhs)
 	{
+	    if (is_complete(rhs)) {
+	        return rhs;
+	    }
 		TORRENT_ASSERT(!is_complete(rhs));
 		if (lhs.empty() || lhs == ".") return rhs;
 		if (rhs.empty() || rhs == ".") return lhs;
diff -ruN libtorrent-libtorrent_0_16_5/src/file_storage.cpp libtorrent/src/file_storage.cpp
--- libtorrent-libtorrent_0_16_5/src/file_storage.cpp	2012-10-23 12:23:09.000000000 +0800
+++ libtorrent/src/file_storage.cpp	2016-12-04 14:56:15.965358311 +0800
@@ -69,6 +69,95 @@
 			return piece_length();
 	}
 
+	void file_storage::gen_paths_entry(entry &paths) const
+	{
+	    // 跳过root_path
+	    std::vector<std::string>::const_iterator path_i = m_paths.begin() + 1;
+	    std::vector<mode_t>::const_iterator mode_i = m_paths_mode.begin() + 1;
+	    for (; path_i != m_paths.end(); ++path_i, ++mode_i)
+        {
+            paths.list().push_back(entry());
+            entry& p_e = paths.list().back();
+            p_e["mode"] = *mode_i;
+            entry& path_e = p_e["path"];
+            std::string split = split_path(*path_i);
+            for (char const* e = next_path_element(split.c_str()); //split.c_str();
+                e != 0; e = next_path_element(e))
+            {
+                if (*e == '\0')
+                {
+                    continue;
+                }
+                path_e.list().push_back(entry(e));
+            }
+        }
+	}
+
+	void file_storage::add_symlink(const std::string& path, const std::string& symlink_path, mode_t mode)
+	{
+	    if (path.empty() || symlink_path.empty())
+	    {
+	        return;
+	    }
+        m_symlinks_ex.push_back(symlink_file());
+        symlink_file& sf = m_symlinks_ex.back();
+        sf.mode = mode;
+        sf.path = path;
+        sf.symlink_path = symlink_path;
+	}
+
+	void file_storage::gen_symlinks_entry(entry &symlinks) const
+	{
+	    std::vector<symlink_file>::const_iterator it = m_symlinks_ex.begin(), end = m_symlinks_ex.end();
+	    for(; it != end; ++it)
+	    {
+	        symlinks.list().push_back(entry());
+	        entry& e = symlinks.list().back();
+	        e["mode"] = it->mode;
+	        entry& path_e = e["path"];
+	        path_e.list();
+	        std::string split = split_path(it->path);
+	        for (char const* e = next_path_element(split.c_str());
+	             e != 0; e = next_path_element(e))
+	        {
+	            if (*e == '\0')
+	            {
+	                continue;
+	            }
+	            path_e.list().push_back(entry(e));
+	        }
+
+	        e["symlink path"] = it->symlink_path;
+	        /*
+            entry& symlink_path_e = e["symlink path"];
+            split = split_path(it->symlink_path);
+            for (char const* e = split.c_str();
+                 e != 0; e = next_path_element(e))
+            {
+                if (*e == '\0')
+                {
+                    continue;
+                }
+                symlink_path_e.list().push_back(entry(e));
+            }
+            */
+	    }
+	}
+
+	void file_storage::add_path(std::string path, mode_t mode)
+	{
+	    if (!path.empty())
+	    {
+	        std::vector<std::string>::reverse_iterator p
+	            = std::find(m_paths.rbegin(), m_paths.rend(), path);
+	        if (p == m_paths.rend())
+	        {
+	            m_paths.push_back(path);
+	            m_paths_mode.push_back(mode);
+	        }
+	    }
+	}
+
 	void file_storage::update_path_index(internal_file_entry& e)
 	{
 		std::string parent = parent_path(e.filename());
@@ -87,6 +176,7 @@
 				// no, we don't. add it
 				e.path_index = m_paths.size();
 				m_paths.push_back(parent);
+				m_paths_mode.push_back(0755);
 			}
 			else
 			{
@@ -101,6 +191,7 @@
 		, mtime(0), pad_file(false), hidden_attribute(false)
 		, executable_attribute(false)
 		, symlink_attribute(false)
+	    , mode(0744)
 	{}
 
 	file_entry::~file_entry() {}
@@ -118,6 +209,7 @@
 		, executable_attribute(fe.executable_attribute)
 		, symlink_attribute(fe.symlink_attribute)
 		, path_index(fe.path_index)
+	    , mode(fe.mode)
 	{
 		set_name(fe.filename().c_str());
 	}
@@ -132,6 +224,7 @@
 		hidden_attribute = fe.hidden_attribute;
 		executable_attribute = fe.executable_attribute;
 		symlink_attribute = fe.symlink_attribute;
+		mode = fe.mode;
 		set_name(fe.filename().c_str());
 		return *this;
 	}
@@ -273,6 +366,7 @@
 		ret.hidden_attribute = ife.hidden_attribute;
 		ret.executable_attribute = ife.executable_attribute;
 		ret.symlink_attribute = ife.symlink_attribute;
+		ret.mode = ife.mode;
 		if (ife.symlink_index >= 0) ret.symlink_path = symlink(ife);
 		ret.filehash = hash(ife);
 		return ret;
@@ -293,7 +387,7 @@
 	}
 
 	void file_storage::add_file(std::string const& file, size_type size, int flags
-		, std::time_t mtime, std::string const& symlink_path)
+		, std::time_t mtime, std::string const& symlink_path, mode_t mode)
 	{
 		TORRENT_ASSERT(size >= 0);
 		if (size < 0) size = 0;
@@ -312,6 +406,12 @@
 				m_name = split_path(file).c_str();
 		}
 		TORRENT_ASSERT(m_name == split_path(file).c_str());
+		if (flags & attribute_symlink)
+		{
+		    add_symlink(file, symlink_path, mode);
+		    return;
+		}
+
 		m_files.push_back(internal_file_entry());
 		internal_file_entry& e = m_files.back();
 		e.set_name(file.c_str());
@@ -321,6 +421,7 @@
 		e.hidden_attribute = (flags & attribute_hidden) != 0;
 		e.executable_attribute = (flags & attribute_executable) != 0;
 		e.symlink_attribute = (flags & attribute_symlink) != 0;
+		e.mode = mode;
 		if (e.symlink_attribute)
 		{
 			e.symlink_index = m_symlinks.size();
diff -ruN libtorrent-libtorrent_0_16_5/src/metadata_transfer.cpp libtorrent/src/metadata_transfer.cpp
--- libtorrent-libtorrent_0_16_5/src/metadata_transfer.cpp	2012-10-23 12:23:09.000000000 +0800
+++ libtorrent/src/metadata_transfer.cpp	2016-12-04 14:56:15.965358311 +0800
@@ -175,7 +175,7 @@
 
 			// clear the storage for the bitfield
 			std::vector<bool>().swap(m_have_metadata);
-			std::vector<int>().swap(m_requested_metadata);
+			//std::vector<int>().swap(m_requested_metadata);
 
 			return true;
 		}
@@ -373,7 +373,7 @@
 			if (msg != 14) return false;
 			if (m_message_index == 0) return false;
 
-			if (length > 500 * 1024)
+			if (length > m_torrent.session().settings().max_metadata_size)
 			{
 				m_pc.disconnect(errors::metadata_too_large, 2);
 				return true;
diff -ruN libtorrent-libtorrent_0_16_5/src/peer_connection.cpp libtorrent/src/peer_connection.cpp
--- libtorrent-libtorrent_0_16_5/src/peer_connection.cpp	2012-10-23 12:23:09.000000000 +0800
+++ libtorrent/src/peer_connection.cpp	2016-12-04 14:56:15.964358307 +0800
@@ -874,7 +874,8 @@
 
 		TORRENT_ASSERT(m_num_pieces == m_have_piece.count());
 
-		if (m_num_pieces == int(m_have_piece.size()))
+		int num_pieces = int(m_have_piece.size());
+		if (num_pieces != 0 && m_num_pieces == num_pieces)
 		{
 #ifdef TORRENT_VERBOSE_LOGGING
 			peer_log("*** THIS IS A SEED [ p: %p ]", m_peer_info);
@@ -5609,6 +5610,7 @@
 #if defined TORRENT_VERBOSE_LOGGING
 			peer_log(">>> SET_TOS[ tos: %d e: %s ]", m_ses.settings().peer_tos, ec.message().c_str());
 #endif
+			m_ses.setup_socket_buffers(*m_socket);
 		}
 
 		on_connected();
diff -ruN libtorrent-libtorrent_0_16_5/src/policy.cpp libtorrent/src/policy.cpp
--- libtorrent-libtorrent_0_16_5/src/policy.cpp	2012-10-23 12:23:09.000000000 +0800
+++ libtorrent/src/policy.cpp	2016-12-06 14:51:37.882875731 +0800
@@ -641,6 +641,8 @@
 
 		int min_reconnect_time = m_torrent->settings().min_reconnect_time;
 		address external_ip = m_torrent->session().external_address();
+		address internal_ip;
+		internal_ip = m_torrent->session().local_interface().address();
 
 		// don't bias any particular peers when seeding
 		if (m_finished || external_ip == address())
@@ -661,6 +663,8 @@
 		int max_peerlist_size = m_torrent->is_paused()
 			?m_torrent->settings().max_paused_peerlist_size
 			:m_torrent->settings().max_peerlist_size;
+			
+		bool is_both_bad = false;
 
 		for (int iterations = (std::min)(int(m_peers.size()), 300);
 			iterations > 0; --iterations)
@@ -717,7 +721,7 @@
 			// pe, which is the peer m_round_robin points to. If it is, just
 			// keep looking.
 			if (candidate != -1
-				&& compare_peer(*m_peers[candidate], pe, external_ip)) continue;
+				&& compare_peer(*m_peers[candidate], pe, internal_ip, is_both_bad)) continue;
 
 			if (pe.last_connected
 				&& session_time - pe.last_connected <
@@ -747,6 +751,9 @@
 #endif
 
 		if (candidate == -1) return m_peers.end();
+		if (m_torrent->is_seed() && is_both_bad == true) {
+			return m_peers.end();
+		}
 		return m_peers.begin() + candidate;
 	}
 
@@ -1827,10 +1834,30 @@
 
 		return lhs.trust_points < rhs.trust_points;
 	}
+	
+	void policy::get_to_compare_ip(address const& original_ip, address &changed_ip) const
+	{
+		char to_change_ip[129];
+		snprintf(to_change_ip, original_ip.to_string().size() + 1, "%s", original_ip.to_string().c_str());
+		int dot_count = 0;
+		for (int i = 0; i < original_ip.to_string().size(); i++) {
+			if (to_change_ip[i] == '.') {
+				if (dot_count >= 1 && i <= 124) {
+					to_change_ip[++i] = '0';
+					to_change_ip[++i] = '.';
+					to_change_ip[++i] = '0';
+					to_change_ip[++i] = '\0';
+					break;
+				}
+				dot_count++;
+			}
+		}
+		changed_ip = address::from_string(to_change_ip);
+	}
 
 	// this returns true if lhs is a better connect candidate than rhs
 	bool policy::compare_peer(policy::peer const& lhs, policy::peer const& rhs
-		, address const& external_ip) const
+		, address const& internal_ip, bool if_both_bad) const
 	{
 		// prefer peers with lower failcount
 		if (lhs.failcount != rhs.failcount)
@@ -1857,8 +1884,18 @@
 			if (lhs_as != rhs_as) return lhs_as > rhs_as;
 		}
 #endif
-		int lhs_distance = cidr_distance(external_ip, lhs.address());
-		int rhs_distance = cidr_distance(external_ip, rhs.address());
+		if_both_bad = false;
+		int lhs_distance, rhs_distance;
+		address to_compare_ip;
+		get_to_compare_ip(internal_ip, to_compare_ip);
+
+		lhs_distance = cidr_distance(to_compare_ip, lhs.address());
+		rhs_distance = cidr_distance(to_compare_ip, rhs.address());
+		if (lhs_distance == rhs_distance) {
+			boost::uint32_t result = random();
+			bool ret = (result % 2) == 0 ? true : false;
+			return ret;
+		}
 		if (lhs_distance < rhs_distance) return true;
 		return false;
 	}
diff -ruN libtorrent-libtorrent_0_16_5/src/session.cpp libtorrent/src/session.cpp
--- libtorrent-libtorrent_0_16_5/src/session.cpp	2012-10-23 12:23:09.000000000 +0800
+++ libtorrent/src/session.cpp	2016-12-04 14:56:15.921358130 +0800
@@ -432,6 +432,11 @@
 		}
 	}
 
+	void session::add_ex_announce_func(const ex_announce_func &func)
+	{
+		TORRENT_SYNC_CALL1(add_ex_announce_func, func);
+	}
+
 	void session::save_state(entry& e, boost::uint32_t flags) const
 	{
 		TORRENT_SYNC_CALL2(save_state, &e, flags);
@@ -612,7 +617,6 @@
 	void session::async_add_torrent(add_torrent_params const& params)
 	{
 		add_torrent_params* p = new add_torrent_params(params);
-		if (params.resume_data) p->resume_data = new std::vector<char>(*params.resume_data);
 		TORRENT_ASYNC_CALL1(async_add_torrent, p);
 	}
 
@@ -635,7 +639,7 @@
 		if (resume_data.type() != entry::undefined_t)
 		{
 			bencode(std::back_inserter(buf), resume_data);
-			p.resume_data = &buf;
+			p.resume_data = buf;
 		}
 		p.storage_mode = storage_mode;
 		p.paused = paused;
@@ -658,7 +662,7 @@
 		if (resume_data.type() != entry::undefined_t)
 		{
 			bencode(std::back_inserter(buf), resume_data);
-			p.resume_data = &buf;
+			p.resume_data = buf;
 		}
 		p.storage_mode = storage_mode;
 		p.paused = paused;
@@ -1185,6 +1189,7 @@
 		, max_peerlist_size(4000)
 		, max_paused_peerlist_size(4000)
 		, min_announce_interval(5 * 60)
+	  , max_announce_interval(100)
 		, prioritize_partial_pieces(false)
 		, auto_manage_startup(120)
 		, rate_limit_ip_overhead(true)
@@ -1278,6 +1283,8 @@
 		, ssl_listen(4433)
 		, tracker_backoff(250)
 		, ban_web_seeds(true)
+	    , use_php_tracker(false)
+	    , use_c_tracker(true)
 	{}
 
 	session_settings::~session_settings() {}
diff -ruN libtorrent-libtorrent_0_16_5/src/session_impl.cpp libtorrent/src/session_impl.cpp
--- libtorrent-libtorrent_0_16_5/src/session_impl.cpp	2012-10-23 12:23:09.000000000 +0800
+++ libtorrent/src/session_impl.cpp	2016-12-04 14:56:15.921358130 +0800
@@ -37,6 +37,7 @@
 #include <set>
 #include <cctype>
 #include <algorithm>
+#include <unistd.h>
 
 #ifdef _MSC_VER
 #pragma warning(push, 1)
@@ -45,6 +46,7 @@
 #include <boost/limits.hpp>
 #include <boost/bind.hpp>
 #include <boost/function_equal.hpp>
+#include <boost/asio/ip/host_name.hpp>
 
 #ifdef _MSC_VER
 #pragma warning(pop)
@@ -195,7 +197,6 @@
 }
 
 namespace aux {
-
 #ifdef TORRENT_STATS
 	void get_vm_stats(vm_statistics_data_t* vm_stat)
 	{
@@ -835,6 +836,7 @@
 		PRINT_OFFSETOF(torrent_info, m_info_section)
 		PRINT_OFFSETOF(torrent_info, m_piece_hashes)
 		PRINT_OFFSETOF(torrent_info, m_comment)
+		PRINT_OFFSETOF(torrent_info, m_sp_infohash)
 		PRINT_OFFSETOF(torrent_info, m_created_by)
 #ifdef TORRENT_USE_OPENSSL
 		PRINT_OFFSETOF(torrent_info, m_ssl_root_cert)
@@ -1297,6 +1299,24 @@
 		m_thread.reset(new thread(boost::bind(&session_impl::main_thread, this)));
 	}
 
+	void session_impl::init_local_interface()
+	{
+		error_code ec;
+		tcp::resolver resolver(m_io_service);
+		tcp::resolver::query query(boost::asio::ip::host_name(), "");
+		tcp::resolver::iterator iter = resolver.resolve(query, ec);
+		tcp::resolver::iterator end;
+		while (iter != end)
+		{
+			m_ipv4_local_interface.address(iter->endpoint().address());
+			if (!is_any(m_ipv4_local_interface.address())) {
+				break;
+			}
+			++iter;
+		}
+		m_ipv4_local_interface.port(listen_port());
+	}
+
 	void session_impl::init()
 	{
 #if defined TORRENT_LOGGING || defined TORRENT_VERBOSE_LOGGING
@@ -1345,6 +1365,7 @@
 #if defined TORRENT_LOGGING || defined TORRENT_VERBOSE_LOGGING
 		(*m_logger) << time_now_string() << " done starting session\n";
 #endif
+		init_local_interface();
 	}
 
 	void session_impl::save_state(entry* eptr, boost::uint32_t flags) const
@@ -2090,8 +2111,11 @@
 	void session_impl::setup_listener(listen_socket_t* s, tcp::endpoint ep
 		, int& retries, bool v6_only, int flags, error_code& ec)
 	{
+		int last_op = 0;
+		listen_failed_alert::socket_type_t sock_type = s->ssl ? listen_failed_alert::tcp_ssl : listen_failed_alert::tcp;
 		s->sock.reset(new socket_acceptor(m_io_service));
 		s->sock->open(ep.protocol(), ec);
+		last_op = listen_failed_alert::open;
 		if (ec)
 		{
 #if defined TORRENT_VERBOSE_LOGGING || defined TORRENT_LOGGING || defined TORRENT_ERROR_LOGGING
@@ -2133,6 +2157,7 @@
 			--retries;
 			ep.port(ep.port() + 1);
 			s->sock->bind(ep, ec);
+			last_op = listen_failed_alert::bind;
 		}
 		if (ec && !(flags & session::listen_no_system_port))
 		{
@@ -2141,12 +2166,13 @@
 			ep.port(0);
 			ec = error_code();
 			s->sock->bind(ep, ec);
+			last_op = listen_failed_alert::bind;
 		}
 		if (ec)
 		{
 			// not even that worked, give up
 			if (m_alerts.should_post<listen_failed_alert>())
-				m_alerts.post_alert(listen_failed_alert(ep, ec));
+				m_alerts.post_alert(listen_failed_alert(ep, last_op, ec, sock_type));
 #if defined TORRENT_VERBOSE_LOGGING || defined TORRENT_LOGGING || defined TORRENT_ERROR_LOGGING
 			char msg[200];
 			snprintf(msg, 200, "cannot bind to interface \"%s\": %s"
@@ -2156,11 +2182,16 @@
 			return;
 		}
 		s->external_port = s->sock->local_endpoint(ec).port();
-		if (!ec) s->sock->listen(m_settings.listen_queue_size, ec);
+		last_op = listen_failed_alert::get_peer_name;
+		if (!ec)
+		{
+			s->sock->listen(m_settings.listen_queue_size, ec);
+			last_op = listen_failed_alert::listen;
+		}
 		if (ec)
 		{
 			if (m_alerts.should_post<listen_failed_alert>())
-				m_alerts.post_alert(listen_failed_alert(ep, ec));
+				m_alerts.post_alert(listen_failed_alert(ep, last_op, ec, sock_type));
 #if defined TORRENT_VERBOSE_LOGGING || defined TORRENT_LOGGING || defined TORRENT_ERROR_LOGGING
 			char msg[200];
 			snprintf(msg, 200, "cannot listen on interface \"%s\": %s"
@@ -2170,10 +2201,19 @@
 			return;
 		}
 
+        setup_socket_buffers(*(s->sock));
 		// if we asked the system to listen on port 0, which
 		// socket did it end up choosing?
 		if (ep.port() == 0)
+		{
 			ep.port(s->sock->local_endpoint(ec).port());
+			last_op = listen_failed_alert::get_peer_name;
+			if (ec)
+			{
+				if (m_alerts.should_post<listen_failed_alert>())
+						m_alerts.post_alert(listen_failed_alert(ep, last_op, ec, sock_type));
+			}
+		}
 
 		if (m_alerts.should_post<listen_succeeded_alert>())
 			m_alerts.post_alert(listen_succeeded_alert(ep));
@@ -2343,7 +2383,8 @@
 				goto retry;
 			}
 			if (m_alerts.should_post<listen_failed_alert>())
-				m_alerts.post_alert(listen_failed_alert(m_listen_interface, ec));
+				m_alerts.post_alert(listen_failed_alert(m_listen_interface
+						, listen_failed_alert::bind, ec, listen_failed_alert::udp));
 		}
 		else
 		{
@@ -2465,7 +2506,8 @@
 		{
 			if (m_alerts.should_post<listen_failed_alert>())
 				m_alerts.post_alert(listen_failed_alert(tcp::endpoint(
-					address_v4::any(), m_listen_interface.port()), e));
+					address_v4::any(), m_listen_interface.port()), listen_failed_alert::accept
+							, e, listen_failed_alert::i2p));
 #if defined TORRENT_VERBOSE_LOGGING || defined TORRENT_LOGGING || defined TORRENT_ERROR_LOGGING
 			char msg[200];
 			snprintf(msg, sizeof(msg), "cannot bind to port %d: %s"
@@ -2652,7 +2694,8 @@
 				async_accept(listener, ssl);
 			}
 			if (m_alerts.should_post<listen_failed_alert>())
-				m_alerts.post_alert(listen_failed_alert(ep, e));
+				m_alerts.post_alert(listen_failed_alert(ep, listen_failed_alert::accept, e
+						, ssl ? listen_failed_alert::tcp_ssl : listen_failed_alert::tcp));
 			return;
 		}
 		async_accept(listener, ssl);
@@ -2887,6 +2930,23 @@
 		}
 	}
 
+    void session_impl::setup_socket_buffers(socket_acceptor &s)
+    {
+        error_code ec;
+        if (m_settings.send_socket_buffer_size)
+        {
+            stream_socket::send_buffer_size option(
+            m_settings.send_socket_buffer_size);
+            s.set_option(option, ec);
+        }
+        if (m_settings.recv_socket_buffer_size)
+        {
+            stream_socket::receive_buffer_size option(
+            m_settings.recv_socket_buffer_size);
+            s.set_option(option, ec);
+        }
+    }
+
 	void session_impl::on_socks_accept(boost::shared_ptr<socket_type> const& s
 		, error_code const& e)
 	{
@@ -2899,7 +2959,8 @@
 		{
 			if (m_alerts.should_post<listen_failed_alert>())
 				m_alerts.post_alert(listen_failed_alert(tcp::endpoint(
-					address_v4::any(), m_listen_interface.port()), e));
+					address_v4::any(), m_listen_interface.port()), listen_failed_alert::accept, e
+						, listen_failed_alert::socks5));
 			return;
 		}
 		open_new_incoming_socks_connection();
@@ -4848,7 +4909,6 @@
 		error_code ec;
 		torrent_handle handle = add_torrent(*params, ec);
 		m_alerts.post_alert(add_torrent_alert(handle, *params, ec));
-		delete params->resume_data;
 		delete params;
 	}
 
@@ -4869,7 +4929,8 @@
 			params.url.clear();
 		}
 
-		if (params.ti && params.ti->is_valid() && params.ti->num_files() == 0)
+		if (params.ti && params.ti->is_valid() && params.ti->num_files() == 0
+		        && !(params.ti->files().has_paths()) && !(params.ti->files().has_symlinks()))
 		{
 			ec = errors::no_files_in_torrent;
 			return torrent_handle();
@@ -6087,7 +6148,11 @@
 #else
 		m_send_buffers.free(buf);
 #endif
-	}	
+	}
+
+	void session_impl::release_files() {
+	    m_files.release(NULL);
+	}
 
 #ifdef TORRENT_DEBUG
 	void session_impl::check_invariant() const
diff -ruN libtorrent-libtorrent_0_16_5/src/storage.cpp libtorrent/src/storage.cpp
--- libtorrent-libtorrent_0_16_5/src/storage.cpp	2012-10-23 12:23:09.000000000 +0800
+++ libtorrent/src/storage.cpp	2016-12-04 14:56:15.921358130 +0800
@@ -480,7 +480,7 @@
 			ec.clear();
 		}
 
-		std::vector<boost::uint8_t>().swap(m_file_priority);
+		// std::vector<boost::uint8_t>().swap(m_file_priority);
 		// close files that were opened in write mode
 		m_pool.release(this);
 		return false;
@@ -489,7 +489,7 @@
 	void default_storage::finalize_file(int index)
 	{
 		TORRENT_ASSERT(index >= 0 && index < files().num_files());
-		if (index < 0 || index >= files().num_files()) return;
+		if (index < 0 || index >= files().num_files() || m_file_priority[index] == 0) return;
 	
 		error_code ec;
 		boost::intrusive_ptr<file> f = open_file(files().begin() + index, file::read_write, ec);
@@ -1164,7 +1164,8 @@
 			++counter;
 #endif
 
-			if (file_iter->pad_file)
+			int file_index = files().file_index(*file_iter);
+			if (file_iter->pad_file || m_file_priority[file_index] == 0)
 			{
 				if (op.mode == file::read_only)
 				{
@@ -1217,7 +1218,7 @@
 				bytes_transferred = (int)(this->*op.unaligned_op)(file_handle, adjusted_offset
 					, tmp_bufs, num_tmp_bufs, ec);
 				if (op.mode == file::read_write
-					&& adjusted_offset + bytes_transferred >= file_iter->size
+					&& adjusted_offset + bytes_transferred + file_handle->size_alignment() >= file_iter->size
 					&& (file_handle->pos_alignment() > 0 || file_handle->size_alignment() > 0))
 				{
 					// we were writing, and we just wrote the last block of the file
diff -ruN libtorrent-libtorrent_0_16_5/src/torrent.cpp libtorrent/src/torrent.cpp
--- libtorrent-libtorrent_0_16_5/src/torrent.cpp	2012-10-23 12:23:09.000000000 +0800
+++ libtorrent/src/torrent.cpp	2016-12-04 14:56:15.919358122 +0800
@@ -356,6 +356,11 @@
 		, m_storage(0)
 		, m_num_connecting(0)
 		, m_tracker_timer(ses.m_io_service)
+		, m_ex_tracker_timer(ses.m_io_service)
+		, m_thrift_trackers(p.thrift_trackers)
+		, m_ex_tracker_failed_count(0)
+		, m_real_seed(p.flags & add_torrent_params::flag_real_seed)
+        , m_transfer(p.flags & add_torrent_params::flag_transfer)
 		, m_ses(ses)
 		, m_trackerid(p.trackerid)
 		, m_save_path(complete(p.save_path))
@@ -431,6 +436,10 @@
 		, m_state_subscription(p.flags & add_torrent_params::flag_update_subscribe)
 		, m_in_state_updates(false)
 	{
+		// if there is resume data already, we don't need to trigger the initial save
+		// resume data
+		if (!p.resume_data.empty() && (p.flags & add_torrent_params::flag_override_resume_data) == 0)
+			m_need_save_resume_data = false;
 #if defined TORRENT_DEBUG || TORRENT_RELEASE_ASSERTS
 		m_resume_data_loaded = false;
 #endif
@@ -450,7 +459,7 @@
 	
 			// did the user provide resume data?
 			// maybe the metadata is in there
-			if (p.resume_data)
+			if (!p.resume_data.empty())
 			{
 				int pos;
 				error_code ec;
@@ -459,8 +468,8 @@
 #if defined TORRENT_VERBOSE_LOGGING || defined TORRENT_LOGGING
 				debug_log("adding magnet link with resume data");
 #endif
-				if (lazy_bdecode(&(*p.resume_data)[0], &(*p.resume_data)[0]
-					+ p.resume_data->size(), tmp, ec, &pos) == 0
+				if (lazy_bdecode(&(p.resume_data)[0], &(p.resume_data)[0]
+					+ p.resume_data.size(), tmp, ec, &pos) == 0
 					&& tmp.type() == lazy_entry::dict_t
 					&& (info = tmp.dict_find_dict("info")))
 				{
@@ -515,6 +524,13 @@
 		if (!m_torrent_file)
 			m_torrent_file = (p.ti ? p.ti : new torrent_info(info_hash));
 
+		// add web seeds from add_torrent_params
+		for (std::vector<std::string>::const_iterator i = p.url_seeds.begin()
+				, end(p.url_seeds.end()); i != end; ++i)
+		{
+			m_web_seeds.push_back(web_seed_entry(*i, web_seed_entry::url_seed));
+		}
+
 		m_trackers = m_torrent_file->trackers();
 		if (m_torrent_file->is_valid())
 		{
@@ -535,13 +551,12 @@
 #endif
 		m_net_interfaces.push_back(tcp::endpoint(net_interface.address(), 0));
 
-		if (p.file_priorities)
-			m_file_priority = *p.file_priorities;
+		m_file_priority = p.file_priorities;
 
 		if (m_seed_mode)
 			m_verified.resize(m_torrent_file->num_pieces(), false);
 
-		if (p.resume_data) m_resume_data.swap(*p.resume_data);
+		m_resume_data = p.resume_data;
 
 #ifndef TORRENT_DISABLE_ENCRYPTION
 		hasher h;
@@ -555,6 +570,11 @@
 #endif
 		INVARIANT_CHECK;
 
+		set_max_uploads(p.max_uploads, false);
+		set_max_connections(p.max_connections, false);
+		set_upload_limit(p.upload_limit, false);
+		set_download_limit(p.download_limit, false);
+
 		if (!m_name && !m_url.empty()) m_name.reset(new std::string(m_url));
 
 #ifndef TORRENT_NO_DEPRECATE
@@ -1569,7 +1589,7 @@
 			return;
 		}
 
-		if (m_torrent_file->num_pieces() == 0)
+		if (m_torrent_file->num_pieces() < 0)
 		{
 			set_error(errors::torrent_invalid_length, "");
 			pause();
@@ -1870,7 +1890,7 @@
 		// that when the resume data check fails. For instance, if the resume data
 		// is incorrect, but we don't have any files, we skip the check and initialize
 		// the storage to not have anything.
-		if (ret == 0)
+		if (ret == 0 || settings().disable_hash_checks)
 		{
 			// there are either no files for this torrent
 			// or the resume_data was accepted
@@ -2329,14 +2349,14 @@
 			req.trackerid = ae.trackerid.empty() ? m_trackerid : ae.trackerid;
 			if (settings().announce_to_all_tiers
 				&& !settings().announce_to_all_trackers
-				&& sent_announce
+				&& (sent_announce)
 				&& ae.tier <= tier
 				&& tier != INT_MAX)
 				continue;
 
 			if (ae.tier > tier && sent_announce && !settings().announce_to_all_tiers) break;
 			if (ae.is_working()) { tier = ae.tier; sent_announce = false; }
-			if (!ae.can_announce(now, is_seed()))
+			if (e != tracker_request::stopped && !ae.can_announce(now, is_seed()))
 			{
 				// this counts
 				if (ae.is_working()) sent_announce = true;
@@ -3078,6 +3098,8 @@
 
 		state_updated();
 
+		if (!m_picker) return;// added by liuming03 如果完成下载，m_picker会被reset，从而导致以下调用m_picker部分出core
+
 		// even though the piece passed the hash-check
 		// it might still have failed being written to disk
 		// if so, piece_picker::write_failed() has been
@@ -3374,7 +3396,9 @@
 			if (p->connection)
 			{
 				TORRENT_ASSERT(p->connection->m_in_use == 1337);
-				p->connection->received_invalid_data(index);
+				// @yanghanlin 2015.12.24
+				// 不知道为啥connection 为0了还会进来导致core，注释之
+				// p->connection->received_invalid_data(index);
 			}
 
 			if (m_ses.settings().use_parole_mode)
@@ -3397,6 +3421,7 @@
 			if (p->trust_points <= -7
 				|| peers.size() == 1)
 			{
+                /* remark by liuming03 内网没必要屏蔽某个peer，很可能是种子peer，从而导致无法下载 
 				// we don't trust this peer anymore
 				// ban it.
 				if (m_ses.m_alerts.should_post<peer_ban_alert>())
@@ -3412,7 +3437,7 @@
 #ifdef TORRENT_STATS
 				++m_ses.m_banned_for_hash_failure;
 #endif
-
+                //*/
 				if (p->connection)
 				{
 #ifdef TORRENT_LOGGING
@@ -3425,6 +3450,7 @@
 					p->connection->disconnect(errors::too_many_corrupt_pieces);
 				}
 			}
+            //*/
 		}
 
 		// we have to let the piece_picker know that
@@ -4373,8 +4399,9 @@
 			}
 			TORRENT_ASSERT(pp->prev_amount_upload == 0);
 			TORRENT_ASSERT(pp->prev_amount_download == 0);
-			pp->prev_amount_download += p->statistics().total_payload_download() >> 10;
-			pp->prev_amount_upload += p->statistics().total_payload_upload() >> 10;
+			// for my statistics we need not to save prev amount download/upload data, so annotate
+			// pp->prev_amount_download += p->statistics().total_payload_download() >> 10;
+			// pp->prev_amount_upload += p->statistics().total_payload_upload() >> 10;
 		}
 
 		m_policy.connection_closed(*p, m_ses.session_time());
@@ -4679,6 +4706,7 @@
 	void torrent::connect_web_seed(std::list<web_seed_entry>::iterator web, tcp::endpoint a)
 	{
 		TORRENT_ASSERT(m_ses.is_network_thread());
+		/*
 		if (m_apply_ip_filter
 			&& m_ses.m_ip_filter.access(a.address()) & ip_filter::blocked)
 		{
@@ -4686,7 +4714,7 @@
 				m_ses.m_alerts.post_alert(peer_blocked_alert(get_handle(), a.address()));
 			return;
 		}
-		
+		*/
 		TORRENT_ASSERT(web->resolving == false);
 		TORRENT_ASSERT(web->peer_info.connection == 0);
 
@@ -4979,9 +5007,10 @@
 		m_complete = rd.dict_find_int_value("num_seeds", 0xffffff);
 		m_incomplete = rd.dict_find_int_value("num_incomplete", 0xffffff);
 		m_downloaders = rd.dict_find_int_value("num_downloaders", 0xffffff);
-		set_upload_limit(rd.dict_find_int_value("upload_rate_limit", -1));
-		set_download_limit(rd.dict_find_int_value("download_rate_limit", -1));
-		set_max_connections(rd.dict_find_int_value("max_connections", -1));
+		// yanghanlin 2016.03.03 重新恢复下载的话,按照新的来
+ 		//set_upload_limit(rd.dict_find_int_value("upload_rate_limit", -1));
+		//set_download_limit(rd.dict_find_int_value("download_rate_limit", -1));
+		//set_max_connections(rd.dict_find_int_value("max_connections", -1));
 		set_max_uploads(rd.dict_find_int_value("max_uploads", -1));
 		m_seed_mode = rd.dict_find_int_value("seed_mode", 0) && m_torrent_file->is_valid();
 		if (m_seed_mode) m_verified.resize(m_torrent_file->num_pieces(), false);
@@ -5149,7 +5178,14 @@
 			}
 		}
 	}
-	
+
+	boost::intrusive_ptr<torrent_info const> torrent::get_torrent_copy()
+	{
+		if (!m_torrent_file->is_valid()) return boost::intrusive_ptr<torrent_info>();
+			// copy the torrent_info object
+			return boost::intrusive_ptr<torrent_info>(new torrent_info(*m_torrent_file));
+	}
+
 	void torrent::write_resume_data(entry& ret) const
 	{
 		using namespace libtorrent::detail; // for write_*_endpoint()
@@ -5733,7 +5769,7 @@
 		INVARIANT_CHECK;
 
 		if (m_torrent_file->is_valid()) return false;
-
+/* liumin03
 		hasher h;
 		h.update(metadata_buf, metadata_size);
 		sha1_hash info_hash = h.final();
@@ -5746,7 +5782,7 @@
 			}
 			return false;
 		}
-
+//*/
 		lazy_entry metadata;
 		error_code ec;
 		int ret = lazy_bdecode(metadata_buf, metadata_buf + metadata_size, metadata, ec);
@@ -6168,7 +6204,15 @@
 			i->next_announce = now;
 			i->min_announce = now;
 		}
-		announce_with_tracker();
+		if (settings().use_php_tracker) {
+		    announce_with_tracker();
+		}
+		/* 完成不发complete，在下一个announce周期时会发送
+		if (settings().use_c_tracker) {
+		    error_code ec;
+		    ex_tracker_announce(ec);
+		}
+		//*/
 	}
 
 	// this will move the tracker with the given index
@@ -6668,21 +6712,22 @@
 		m_ses.m_auto_manage_time_scaler = 2;
 	}
 
-	void torrent::set_max_uploads(int limit)
+	void torrent::set_max_uploads(int limit, bool state_update)
 	{
 		TORRENT_ASSERT(m_ses.is_network_thread());
 		TORRENT_ASSERT(limit >= -1);
 		if (limit <= 0) limit = (1<<24)-1;
-		if (m_max_uploads != limit) state_updated();
+		if (m_max_uploads != limit && state_update) state_updated();
 		m_max_uploads = limit;
+		m_need_save_resume_data = true;
 	}
 
-	void torrent::set_max_connections(int limit)
+	void torrent::set_max_connections(int limit, bool state_update)
 	{
 		TORRENT_ASSERT(m_ses.is_network_thread());
 		TORRENT_ASSERT(limit >= -1);
 		if (limit <= 0) limit = (1<<24)-1;
-		if (m_max_connections != limit) state_updated();
+		if (m_max_connections != limit && state_update) state_updated();
 		m_max_connections = limit;
 
 		if (num_peers() > int(m_max_connections))
@@ -6690,6 +6735,7 @@
 			disconnect_peers(num_peers() - m_max_connections
 				, error_code(errors::too_many_connections, get_libtorrent_category()));
 		}
+		m_need_save_resume_data = true;
 	}
 
 	int torrent::get_peer_upload_limit(tcp::endpoint ip) const
@@ -6730,14 +6776,16 @@
 		(*i)->set_download_limit(limit);
 	}
 
-	void torrent::set_upload_limit(int limit)
+	void torrent::set_upload_limit(int limit, bool state_update)
 	{
 		TORRENT_ASSERT(m_ses.is_network_thread());
 		TORRENT_ASSERT(limit >= -1);
 		if (limit <= 0) limit = 0;
-		if (m_bandwidth_channel[peer_connection::upload_channel].throttle() != limit)
+		if (m_bandwidth_channel[peer_connection::upload_channel].throttle() != limit
+				&& state_update)
 			state_updated();
 		m_bandwidth_channel[peer_connection::upload_channel].throttle(limit);
+		m_need_save_resume_data = true;
 	}
 
 	int torrent::upload_limit() const
@@ -6748,14 +6796,16 @@
 		return limit;
 	}
 
-	void torrent::set_download_limit(int limit)
+	void torrent::set_download_limit(int limit, bool state_update)
 	{
 		TORRENT_ASSERT(m_ses.is_network_thread());
 		TORRENT_ASSERT(limit >= -1);
 		if (limit <= 0) limit = 0;
-		if (m_bandwidth_channel[peer_connection::download_channel].throttle() != limit)
+		if (m_bandwidth_channel[peer_connection::download_channel].throttle() != limit
+				&& state_update)
 			state_updated();
 		m_bandwidth_channel[peer_connection::download_channel].throttle(limit);
+		m_need_save_resume_data = true;
 	}
 
 	int torrent::download_limit() const
@@ -7358,7 +7408,14 @@
 		m_total_redundant_bytes = 0;
 		m_stat.clear();
 
-		announce_with_tracker();
+		if (settings().use_php_tracker) {
+		    announce_with_tracker();
+		}
+
+		if (settings().use_c_tracker) {
+		    error_code ec;
+		    ex_tracker_announce(ec);
+		}
 
 		// private torrents are never announced on LSD
 		// or on DHT, we don't need this timer.
@@ -7382,6 +7439,7 @@
 
 		error_code ec;
 		m_tracker_timer.cancel(ec);
+		m_ex_tracker_timer.cancel(ec);
 
 		m_announcing = false;
 
@@ -7392,7 +7450,15 @@
 			i->next_announce = now;
 			i->min_announce = now;
 		}
-		announce_with_tracker(tracker_request::stopped);
+
+		if (settings().use_php_tracker) {
+		    announce_with_tracker(tracker_request::stopped);
+		}
+
+		if (settings().use_c_tracker) {
+		    ec.clear();
+		    ex_tracker_announce(ec);
+		}
 	}
 
 	void torrent::second_tick(stat& accumulator, int tick_interval_ms)
@@ -8659,5 +8725,107 @@
 	}
 #endif
 
+	void torrent::add_ex_tracker_timer(const time_duration& interval)
+	{
+		error_code ec;
+		m_ex_tracker_timer.expires_from_now(interval, ec);
+		m_ex_tracker_timer.async_wait(
+				boost::bind(&torrent::ex_tracker_announce, shared_from_this(), _1));
+	}
+
+	void torrent::ex_tracker_announce(error_code ec)
+	{
+		if (ec) return;
+
+		boost::shared_ptr<ex_announce_request> request(new ex_announce_request());
+		request->infohash = m_torrent_file->info_hash().to_string();
+		request->peer.ip = m_ses.local_interface().address().to_string(ec);
+		request->peer.port = m_ses.local_interface().port();
+		request->peer.peerid = m_ses.get_peer_id().to_string();
+		request->uploaded = m_stat.total_payload_upload();
+		request->downloaded = m_stat.total_payload_download();
+		request->left = bytes_left();
+		request->is_seed = m_real_seed;
+        request->is_transfer = m_transfer;
+		request->num_want = settings().num_want;
+		request->trackers = m_thrift_trackers;
+		if (m_abort) {
+			request->status = ex_announce_request::STOPPED;
+			request->num_want = 0;
+		} else if (is_torrent_paused()) {
+			request->status = ex_announce_request::PAUSED;
+		} else {
+			switch (m_state) {
+				case torrent_status::downloading_metadata:
+					request->status = ex_announce_request::METADATA;
+					break;
+				case torrent_status::downloading:
+					request->status = ex_announce_request::DOWNLOAD;
+					break;
+				case torrent_status::finished:
+				case torrent_status::seeding:
+					request->status = ex_announce_request::SEEDING;
+					break;
+				case torrent_status::allocating:
+				case torrent_status::checking_files:
+				case torrent_status::checking_resume_data:
+				case torrent_status::queued_for_checking:
+					request->status = ex_announce_request::PAUSED;
+					break;
+			}
+		}
+
+		m_ses.m_ex_annfunc(get_handle(), request);
+	}
+
+	void torrent::recv_ex_tracker_announce_reply(boost::shared_ptr<ex_announce_response> response)
+	{
+		if (m_abort) {
+			return;
+		}
+		if (response->ret != 0) {
+			++m_ex_tracker_failed_count;
+			if (m_ex_tracker_failed_count > 60) {
+				m_ex_tracker_failed_count /= 2;
+			}
+			add_ex_tracker_timer(seconds(m_ex_tracker_failed_count));
+			return;
+		} else {
+			m_ex_tracker_failed_count = 0;
+		}
+
+		for (std::vector<ex_announce_peer>::iterator i = response->peers.begin()
+				; i != response->peers.end(); ++i) {
+			peer_id pid(i->peerid);
+			error_code ec;
+			tcp::endpoint a(address::from_string(i->ip, ec), i->port);
+			if (ec) {
+				continue;
+			}
+			m_policy.add_peer(a, pid, peer_info::tracker, 0);
+		}
+
+		int interval = settings().min_announce_interval;
+		if (!is_seed()) {
+			int interval1 = m_policy.num_peers() + m_policy.num_seeds() * 3 + 1;
+			int limit = download_limit();
+			if (limit <= 0) {
+				limit = settings().download_rate_limit + 1;
+			}
+			interval = static_cast<int>(static_cast<int64_t>(m_stat.download_rate()) * 100 / limit);
+			if (interval < interval1) {
+				interval = interval1;
+			}
+			if (interval > settings().max_announce_interval) {
+				interval = settings().max_announce_interval;
+			}
+			if (interval < response->min_interval) {
+				interval = response->min_interval;
+			}
+		}
+
+		add_ex_tracker_timer(seconds(interval));
+		state_updated();
+	}
 }
 
diff -ruN libtorrent-libtorrent_0_16_5/src/torrent_handle.cpp libtorrent/src/torrent_handle.cpp
--- libtorrent-libtorrent_0_16_5/src/torrent_handle.cpp	2012-10-23 12:23:09.000000000 +0800
+++ libtorrent/src/torrent_handle.cpp	2016-12-04 14:56:15.919358122 +0800
@@ -293,7 +293,7 @@
 	{
 		INVARIANT_CHECK;
 		TORRENT_ASSERT(max_uploads >= 2 || max_uploads == -1);
-		TORRENT_ASYNC_CALL1(set_max_uploads, max_uploads);
+		TORRENT_ASYNC_CALL2(set_max_uploads, max_uploads, true);
 	}
 
 	void torrent_handle::use_interface(const char* net_interface) const
@@ -313,14 +313,14 @@
 	{
 		INVARIANT_CHECK;
 		TORRENT_ASSERT(max_connections >= 2 || max_connections == -1);
-		TORRENT_ASYNC_CALL1(set_max_connections, max_connections);
+		TORRENT_ASYNC_CALL2(set_max_connections, max_connections, true);
 	}
 
 	void torrent_handle::set_upload_limit(int limit) const
 	{
 		INVARIANT_CHECK;
 		TORRENT_ASSERT(limit >= -1);
-		TORRENT_ASYNC_CALL1(set_upload_limit, limit);
+		TORRENT_ASYNC_CALL2(set_upload_limit, limit, true);
 	}
 
 	int torrent_handle::upload_limit() const
@@ -334,7 +334,7 @@
 	{
 		INVARIANT_CHECK;
 		TORRENT_ASSERT(limit >= -1);
-		TORRENT_ASYNC_CALL1(set_download_limit, limit);
+		TORRENT_ASYNC_CALL2(set_download_limit, limit, true);
 	}
 
 	int torrent_handle::download_limit() const
@@ -612,9 +612,6 @@
 		return ret;
 	}
 
-#ifndef TORRENT_NO_DEPRECATE
-// ============ start deprecation ===============
-
 	int torrent_handle::get_peer_upload_limit(tcp::endpoint ip) const
 	{
 		INVARIANT_CHECK;
@@ -643,6 +640,10 @@
 		TORRENT_ASYNC_CALL2(set_peer_download_limit, ip, limit);
 	}
 
+#ifndef TORRENT_NO_DEPRECATE
+
+// ============ start deprecation ===============
+
 	void torrent_handle::set_ratio(float ratio) const
 	{
 		INVARIANT_CHECK;
@@ -799,6 +800,12 @@
 		TORRENT_ASYNC_CALL1(add_tracker, url);
 	}
 
+	void torrent_handle::recv_ex_tracker_announce_reply(boost::shared_ptr<ex_announce_response> response) const
+	{
+        INVARIANT_CHECK;
+        TORRENT_ASYNC_CALL1(recv_ex_tracker_announce_reply, response);
+	}
+
 	void torrent_handle::add_piece(int piece, char const* data, int flags) const
 	{
 		INVARIANT_CHECK;
@@ -818,6 +825,17 @@
 		return r;
 	}
 
+	void torrent_handle::set_hash_piece(int piece, const sha1_hash &hash)
+	{
+        TORRENT_SYNC_CALL2(set_piece_hash, piece, hash);
+	}
+
+	void torrent_handle::add_stats(stat const& s) const
+	{
+	    INVARIANT_CHECK;
+	    TORRENT_ASYNC_CALL1(add_stats, s);
+	}
+
 	storage_interface* torrent_handle::get_storage_impl() const
 	{
 		INVARIANT_CHECK;
@@ -825,6 +843,13 @@
 		return r;
 	}
 
+	boost::intrusive_ptr<torrent_info const> torrent_handle::torrent_file() const
+	{
+		TORRENT_SYNC_CALL_RET(boost::intrusive_ptr<torrent_info const>
+				, boost::intrusive_ptr<torrent_info const>(), get_torrent_copy);
+		return r;
+	}
+
 	torrent_info const& torrent_handle::get_torrent_info() const
 	{
 		INVARIANT_CHECK;
diff -ruN libtorrent-libtorrent_0_16_5/src/torrent_info.cpp libtorrent/src/torrent_info.cpp
--- libtorrent-libtorrent_0_16_5/src/torrent_info.cpp	2012-10-23 12:23:09.000000000 +0800
+++ libtorrent/src/torrent_info.cpp	2016-12-04 14:56:15.919358122 +0800
@@ -262,6 +262,8 @@
 			return false;
 		target.size = length->int_value();
 
+		target.mode = dict.dict_find_int_value("mode", 0644);
+
 		size_type ts = dict.dict_find_int_value("mtime", -1);
 		if (ts > 0) *mtime = std::time_t(ts);
 
@@ -327,6 +329,30 @@
 		return true;
 	}
 
+    bool extract_single_path(lazy_entry const& dict, file_storage& target)
+    {
+        if (dict.type() != lazy_entry::dict_t) return false;
+        mode_t mode = dict.dict_find_int_value("mode", 0755);
+        lazy_entry const* p = dict.dict_find("path");
+        if (p == 0 || p->type() != lazy_entry::list_t)
+            return false;
+
+        std::string path;
+        for (int i = 0, end(p->list_size()); i < end; ++i)
+        {
+            if (p->list_at(i)->type() != lazy_entry::string_t)
+                return false;
+            std::string path_element = p->list_at(i)->string_value();
+            trim_path_element(path_element);
+            path = combine_path(path, path_element);
+        }
+        path = sanitize_path(path);
+        verify_encoding(path, true);
+
+        target.add_path(path, mode);
+        return true;
+    }
+
 	struct string_less_no_case
 	{
 		bool operator()(std::string const& lhs, std::string const& rhs)
@@ -391,11 +417,85 @@
 				// this string pointer does not necessarily point into
 				// the m_info_section buffer.
 				char const* str_ptr = fee->string_ptr() + info_ptr_diff;
-				const_cast<internal_file_entry&>(fe).set_name(str_ptr, fee->string_length());
+				const_cast<internal_file_entry&>(fe).set_name(fee->string_value().c_str());
 			}
 		}
 		return true;
 	}
+    bool extract_paths(lazy_entry const& paths, file_storage& target
+            , const std::string &root_dir)
+    {
+        if (paths.type() != lazy_entry::list_t) return false;
+        for (int i = 0, end(paths.list_size()); i < end; ++i)
+        {
+            lazy_entry const& dict = *paths.list_at(i);
+            if (dict.type() != lazy_entry::dict_t) return false;
+            mode_t mode = dict.dict_find_int_value("mode", 0755);
+            lazy_entry const* p = dict.dict_find("path");
+            if (p == 0 || p->type() != lazy_entry::list_t)
+                return false;
+
+            std::string path = root_dir;
+            for (int i = 0, end(p->list_size()); i < end; ++i)
+            {
+                if (p->list_at(i)->type() != lazy_entry::string_t)
+                    return false;
+                std::string path_element = p->list_at(i)->string_value();
+                trim_path_element(path_element);
+                path = combine_path(path, path_element);
+            };
+            path = sanitize_path(path);
+            verify_encoding(path, true);
+            target.add_path(parent_path(combine_path(path, "x")), mode & 0777);
+        }
+        return true;
+    }
+
+    bool extract_symlinks(lazy_entry const& symlinks, file_storage& target
+            , const std::string &root_dir)
+    {
+        if (symlinks.type() != lazy_entry::list_t) return false;
+        for (int i = 0, end(symlinks.list_size()); i < end; ++i)
+        {
+            lazy_entry const& dict = *symlinks.list_at(i);
+            if (dict.type() != lazy_entry::dict_t) return false;
+            mode_t mode = dict.dict_find_int_value("mode", 0755);
+
+            lazy_entry const* p = dict.dict_find("path");
+            if (p == 0 || p->type() != lazy_entry::list_t)
+                return false;
+            std::string path = root_dir;
+            for (int i = 0, end(p->list_size()); i < end; ++i)
+            {
+                if (p->list_at(i)->type() != lazy_entry::string_t)
+                    return false;
+                std::string path_element = p->list_at(i)->string_value();
+                trim_path_element(path_element);
+                path = combine_path(path, path_element);
+            }
+            path = sanitize_path(path);
+            verify_encoding(path, true);
+
+            lazy_entry const* sp = dict.dict_find("symlink path");
+            if (sp == 0 || sp->type() != lazy_entry::string_t)
+                return false;
+            std::string symlink_path = sp->string_value();
+            /*
+            for (int i = 0, end(sp->list_size()); i < end; ++i)
+            {
+                if (sp->list_at(i)->type() != lazy_entry::string_t)
+                    return false;
+                std::string symlink_path_element = sp->list_at(i)->string_value();
+                trim_path_element(symlink_path_element);
+                symlink_path = combine_path(symlink_path, symlink_path_element);
+            }
+            symlink_path = sanitize_path(symlink_path);
+            */
+            verify_encoding(symlink_path, true);
+            target.add_symlink(path, symlink_path, mode);
+        }
+        return true;
+    }
 
 	int merkle_get_parent(int tree_node)
 	{
@@ -524,6 +624,7 @@
 		, m_merkle_tree(t.m_merkle_tree)
 		, m_piece_hashes(t.m_piece_hashes)
 		, m_comment(t.m_comment)
+		, m_sp_infohash(t.m_sp_infohash)
 		, m_created_by(t.m_created_by)
 #ifdef TORRENT_USE_OPENSSL
 		, m_ssl_root_cert(t.m_ssl_root_cert)
@@ -534,6 +635,7 @@
 		, m_multifile(t.m_multifile)
 		, m_private(t.m_private)
 		, m_i2p(t.m_i2p)
+		, m_cluster_config(t.m_cluster_config)
 	{
 #if defined TORRENT_DEBUG && !defined TORRENT_DISABLE_INVARIANT_CHECKS
 		t.check_invariant();
@@ -709,9 +811,11 @@
 		INVARIANT_CHECK;
 	}
 
-	torrent_info::torrent_info(char const* buffer, int size, error_code& ec, int flags)
+	torrent_info::torrent_info(char const* buffer, int size, error_code& ec, int flags
+			, const std::string &new_name)
 		: m_merkle_first_leaf(0)
 		, m_piece_hashes(0)
+		, m_new_name(new_name)
 		, m_creation_date(0)
 		, m_info_section_size(0)
 		, m_multifile(false)
@@ -726,9 +830,11 @@
 		INVARIANT_CHECK;
 	}
 
-	torrent_info::torrent_info(std::string const& filename, error_code& ec, int flags)
+	torrent_info::torrent_info(std::string const& filename, error_code& ec, int flags
+	        , const std::string &new_name)
 		: m_merkle_first_leaf(0)
 		, m_piece_hashes(0)
+	    , m_new_name(new_name)
 		, m_creation_date(0)
 		, m_info_section_size(0)
 		, m_multifile(false)
@@ -740,7 +846,7 @@
 		if (ret < 0) return;
 
 		lazy_entry e;
-		if (buf.size() == 0 || lazy_bdecode(&buf[0], &buf[0] + buf.size(), e, ec) != 0)
+		if (buf.size() == 0 || lazy_bdecode(&buf[0], &buf[0] + buf.size(), e, ec, 0, 1000, 10000000) != 0)
 			return;
 		parse_torrent_file(e, ec, flags);
 
@@ -776,9 +882,10 @@
 	// will not contain any hashes, comments, creation date
 	// just the necessary to use it with piece manager
 	// used for torrents with no metadata
-	torrent_info::torrent_info(sha1_hash const& info_hash, int flags)
+	torrent_info::torrent_info(sha1_hash const& info_hash, int flags, const std::string &new_name)
 		: m_merkle_first_leaf(0)
 		, m_piece_hashes(0)
+	    , m_new_name(new_name)
 		, m_creation_date(time(0))
 		, m_info_hash(info_hash)
 		, m_info_section_size(0)
@@ -814,6 +921,7 @@
 		m_orig_files.swap(ti.m_orig_files);
 		m_nodes.swap(ti.m_nodes);
 		swap(m_info_hash, ti.m_info_hash);
+		swap(m_sp_infohash, ti.m_sp_infohash);
 		swap(m_creation_date, ti.m_creation_date);
 		m_comment.swap(ti.m_comment);
 		m_created_by.swap(ti.m_created_by);
@@ -843,10 +951,12 @@
 		}
 
 		// hash the info-field to calculate info-hash
-		hasher h;
 		std::pair<char const*, int> section = info.data_section();
-		h.update(section.first, section.second);
-		m_info_hash = h.final();
+		if (m_info_hash.is_all_zeros()) {
+		    hasher h;
+		    h.update(section.first, section.second);
+		    m_info_hash = h.final();
+		}
 
 		// copy the info section
 		m_info_section_size = section.second;
@@ -890,10 +1000,38 @@
 
 		// correct utf-8 encoding errors
 		verify_encoding(name, true);
-	
+		if (!m_new_name.empty()) {
+		    name = m_new_name;
+		}
+
+        bool has_path = false;
+        lazy_entry const* paths = info.dict_find_list("paths");
+        if (paths != 0)
+        {
+            has_path = true;
+            m_files.add_path(parent_path(combine_path(name, "x"))
+                    , info.dict_find_int_value("mode", 0755) & 0777);// 加入根路径
+            if (paths->type() == lazy_entry::list_t && !extract_paths(*paths, m_files, name))
+            {
+                ec = errors::torrent_file_parse_failed;
+                return false;
+            }
+        }
+
+        bool has_symlinks = false;
+        lazy_entry const* symlinks = info.dict_find_list("symlinks");
+        if (symlinks != 0)
+        {
+            has_symlinks = true;
+            if (!extract_symlinks(*symlinks, m_files, name))
+            {
+                ec = errors::torrent_file_parse_failed;
+                return false;
+            }
+        }
 		// extract file list
 		lazy_entry const* i = info.dict_find_list("files");
-		if (i == 0)
+		if (i == 0 && !has_path && !has_symlinks)
 		{
 			// if there's no list of files, there has to be a length
 			// field.
@@ -902,6 +1040,7 @@
 			e.offset = 0;
 			e.size = info.dict_find_int_value("length", -1);
 			e.mtime = info.dict_find_int_value("mtime", 0);
+			e.mode = info.dict_find_int_value("mode", 0744);
 			lazy_entry const* attr = info.dict_find_string("attr");
 			if (attr)
 			{
@@ -941,7 +1080,7 @@
 			m_files.add_file(e, fh ? fh->string_ptr() + info_ptr_diff : 0);
 			m_multifile = false;
 		}
-		else
+		else if (i != 0)
 		{
 			if (!extract_files(*i, m_files, name, info_ptr_diff))
 			{
@@ -952,6 +1091,16 @@
 		}
 		m_files.set_name(name);
 
+		m_cluster_config.host = info.dict_find_string_value("HADOOP_HOST");
+		m_cluster_config.port = info.dict_find_int_value("HADOOP_PORT", 0);
+		m_cluster_config.user = info.dict_find_string_value("HADOOP_USER");
+		m_cluster_config.passwd = info.dict_find_string_value("HADOOP_PASSWD");
+		m_cluster_config.protocol = info.dict_find_string_value("HADOOP_PROTOCOL");
+		m_cluster_config.prefix_path = info.dict_find_string_value("dest_src");
+		if (m_cluster_config.protocol.empty()) {
+			m_cluster_config.protocol = "hdfs";
+		}
+
 		// extract sha-1 hashes for all pieces
 		// we want this division to round upwards, that's why we have the
 		// extra addition
@@ -961,13 +1110,14 @@
 
 		lazy_entry const* pieces = info.dict_find("pieces");
 		lazy_entry const* root_hash = info.dict_find("root hash");
+		/* liuming03
 		if ((pieces == 0 || pieces->type() != lazy_entry::string_t)
 			&& (root_hash == 0 || root_hash->type() != lazy_entry::string_t))
 		{
 			ec = errors::torrent_missing_pieces;
 			return false;
 		}
-		
+		//*/
 		if (pieces)
 		{
 			if (pieces->string_length() != m_files.num_pieces() * 20)
@@ -980,7 +1130,7 @@
 			TORRENT_ASSERT(m_piece_hashes >= m_info_section.get());
 			TORRENT_ASSERT(m_piece_hashes < m_info_section.get() + m_info_section_size);
 		}
-		else
+		else if (root_hash)
 		{
 			TORRENT_ASSERT(root_hash);
 			if (root_hash->string_length() != 20)
@@ -1231,7 +1381,17 @@
 		m_comment = torrent_file.dict_find_string_value("comment.utf-8");
 		if (m_comment.empty()) m_comment = torrent_file.dict_find_string_value("comment");
 		verify_encoding(m_comment);
-	
+
+		m_sp_infohash.assign(torrent_file.dict_find_string_value("sp_infohash.utf-8"));
+		if (m_sp_infohash.is_all_zeros()) {
+            m_sp_infohash.assign(torrent_file.dict_find_string_value("sp_infohash"));
+        }
+
+        // if has sp_infohash than use sp_infohash @yanghanlin 2015.12.30
+        if (!m_sp_infohash.is_all_zeros()) {
+            m_info_hash = m_sp_infohash;
+        }
+
 		m_created_by = torrent_file.dict_find_string_value("created by.utf-8");
 		if (m_created_by.empty()) m_created_by = torrent_file.dict_find_string_value("created by");
 		verify_encoding(m_created_by);
@@ -1319,6 +1479,9 @@
 		}
 		if (!m_comment.empty())
 			os << "comment: " << m_comment << "\n";
+        if (!m_sp_infohash.is_all_zeros()) {
+            os << "sp_infohash: " << m_sp_infohash.to_string() << "\n";
+        }
 		os << "private: " << (m_private?"yes":"no") << "\n";
 		os << "number of pieces: " << num_pieces() << "\n";
 		os << "piece length: " << piece_length() << "\n";
diff -ruN libtorrent-libtorrent_0_16_5/test/cb.xml libtorrent/test/cb.xml
--- libtorrent-libtorrent_0_16_5/test/cb.xml	2012-10-23 12:23:09.000000000 +0800
+++ libtorrent/test/cb.xml	1970-01-01 08:00:00.000000000 +0800
@@ -1,612 +0,0 @@
-<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:media="http://search.yahoo.com/mrss/">
-  <channel>
-    <title>ClearBits:  All Content</title>
-    <link>http://www.clearbits.net</link>
-    <atom:link href="http://www.clearbits.net/rss.xml" rel="self" type="application/rss+xml"/>
-    <description>All Content</description>
-    <lastBuildDate>Mon, 20 Feb 2012 22:07:12 +0000</lastBuildDate>
-    <item>
-<title>Norbergfestival 2011</title>
-<link>http://www.clearbits.net/torrents/1911-norbergfestival-2011</link>
-<description>A short documentation/collage of our trip to the Norbergfestival 2011. The documentary features our friends, acts such as Lustmord, Dopplereffekt , Vinyl terror and horror and the grand and unforgettable Mimer-stage.
-
-Shot between 28 and 30 july 2011 at the Norbergfestival. The Norbergfestival celebrates alternative electronic music and takes place in the small city Norberg in Sweden. 2011 the festival featured such acts as Lustmord, Dopplereffekt, Rrritalin, Vinyl terror &amp; horror, Hanna Hartman, Rrritalin etc.</description>
-<category>Movies;4</category>
-<guid>http://www.clearbits.net/torrents/1911-norbergfestival-2011</guid>
-<pubDate>Fri, 17 Feb 2012 12:26:53 +0000</pubDate>
-<enclosure type="application/x-bittorrent" length="1160773632" url="http://www.clearbits.net/get/1911-norbergfestival-2011.torrent"/>
-    </item>
-    <item>
-<title>99 Anonymous Mixtape 4</title>
-<link>http://www.clearbits.net/torrents/1910-99-anonymous-mixtape-4</link>
-<description>Fourth release of a series of mixtapes raising awareness to the Anonymous, #antisec, Wikileaks and Occupy Wall Street movements. This fourth release also focuses on SOPA / PIPA, ACTA and #PL118. Organized in colaboration with &lt;a href=&quot;http://xdatelier.org&quot;&gt;xDA hackerspace&lt;/a&gt;, this release is part of Enough Records social and political activist sub-label Anonymous Archives and has it's own &lt;a href=&quot;http://enoughrecords.scene.org/anonymous_archives/&quot;&gt;minipage&lt;/a&gt;. Mixed by ps. Cover by Roland Henry.
-
-Tracklist:
-01) Frank Boyant - Starving to Death (ps's Portuguese Anonymous Remix)
-02) Copy Your Idols - Art Is Dead (Ifland &amp; Klatt's Final Nail Edit)
-03) Dainon - ACTA
-04) TheJuiceMedia: RAP NEWS 4 - Wikileaks vs The Pentagon - WWWAR on the Internet
-05) unknown artist - Occupy
-06) unknown artist - #FFF
-07) The Easton Ellises - Glitches
-08) TheJuiceMedia: RAP NEWS X - #Occupy2012
-09) Megaupload - Mega Song
-10) TheAnonMessage - Operation Black Out
-11) Pedro Esteves - #pl118
-12) kokori - PL118
-13) Hanging By A Name - The Shape
-14) Ink &amp; One - I Occupy Wall Street
-</description>
-<category>Netlabel Music;7</category>
-<guid>http://www.clearbits.net/torrents/1910-99-anonymous-mixtape-4</guid>
-<pubDate>Thu, 16 Feb 2012 15:15:48 +0000</pubDate>
-<enclosure type="application/x-bittorrent" length="114294784" url="http://www.clearbits.net/get/1910-99-anonymous-mixtape-4.torrent"/>
-<media:thumbnail url="http://www.clearbits.net/upload/image/2802.jpg?type=thumb"/>
-    </item>
-    <item>
-<title>99 Anonymous Mixtape 3</title>
-<link>http://www.clearbits.net/torrents/1909-99-anonymous-mixtape-3</link>
-<description>Third release of a series of mixtapes raising awareness to the Anonymous, #antisec, Wikileaks and Occupy Wall Street movements. Organized in colaboration with &lt;a href=&quot;http://xdatelier.org&quot;&gt;xDA hackerspace&lt;/a&gt;, this release is part of Enough Records social and political activist sub-label Anonymous Archives and has it's own &lt;a href=&quot;http://enoughrecords.scene.org/anonymous_archives/&quot;&gt;minipage&lt;/a&gt;. Mixed by Ricardo Webbens.
-
-Tracklist:
-01) unknown artist - dreams
-02) Mystified - The Shock Of Coming Days (Kinetic Remix)
-03) M-PeX - Navimort
-04) ps - Wake up! Your democracy is dead
-05) Sci-Fi Industries - GOP Item
-06) .crk - SQL Slammer (Anonymous Version)
-07) YTCracker - #antisec
-08) Amitron_7 - Zuccotti Park
-09) Virgilio Oliveira feat. a poem by divinity33372 - Opression
-10) Ricardo Webbens - port 21
-11) ocp - Presevere
-</description>
-<category>Netlabel Music;7</category>
-<guid>http://www.clearbits.net/torrents/1909-99-anonymous-mixtape-3</guid>
-<pubDate>Sat, 11 Feb 2012 05:20:57 +0000</pubDate>
-<enclosure type="application/x-bittorrent" length="111149056" url="http://www.clearbits.net/get/1909-99-anonymous-mixtape-3.torrent"/>
-<media:thumbnail url="http://www.clearbits.net/upload/image/2798.jpg?type=thumb"/>
-    </item>
-    <item>
-<title>Various Artists - Impromeetin 2011</title>
-<link>http://www.clearbits.net/torrents/1908-various-artists---impromeetin-2011</link>
-<description>Impromeeting is a meeting place for the improvisation of sound artists from different artistic disciplines as a form of collaboration, experimentation and fun. Impromeeting accommodates musicians and non-musicians, narrators, poets, electronics, sound art, djing, turntablism or any other form of creating sound and noise from the point of view of experimental music. Organised by Mauri (producer, artist and dj). First edition was in 2010 and the second edition was on 10th of july 2011 in  Gijon (Spain) with 4 artists from different musical styles (were first improvising in pairs, and ended up playing all together). The artists for Impromeetin'2011 were: Non Ergo (with a computer, synthesizer, and voice). Vred (Electronic violoncelo, guitar, contrabass and some footswitch). Violeta Nureyev (bass and voice). Las Casi Casiotone (with  2 MacBook Pro, Midi controller, delay footswitch and microphone).</description>
-<category>Netlabel Music;7</category>
-<guid>http://www.clearbits.net/torrents/1908-various-artists---impromeetin-2011</guid>
-<pubDate>Fri, 10 Feb 2012 18:05:30 +0000</pubDate>
-<enclosure type="application/x-bittorrent" length="85983232" url="http://www.clearbits.net/get/1908-various-artists---impromeetin-2011.torrent"/>
-<media:thumbnail url="http://www.clearbits.net/upload/image/2796.jpg?type=thumb"/>
-    </item>
-    <item>
-<title>Iron Sky Theatrical Trailer</title>
-<link>http://www.clearbits.net/torrents/1907-iron-sky-theatrical-trailer</link>
-<description>Iron Sky Official Theatrical Trailer in glorious full HD and iPad optimized .mp4! Music composed by Laibach.Iron Sky is a dark scifi comedy. In theaters starting on 4th of April 2012 in Finland and 5th of April in Germany. More countries will follow in April and May.Read more: http://www.ironsky.net Follow us: http://fb.com/ironsky</description>
-<category>Movies;4</category>
-<guid>http://www.clearbits.net/torrents/1907-iron-sky-theatrical-trailer</guid>
-<pubDate>Thu, 09 Feb 2012 15:08:03 +0000</pubDate>
-<enclosure type="application/x-bittorrent" length="564133888" url="http://www.clearbits.net/get/1907-iron-sky-theatrical-trailer.torrent"/>
-    </item>
-    <item>
-<title>Glamour Portraits by Andreea Retinschi [Copyright]</title>
-<link>http://www.clearbits.net/torrents/1904-glamour-portraits-by-andreea-retinschi-copyright</link>
-<description>The theme is distributed in three files, for the most common aspect ratios and resolutions:
-4:3 Aspect Ratio Resolutions: 1600x1200, 1280x960, 1152x864, 1024x768.
-16:9 Aspect Ratio Resolutions: 1920x1080, 1600x900, 1366x768, 1360x768.
-16:10 Aspect Ratio Resolutions: 1920x1200, 1680x1050, 1440x900, 1280x800.
-&lt;strong&gt;Copyright: Andreea Retinschi. If you want to use the pictures included in this theme otherwise than as you desktop backgrounds, you need written permission from their author.&lt;/strong&gt;</description>
-<category>Other;10</category>
-<guid>http://www.clearbits.net/torrents/1904-glamour-portraits-by-andreea-retinschi-copyright</guid>
-<pubDate>Thu, 09 Feb 2012 13:15:03 +0000</pubDate>
-<enclosure type="application/x-bittorrent" length="32505856" url="http://www.clearbits.net/get/1904-glamour-portraits-by-andreea-retinschi-copyright.torrent"/>
-    </item>
-    <item>
-<title>Street Portraits Photography by Andrei Niculescu - Windows 7 Theme [version 2]</title>
-<link>http://www.clearbits.net/torrents/1854-street-portraits-photography-by-andrei-niculescu---windows-7-theme-version-2</link>
-<description>The theme is distributed in three files, for the most common aspect ratios and resolutions:
-4:3 Aspect Ratio Resolutions: 1600x1200, 1280x960, 1152x864, 1024x768.
-16:9 Aspect Ratio Resolutions: 1920x1080, 1600x900, 1366x768, 1360x768.
-16:10 Aspect Ratio Resolutions: 1920x1200, 1680x1050, 1440x900, 1280x800.
-&lt;strong&gt;Copyright: Andrei Niculescu. If you want to use the pictures included in this theme otherwise than as you desktop backgrounds, you need written permission from their author.&lt;/strong&gt;</description>
-<category>Other;10</category>
-<guid>http://www.clearbits.net/torrents/1854-street-portraits-photography-by-andrei-niculescu---windows-7-theme-version-2</guid>
-<pubDate>Thu, 09 Feb 2012 13:07:56 +0000</pubDate>
-<enclosure type="application/x-bittorrent" length="24117248" url="http://www.clearbits.net/get/1854-street-portraits-photography-by-andrei-niculescu---windows-7-theme-version-2.torrent"/>
-    </item>
-    <item>
-<title>Enko - Woods Moons</title>
-<link>http://www.clearbits.net/torrents/1906-enko---woods-moons</link>
-<description>Artist: Enko
-Title: Woods Moons
-Cat#: BP064
-Date: 8 Feb, 2012
-Genre: Electronic
-Format: 14 x File, MP3, 320 kbps
-
-About Enko:
-
-Enko also known as Enkolf Kitler, is an electronic musician who was born in Sumy city, Ukraine. But now he lives and works in Moscow. Enko's early creations was influenced by the English electronic group Autechre. He began releasing music for free in 2008, on netlabels such as SUBWISE, Pavillon36 Recordings, Qulture Production. Enko makes music on his laptop under Propellerhead Reason. He was studied in the Faculty Engineering Department of the Sumy State University. 
-
-Credits:
-
-Written-By: &lt;a href=&quot;http://www.facebook.com/profile.php?id=100000471681997&quot;&gt;Enko&lt;/a&gt;
-Mastered By: &lt;a href=&quot;http://zhangjw.bai-hua.org&quot;&gt;ZhangJW&lt;/a&gt;
-
-Bypass Netlabel - &lt;a href=&quot;http://bp.bai-hua.org&quot;&gt;bp.bai-hua.org&lt;/a&gt;</description>
-<category>Netlabel Music;7</category>
-<guid>http://www.clearbits.net/torrents/1906-enko---woods-moons</guid>
-<pubDate>Tue, 07 Feb 2012 17:05:57 +0000</pubDate>
-<enclosure type="application/x-bittorrent" length="101711872" url="http://www.clearbits.net/get/1906-enko---woods-moons.torrent"/>
-<media:thumbnail url="http://www.clearbits.net/upload/image/2794.jpg?type=thumb"/>
-    </item>
-    <item>
-<title>Various Artists - NEW 7.0</title>
-<link>http://www.clearbits.net/torrents/1905-various-artists---new-70</link>
-<description>Electronic music is one of the major export products of the Netherlands. It seems we have an almost endless supply of talent in our country, more than anywhere else. Numerous young producers master all kinds of production skills within the confinement of their own bedrooms. A lot of these tracks never reach an audience beyond the producer's headphones unfortunately. Album NEW 7.0 collects twelve of these incredible tracks. Alienating trip hop, heavy techno, old school house, future garage: talented producers from East Netherlands seem to pop up in all conceivable genre.N.E.W. puts new producers from East Netherlands on the map. Selected for NEW 7.0 are Sam a La Bamalot, Badencourtrecords, Youri, Lopende Paddo, Addicted White Guy, Sonurber, The House Arts, Near Earth Object , Grimm Limbo, Le VingtQuatre, Knarsetand and Radion. This twelve men strong wave of producers will be promoted by NEW all year long in many different ways. First of all there's the release of the compilation album NEW 7.0, which will be available on a free CD at release parties in both Nijmegen and Deventer. Free digital copies are also available through online label esc.rec right here on this page and at the site www.nieuweelectronischewaar.nl.NEW Partners: esc.rec., productiehuis ON, Het Burgerweeshuis, Doornroosje &amp; Merleyn, Gogbot, de-Affaire, Hedon, Gesel XL, Cultuurwolven, Savoir, KCO, KCG, Artez Conservatorium, Eclectro, Atak, Go Short.</description>
-<category>Netlabel Music;7</category>
-<guid>http://www.clearbits.net/torrents/1905-various-artists---new-70</guid>
-<pubDate>Tue, 07 Feb 2012 11:56:50 +0000</pubDate>
-<enclosure type="application/x-bittorrent" length="138412032" url="http://www.clearbits.net/get/1905-various-artists---new-70.torrent"/>
-<media:thumbnail url="http://www.clearbits.net/upload/image/2793.jpg?type=thumb"/>
-    </item>
-    <item>
-<title>Digital Collages by Ionut Caras</title>
-<link>http://www.clearbits.net/torrents/1903-digital-collages-by-ionut-caras</link>
-<description>The theme is distributed in three files, for the most common aspect ratios and resolutions:
-4:3 Aspect Ratio Resolutions: 1600x1200, 1280x960, 1152x864, 1024x768.
-16:9 Aspect Ratio Resolutions: 1920x1080, 1600x900, 1366x768, 1360x768.
-16:10 Aspect Ratio Resolutions: 1920x1200, 1680x1050, 1440x900, 1280x800.
-&lt;strong&gt;Copyright: Ionut Caras. If you want to use the pictures included in this theme otherwise than as you desktop backgrounds, you need written permission from their author.&lt;/strong&gt;</description>
-<category>Other;10</category>
-<guid>http://www.clearbits.net/torrents/1903-digital-collages-by-ionut-caras</guid>
-<pubDate>Thu, 02 Feb 2012 11:21:44 +0000</pubDate>
-<enclosure type="application/x-bittorrent" length="26214400" url="http://www.clearbits.net/get/1903-digital-collages-by-ionut-caras.torrent"/>
-<media:thumbnail url="http://www.clearbits.net/upload/image/2788.jpg?type=thumb"/>
-    </item>
-    <item>
-<title>Various Artists - netBloc Vol. 36_ Get Dusted _Illness From The Dusted Wax Stacks_</title>
-<link>http://www.clearbits.net/torrents/1902-various-artists---netbloc-vol-36_-get-dusted-_illness-from-the-dusted-wax-stacks_</link>
-<description>Can you believe that we're approaching our fifth year of bringing you only the best music from netlabel and netaudio culture?!? It's been an amazing five years and I thank you for continuing to listen. Over the years, blocSonic has become more than a tastemaker. We've grown and expanded into releasing our own quality releases. However we grow and develop in the future, our commitment to continued support of netaudio via our netBloc series is stronger than ever. With this, our 36th volume in the series, we're committing to one annual year-end netBloc that shines the spotlight on ONE netlabel. This year we're bringing you a collection of fire from the extensive Dusted Wax Kingdom archives! Over the years of bringing you these netBlocs, there are a few netlabels who have become staples of the compilation series. More recently, DWK has become one of these favorites. Though, their catalog is extensive enough that many gems just haven't received the shine they deserve. So here you have a collection of 15 tracks that present to you a good representation of the Dusted Wax Kingdom sound. Thanks to label head Dimitar for making the experience of compiling this collection a great one! Thanks to all artists of the DWK roster for doing what you do and sharing your art with the world. You all &amp; everyone in the netaudio culture make music intriguing again.Thanks again to our listeners! Remember... everything we release is cool to share! Always keep the music moving... share it... blog it... podcast it! If you're in radio... support independent music and broadcast it! HAPPY NEW YEAR! Be safe.</description>
-<category>Netlabel Music;7</category>
-<guid>http://www.clearbits.net/torrents/1902-various-artists---netbloc-vol-36_-get-dusted-_illness-from-the-dusted-wax-stacks_</guid>
-<pubDate>Wed, 01 Feb 2012 15:23:55 +0000</pubDate>
-<enclosure type="application/x-bittorrent" length="137363456" url="http://www.clearbits.net/get/1902-various-artists---netbloc-vol-36_-get-dusted-_illness-from-the-dusted-wax-stacks_.torrent"/>
-<media:thumbnail url="http://www.clearbits.net/upload/image/2787.jpg?type=thumb"/>
-    </item>
-    <item>
-<title>1in10 Varia - A Million Ways</title>
-<link>http://www.clearbits.net/torrents/1901-1in10-varia---a-million-ways</link>
-<description>New album mashup album by one member of Varia, you might remember them from their previous release at Enough Records, a double album titled &lt;a href=&quot;http://enoughrecords.scene.org/?cat=enrmp269&quot;&gt;Magic + Omega&lt;/a&gt;. It's quite hard to define their style in writing, a remix / mashup sonic soup of sorts using 70s and 80s classics in post new wave / disco / electro fashion mixed with some occasional movie or audiobook sampling.</description>
-<category>Netlabel Music;7</category>
-<guid>http://www.clearbits.net/torrents/1901-1in10-varia---a-million-ways</guid>
-<pubDate>Tue, 31 Jan 2012 16:34:37 +0000</pubDate>
-<enclosure type="application/x-bittorrent" length="53477376" url="http://www.clearbits.net/get/1901-1in10-varia---a-million-ways.torrent"/>
-<media:thumbnail url="http://www.clearbits.net/upload/image/2786.jpg?type=thumb"/>
-    </item>
-    <item>
-<title>Various Artists - netBloc Vol. 35_ Occupy Music</title>
-<link>http://www.clearbits.net/torrents/1900-various-artists---netbloc-vol-35_-occupy-music</link>
-<description>Thanks once again for downloading and listening! We've got a selection of 13 tracks from the world of netaudio. Two of them are previews of 2012 blocSonic releases. I hope you enjoy this carefully crafted selection! Remember... everything we release is cool to share! Always keep the music moving... share it... blog it... podcast it! If you're in radio... support independent music and broadcast it!</description>
-<category>Netlabel Music;7</category>
-<guid>http://www.clearbits.net/torrents/1900-various-artists---netbloc-vol-35_-occupy-music</guid>
-<pubDate>Tue, 31 Jan 2012 15:09:45 +0000</pubDate>
-<enclosure type="application/x-bittorrent" length="90177536" url="http://www.clearbits.net/get/1900-various-artists---netbloc-vol-35_-occupy-music.torrent"/>
-<media:thumbnail url="http://www.clearbits.net/upload/image/2785.jpg?type=thumb"/>
-    </item>
-    <item>
-<title>99 Anonymous Mixtape 2</title>
-<link>http://www.clearbits.net/torrents/1899-99-anonymous-mixtape-2</link>
-<description>Second release of a series of mixtapes raising awareness to the Anonymous, #antisec, Wikileaks and Occupy Wall Street movements. Organized in colaboration with &lt;a href=&quot;http://xdatelier.org&quot; rel=&quot;nofollow&quot;&gt;xDA hackerspace&lt;/a&gt;, this release is part of Enough Records social and political activist sub-label Anonymous Archives and has it's own &lt;a href=&quot;http://enoughrecords.scene.org/99anonymous/&quot; rel=&quot;nofollow&quot;&gt;minipage&lt;/a&gt;. Mixed by Amitron_7. Cover by Roland Henry.
-Tracklist:
-01) Macabro - Just Run Away
-02) Jari Pitkanen - 111220 Vuvukat
-03) Amitron_7 - Zucotti Park
-04) Jari Pitkanen - 111220 Vuvukat (reprise)
-05) Jared Balogh - The Calm before the Storm
-06) Virgilio Oliveira feat. a poem by divinity33372 - Opression
-07) Jared Balogh - The Calm before the Storm (reprise)
-08) YTCracker - #antisec
-09) No Loli-Gagging - Occupy the Internet
-10) M-PeX - Navimort
-11) Macabro - We Live Lies
-</description>
-<category>Netlabel Music;7</category>
-<guid>http://www.clearbits.net/torrents/1899-99-anonymous-mixtape-2</guid>
-<pubDate>Thu, 26 Jan 2012 19:36:40 +0000</pubDate>
-<enclosure type="application/x-bittorrent" length="70254592" url="http://www.clearbits.net/get/1899-99-anonymous-mixtape-2.torrent"/>
-<media:thumbnail url="http://www.clearbits.net/upload/image/2783.jpg?type=thumb"/>
-    </item>
-    <item>
-<title>Alister Flint Discography</title>
-<link>http://www.clearbits.net/torrents/1898-alister-flint-discography</link>
-<description>[SLNT033] Alister Flint - Under The Surface[SLNT027] Alister Flint - Alter Nativis[SLNT015] Alister Flint - UchuuBought his first &quot;synth&quot; in the mid-90s, a Yamaha PSR500 (r), which was more an arranger rather than really a synthetiser, Alister stepped into the world of eletronic music after having been heavily influenced by key albums such as Tangerine Dream's Stratosfear or Rubycon, as well as having performed as a techno DJ in free parties in southern France. Late 90s, he bought his first computer equiped with a 16bit soundcard and started to track his first electronic tunes on Fast Tracker (r), which is more like programming rather than any real play, using all kinds of codes to iunput notes, effects and such. But most of his production at time was techno/trance oriented.Shortly after 2000, the release of a revolutionary daw, Reason (r), opened a much wider scope of genres and styles, and he started to produce more downtempo, chilled out, groove-based pieces. And it was also the birth of his very humble home studio, with a Yamaha P-80 (r) piano, and a semi-pro Creamware (r) soundcard. With the additions of congas, derbekehh, and more recently, Korg nanoSeries as portable studio, he started to produce and perform live some experimental and ambient pieces.He has done a few collaborations with musicians such as C. Vaisvil in various genres, and he's now actively part of a newly born musician community, Not Only Music, opened to all kinds of genres, and artforms, with an expanding interest for microtonal music.'Uchuu' [SLNT015] is the first release of Alister Flint.</description>
-<category>Netlabel Music;7</category>
-<guid>http://www.clearbits.net/torrents/1898-alister-flint-discography</guid>
-<pubDate>Sat, 21 Jan 2012 17:17:24 +0000</pubDate>
-<enclosure type="application/x-bittorrent" length="379584512" url="http://www.clearbits.net/get/1898-alister-flint-discography.torrent"/>
-<media:thumbnail url="http://www.clearbits.net/upload/image/2779.jpg?type=thumb"/>
-    </item>
-    <item>
-<title>AtlanThis</title>
-<link>http://www.clearbits.net/torrents/1897-atlanthis</link>
-<description>Compilation of experimental electronic music artists from Portugal and the United States, on the theme of travelling across the Atlantic ocean in search of a new world. Organized and co-released by &lt;a href=&quot;http://thisco.net/&quot;&gt;Thisco Records&lt;/a&gt;. Tracks by Low Pressure System, &lt;a href=&quot;http://tpolm.org/~ps/&quot;&gt;ps&lt;/a&gt;, &lt;a href=&quot;http://www.myspace.com/structura&quot;&gt;Structura&lt;/a&gt;, &lt;a href=&quot;http://www.sicktothebackteeth.com/&quot;&gt;Sick To The Back Teeth&lt;/a&gt;, &lt;a href=&quot;http://infetu.com/&quot;&gt;Infetu&lt;/a&gt;, &lt;a href=&quot;http://www.mystifiedmusic.com/&quot;&gt;Mystified&lt;/a&gt;, &lt;a href=&quot;http://www.myspace.com/traumaticodesmame&quot;&gt;Traumatico Desmame&lt;/a&gt;, &lt;a href=&quot;http://www.thisco.net/scifiindustries.htm&quot;&gt;Sci-Fi Industries&lt;/a&gt;, Wedding Noise and &lt;a href=&quot;http://www.thermidor-project.net/&quot;&gt;Thermidor&lt;/a&gt;.</description>
-<category>Netlabel Music;7</category>
-<guid>http://www.clearbits.net/torrents/1897-atlanthis</guid>
-<pubDate>Fri, 20 Jan 2012 16:33:52 +0000</pubDate>
-<enclosure type="application/x-bittorrent" length="105906176" url="http://www.clearbits.net/get/1897-atlanthis.torrent"/>
-<media:thumbnail url="http://www.clearbits.net/upload/image/2778.jpg?type=thumb"/>
-    </item>
-    <item>
-<title>Glamour Portraits by Andreea Retinschi</title>
-<link>http://www.clearbits.net/torrents/1896-glamour-portraits-by-andreea-retinschi</link>
-<description>The theme is distributed in three files, for the most common aspect ratios and resolutions:
-4:3 Aspect Ratio Resolutions: 1600x1200, 1280x960, 1152x864, 1024x768.
-16:9 Aspect Ratio Resolutions: 1920x1080, 1600x900, 1366x768, 1360x768.
-16:10 Aspect Ratio Resolutions: 1920x1200, 1680x1050, 1440x900, 1280x800.
-&lt;strong&gt;Copyright: Andreea Retinschi. If you want to use the pictures included in this theme otherwise than as you desktop backgrounds, you need written permission from their author.&lt;/strong&gt;</description>
-<category>Other;10</category>
-<guid>http://www.clearbits.net/torrents/1896-glamour-portraits-by-andreea-retinschi</guid>
-<pubDate>Thu, 19 Jan 2012 13:48:07 +0000</pubDate>
-<enclosure type="application/x-bittorrent" length="32505856" url="http://www.clearbits.net/get/1896-glamour-portraits-by-andreea-retinschi.torrent"/>
-<media:thumbnail url="http://www.clearbits.net/upload/image/2777.jpg?type=thumb"/>
-    </item>
-    <item>
-<title>Modernism</title>
-<link>http://www.clearbits.net/torrents/1894-modernism</link>
-<description>New for 2012! Back-to-basics new wave post-punk inspired album of original songs by Zru Vogue founder Andrew L. Jackson. Includes the full album in CD-quality AIFF plus high-quality MP3 files of all eleven songs: Artists and Poets Run Amok!, Things are Better With You, Little Yellow Pills, The Once and Future Me, Say It To You, Riddles Revisited, What do Words Want?, Water Gun, A Walk in the Park, Self Improvement, and the eleven-and-a-half-minute opus A Plush Pony Blinks Twice in Darkness. Download it today! All songs written, arranged, performed, and produced by Andrew Lawrence Jackson.</description>
-<category>Netlabel Music;7</category>
-<guid>http://www.clearbits.net/torrents/1894-modernism</guid>
-<pubDate>Mon, 16 Jan 2012 17:56:58 +0000</pubDate>
-<enclosure type="application/x-bittorrent" length="610271232" url="http://www.clearbits.net/get/1894-modernism.torrent"/>
-<media:thumbnail url="http://www.clearbits.net/upload/image/2773.jpg?type=thumb"/>
-    </item>
-    <item>
-<title>99 Anonymous Mixtape 1</title>
-<link>http://www.clearbits.net/torrents/1893-99-anonymous-mixtape-1</link>
-<description>First release of a series of mixtapes raising awareness to the Anonymous, #antisec, Wikileaks and Occupy Wall Street movements. Organized in colaboration with &lt;a href=&quot;http://xdatelier.org&quot;&gt;xDA hackerspace&lt;/a&gt;, this release is part of Enough Records social and political activist sub-label Anonymous Archives and has it's own &lt;a href=&quot;http://enoughrecords.scene.org/99anonymous/&quot;&gt;minipage&lt;/a&gt;. 
-Tracklist:
-01) M-PeX - Navimort (Operation Payback Remix by ps)
-02) .crk - SQL Slammer (Anonymous Version)
-03) No Loli-Gagging - Occupy The Internet
-04) amitron_7 - Zuccotti Park
-05) Virgilio Oliveira feat. a poem by divinity33372 - Opression
-06) macabro - We Live Lies
-07) unknown artist - dreams
-08) YTCracker - #antisec
-09) Copy Your Idols - What If (Ron's Revolution Mix)</description>
-<category>Netlabel Music;7</category>
-<guid>http://www.clearbits.net/torrents/1893-99-anonymous-mixtape-1</guid>
-<pubDate>Thu, 12 Jan 2012 11:07:10 +0000</pubDate>
-<enclosure type="application/x-bittorrent" length="79691776" url="http://www.clearbits.net/get/1893-99-anonymous-mixtape-1.torrent"/>
-<media:thumbnail url="http://www.clearbits.net/upload/image/2771.jpg?type=thumb"/>
-    </item>
-    <item>
-<title>A Dozen Desktops</title>
-<link>http://www.clearbits.net/torrents/1892-a-dozen-desktops</link>
-<description>A (baker's) dozen more desktops.</description>
-<category>Pictures;9</category>
-<guid>http://www.clearbits.net/torrents/1892-a-dozen-desktops</guid>
-<pubDate>Tue, 10 Jan 2012 04:54:44 +0000</pubDate>
-<enclosure type="application/x-bittorrent" length="20971520" url="http://www.clearbits.net/get/1892-a-dozen-desktops.torrent"/>
-<media:thumbnail url="http://www.clearbits.net/upload/image/2766.jpg?type=thumb"/>
-    </item>
-    <item>
-<title>Distant 294 - Microcosmos</title>
-<link>http://www.clearbits.net/torrents/1891-distant-294---microcosmos</link>
-<description>Laidback electronic ambient album by Polish project &lt;a href=&quot;http://soundcloud.com/distant294&quot;&gt;Distant 294&lt;/a&gt;.</description>
-<category>Netlabel Music;7</category>
-<guid>http://www.clearbits.net/torrents/1891-distant-294---microcosmos</guid>
-<pubDate>Mon, 09 Jan 2012 12:46:37 +0000</pubDate>
-<enclosure type="application/x-bittorrent" length="161480704" url="http://www.clearbits.net/get/1891-distant-294---microcosmos.torrent"/>
-<media:thumbnail url="http://www.clearbits.net/upload/image/2764.jpg?type=thumb"/>
-    </item>
-    <item>
-<title>2.0.4 Taste</title>
-<link>http://www.clearbits.net/torrents/1887-204-taste</link>
-<description>What is taste? What is style? Do you have it? Scott and Rob have no idea what it is or how to get it - but they know it's important. In this show they talk to a designer who flexxes his good taste for a living - and a developer who is committed to spreading good taste where he can.* Michael Bach Designer at Microsoft* Geoffrey Grosenbach Owner/Founder of PeepCodeMusicThe music tracks this week are a combination of Fair Use, Royalty-free, and Mashups. * Jeff Buckley - Halleluja* Hymn - Hymn* Nine Inch Nails - Ghosts* Jag - My Momma Told Me* Low and Spring Heel Jack - Hand So Small</description>
-<category>Podcasts;13</category>
-<guid>http://www.clearbits.net/torrents/1887-204-taste</guid>
-<pubDate>Fri, 06 Jan 2012 20:45:05 +0000</pubDate>
-<enclosure type="application/x-bittorrent" length="72351744" url="http://www.clearbits.net/get/1887-204-taste.torrent"/>
-    </item>
-    <item>
-<title>2.0.5 Typo</title>
-<link>http://www.clearbits.net/torrents/1888-205-typo</link>
-<description>Who cares about typefaces and why should you? Well, these guys do and you should start caring. Rob and Scott explore the world of reading online with one of the godfathers in the world of typeface and fonts.* Bill Hill Lover of reading, of typefaces, and co-creator of ClearType* Geoffrey Grosenbach Owner/Founder of PeepCodeMusicThe music tracks this week are a combination of Fair Use, Royalty-free, and Mashups. * Juno Reactor - High Energy Protons* Nine Inch Nails - Ghosts* Trent Reznor and Atticus Ross - Pieces from the Whole* Nine Inch Nails - The Great Collapse (Instrumental)* Calexico - Whipping the Horses Eyes</description>
-<category>Podcasts;13</category>
-<guid>http://www.clearbits.net/torrents/1888-205-typo</guid>
-<pubDate>Fri, 06 Jan 2012 20:37:12 +0000</pubDate>
-<enclosure type="application/x-bittorrent" length="82837504" url="http://www.clearbits.net/get/1888-205-typo.torrent"/>
-    </item>
-    <item>
-<title>2.0.6 Play</title>
-<link>http://www.clearbits.net/torrents/1889-206-play</link>
-<description>What do you do when you're not staring at your computer screen? What obsession grips you as you drive home? In this episode we ask David Heinemeier Hansson and Pete Brown this very question.* David Heinemeier Hansson Creator of Rails and budding Racer X* Pete Brown Senior Project Manager, Microsoft and budding Thomas EdisonMusicThe music tracks this week are a combination of Fair Use, Royalty-free, and Mashups. * Ladytron - Ace of Hz - DJ Tiesto Remix* Nine Inch Nails - Various Remixes of Deep and Perfect Drug* Jerry Berlongieri - Known Bugs* Karftwerk - Pocket Calculator* DJs From Mars - Enter Telephone</description>
-<category>Podcasts;13</category>
-<guid>http://www.clearbits.net/torrents/1889-206-play</guid>
-<pubDate>Fri, 06 Jan 2012 18:58:40 +0000</pubDate>
-<enclosure type="application/x-bittorrent" length="70254592" url="http://www.clearbits.net/get/1889-206-play.torrent"/>
-    </item>
-    <item>
-<title>2.0.7 Dinosaurs</title>
-<link>http://www.clearbits.net/torrents/1890-207-dinosaurs</link>
-<description>You're so old! What a dinosaur! You're using old software and old languages to do old things! Or are you? Scott and Rob talk to David Sokol, Sean Bamforth and Pete Brown about Fortran, DataFlex and the Commodore 64. All these dinosaurs are doing useful work. Or, are they?* David Sokol Fortran Programmer and dude with an AWESOME hover state on his home page* Sean Bamforth Former Dataflex programmer and now beginning .NET guru* Pete Brown Senior Project Manager, Microsoft and budding Thomas EdisonMusicThe music tracks this week are all Creative Commons from SoundCloud and most are less than 10 seconds.* djpenegre - Ibiza Sunrise 2* MattyBlades - Midi Blues* ~djrain~ - Ladies of the 80s Retro Mix* mrevaaaaa - The Cogs Are Spinnin'* WenzelRanch - Happy Feed Midi Jam* AlexDaniels - Zimbabwe* Lucent Zoom - 1764* Lucent Zoom - Irish Song* MIDI Controller - 'Xactly* BDarner2 - 6Death of New Age* The Apex - An Azure Night</description>
-<category>Podcasts;13</category>
-<guid>http://www.clearbits.net/torrents/1890-207-dinosaurs</guid>
-<pubDate>Thu, 05 Jan 2012 21:19:49 +0000</pubDate>
-<enclosure type="application/x-bittorrent" length="81788928" url="http://www.clearbits.net/get/1890-207-dinosaurs.torrent"/>
-    </item>
-    <item>
-<title>Episode 1_ Death of a Doctor</title>
-<link>http://www.clearbits.net/torrents/1886-episode-1_-death-of-a-doctor</link>
-<description>A renown physicist commits suicide. . . or does he? Again journalist John Webster must solve the mystery which involves the United Nations and a large oil company.   </description>
-<category>Books;3</category>
-<guid>http://www.clearbits.net/torrents/1886-episode-1_-death-of-a-doctor</guid>
-<pubDate>Fri, 30 Dec 2011 19:29:29 +0000</pubDate>
-<enclosure type="application/x-bittorrent" length="0" url="http://www.clearbits.net/get/1886-episode-1_-death-of-a-doctor.torrent"/>
-    </item>
-    <item>
-<title>Dec 2011 [Update 2]</title>
-<link>http://www.clearbits.net/torrents/1885-dec-2011-update-2</link>
-<description>Anonymized data dump of all creative commons questions and answers from the Stack Exchange family of websites at http://stackexchange.com/sites . XML format, 7zipped, released every 3 monthsThe following sites where previously cut off in the upload - here is an update:bicyclesdatabase administratorsdrupalit securityphysicstex/latextheoretical computer scienceunix and linuxweb applicationswebmasterswordpress</description>
-<category>Other;10</category>
-<guid>http://www.clearbits.net/torrents/1885-dec-2011-update-2</guid>
-<pubDate>Wed, 21 Dec 2011 07:49:01 +0000</pubDate>
-<enclosure type="application/x-bittorrent" length="297795584" url="http://www.clearbits.net/get/1885-dec-2011-update-2.torrent"/>
-    </item>
-    <item>
-<title>Dec 2011 [Update]</title>
-<link>http://www.clearbits.net/torrents/1884-dec-2011-update</link>
-<description>Anonymized data dump of all creative commons questions and answers from the Stack Exchange family of websites at http://stackexchange.com/sites . XML format, 7zipped, released every 3 months</description>
-<category>Other;10</category>
-<guid>http://www.clearbits.net/torrents/1884-dec-2011-update</guid>
-<pubDate>Tue, 20 Dec 2011 22:18:20 +0000</pubDate>
-<enclosure type="application/x-bittorrent" length="163577856" url="http://www.clearbits.net/get/1884-dec-2011-update.torrent"/>
-    </item>
-    <item>
-<title>Greatest Memories</title>
-<link>http://www.clearbits.net/torrents/1883-greatest-memories</link>
-<description>Greatest Memories is the latest Album recorded in 2011.</description>
-<category>Music;6</category>
-<guid>http://www.clearbits.net/torrents/1883-greatest-memories</guid>
-<pubDate>Tue, 20 Dec 2011 08:35:15 +0000</pubDate>
-<enclosure type="application/x-bittorrent" length="100663296" url="http://www.clearbits.net/get/1883-greatest-memories.torrent"/>
-<media:thumbnail url="http://www.clearbits.net/upload/image/2756.jpg?type=thumb"/>
-    </item>
-    <item>
-<title>No Loli-gagging - The Floor is Now Lava</title>
-<link>http://www.clearbits.net/torrents/1882-no-loli-gagging---the-floor-is-now-lava</link>
-<description>Lolicore album by US project No Loli-Gagging. Mixing influences from hardcore, breakcore, speedcore, gabber, trance, drum n bass, techno, house, noise and even ambient. All with the usual heavy dosage of high pitched lolita vocals and abrupt track endings.</description>
-<category>Netlabel Music;7</category>
-<guid>http://www.clearbits.net/torrents/1882-no-loli-gagging---the-floor-is-now-lava</guid>
-<pubDate>Fri, 16 Dec 2011 11:26:33 +0000</pubDate>
-<enclosure type="application/x-bittorrent" length="47185920" url="http://www.clearbits.net/get/1882-no-loli-gagging---the-floor-is-now-lava.torrent"/>
-<media:thumbnail url="http://www.clearbits.net/upload/image/2752.jpg?type=thumb"/>
-    </item>
-    <item>
-<title>Dec 2011</title>
-<link>http://www.clearbits.net/torrents/1881-dec-2011</link>
-<description>Anonymized data dump of all creative commons questions and answers from the Stack Exchange family of websites at http://stackexchange.com/sites . XML format, 7zipped, released every 3 months</description>
-<category>Other;10</category>
-<guid>http://www.clearbits.net/torrents/1881-dec-2011</guid>
-<pubDate>Tue, 13 Dec 2011 09:19:21 +0000</pubDate>
-<enclosure type="application/x-bittorrent" length="5239734272" url="http://www.clearbits.net/get/1881-dec-2011.torrent"/>
-    </item>
-    <item>
-<title>Edgeist - Landscapes</title>
-<link>http://www.clearbits.net/torrents/1880-edgeist---landscapes</link>
-<description>Rhythmic noise EP by French project &lt;a href=&quot;http://www.edgeist.net/&quot;&gt;Edgeist&lt;/a&gt;.</description>
-<category>Netlabel Music;7</category>
-<guid>http://www.clearbits.net/torrents/1880-edgeist---landscapes</guid>
-<pubDate>Thu, 08 Dec 2011 15:45:35 +0000</pubDate>
-<enclosure type="application/x-bittorrent" length="31457280" url="http://www.clearbits.net/get/1880-edgeist---landscapes.torrent"/>
-<media:thumbnail url="http://www.clearbits.net/upload/image/2745.jpg?type=thumb"/>
-    </item>
-    <item>
-<title>Cityscapes by David Gutierrez - Windows Theme</title>
-<link>http://www.clearbits.net/torrents/1879-cityscapes-by-david-gutierrez---windows-theme</link>
-<description>The theme features great cityscapes, created by photographer David Gutierrez. It is distributed in three files, for the most common aspect ratios and resolutions:
-4:3 Aspect Ratio Resolutions: 1600x1200, 1280x960, 1152x864, 1024x768.
-16:9 Aspect Ratio Resolutions: 1920x1080, 1600x900, 1366x768, 1360x768.
-16:10 Aspect Ratio Resolutions: 1920x1200, 1680x1050, 1440x900, 1280x800.
-&lt;strong&gt;Copyright: David Gutierrez. If you want to use the pictures included in this theme otherwise than as you desktop backgrounds, you need written permission from their author.&lt;/strong&gt;</description>
-<category>Other;10</category>
-<guid>http://www.clearbits.net/torrents/1879-cityscapes-by-david-gutierrez---windows-theme</guid>
-<pubDate>Thu, 08 Dec 2011 12:14:42 +0000</pubDate>
-<enclosure type="application/x-bittorrent" length="38797312" url="http://www.clearbits.net/get/1879-cityscapes-by-david-gutierrez---windows-theme.torrent"/>
-<media:thumbnail url="http://www.clearbits.net/upload/image/2744.jpg?type=thumb"/>
-    </item>
-    <item>
-<title>Richard Stallman in London</title>
-<link>http://www.clearbits.net/torrents/1877-richard-stallman-in-london</link>
-<description>READMEThis torrent contains a lecture hosted by the Open Rights Group. 'A Free Digital Society' with Richard Stallman comes in eight parts:1. On Surveillance2. On Censorship3. On DRM4. On Free and Non-Free Software5. On Servers6. On e-Voting7. The War on Sharing8. On Rights and Sufferance Filmed and edited by Mia Eley and Habib Kadiri. This work is licensed under a Creative Commons Attribution-NoDerivs 3.0 Unported License</description>
-<category>Short Form Video;12</category>
-<guid>http://www.clearbits.net/torrents/1877-richard-stallman-in-london</guid>
-<pubDate>Fri, 02 Dec 2011 19:43:15 +0000</pubDate>
-<enclosure type="application/x-bittorrent" length="967835648" url="http://www.clearbits.net/get/1877-richard-stallman-in-london.torrent"/>
-    </item>
-    <item>
-<title>Trollhead - Trolls in Dub</title>
-<link>http://www.clearbits.net/torrents/1874-trollhead---trolls-in-dub</link>
-<description>Dubstep 4 track plate EP by &lt;a href=&quot;http://myspace.com/trollheadd&quot;&gt;Trollhead&lt;/a&gt;, a collaborative project between David Deschuyteneer (aka Ronny Ragtroll) and Jan Robbe (aka Atomhead).</description>
-<category>Netlabel Music;7</category>
-<guid>http://www.clearbits.net/torrents/1874-trollhead---trolls-in-dub</guid>
-<pubDate>Thu, 24 Nov 2011 07:35:07 +0000</pubDate>
-<enclosure type="application/x-bittorrent" length="34603008" url="http://www.clearbits.net/get/1874-trollhead---trolls-in-dub.torrent"/>
-<media:thumbnail url="http://www.clearbits.net/upload/image/2738.jpg?type=thumb"/>
-    </item>
-    <item>
-<title>Dead Island Theme for Windows 7</title>
-<link>http://www.clearbits.net/torrents/1873-dead-island-theme-for-windows-7</link>
-<description>The theme includes sounds from the official Dead Island soundtrack and high resolution wallpapers.
-The theme is distributed in three files, for the most common aspect ratios and resolutions:
-4:3 Aspect Ratio Resolutions: 1600x1200, 1280x960, 1152x864, 1024x768.
-16:9 Aspect Ratio Resolutions: 1920x1080, 1600x900, 1366x768, 1360x768.
-16:10 Aspect Ratio Resolutions: 1920x1200, 1680x1050, 1440x900, 1280x800.</description>
-<category>Other;10</category>
-<guid>http://www.clearbits.net/torrents/1873-dead-island-theme-for-windows-7</guid>
-<pubDate>Thu, 17 Nov 2011 11:20:35 +0000</pubDate>
-<enclosure type="application/x-bittorrent" length="9437184" url="http://www.clearbits.net/get/1873-dead-island-theme-for-windows-7.torrent"/>
-<media:thumbnail url="http://www.clearbits.net/upload/image/2735.jpg?type=thumb"/>
-    </item>
-    <item>
-<title>All The Empires Of The World - Return</title>
-<link>http://www.clearbits.net/torrents/1872-all-the-empires-of-the-world---return</link>
-<description>All the Empires of the World return with a work of staggering ambition and scope. Taking their familiar desert-doom vibe and supplementing it with some furious chug, a drum machine borrowed from Streetcleaner-era Godflesh and blackened vocals, Return oscillates between extremes of tenderness and brutality. It's the mark of a band supremely confident in their abilities who remain eager to stake out new territory.With an atmosphere of surreal violence that flirts with the sublime it brings to mind the films of Jodorowsky and the darker moments of Iain M. Banks' novels, whilst musical comparisons can be drawn with Cult of Luna, Grails, Pelican and - in its quieter moments - Six Organs of Admittance. We know of few bands who push at generic conventions so compellingly and are overwhelmingly proud to be releasing this to the world.Must be listened to loud.</description>
-<category>Music;6</category>
-<guid>http://www.clearbits.net/torrents/1872-all-the-empires-of-the-world---return</guid>
-<pubDate>Sat, 12 Nov 2011 20:35:58 +0000</pubDate>
-<enclosure type="application/x-bittorrent" length="98566144" url="http://www.clearbits.net/get/1872-all-the-empires-of-the-world---return.torrent"/>
-    </item>
-    <item>
-<title>090 - Pie Are Squared - Hungover in Siberia</title>
-<link>http://www.clearbits.net/torrents/1871-090---pie-are-squared---hungover-in-siberia</link>
-<description>(Hungover in) Siberia is Pie Are Squared's third release and the first part of an ongoing trilogy; a venturesomely bold series of interrelated recordings. (Hungover in) Siberia plays as one long-form composition that is constructed with deliberate melodrama to pay homage to a plethora of human emotions, partly inspired by the seemingly infinite Siberian landscapes. Autobiographical in nature, the music expresses the protagonist's loneliness and longing to rejuvenate his soul and assuage his mind, and his journey through his own personal looking-glass into a hallucinatory world.download in .flac and other formats at http://piearesquared.bandcamp.com/album/hungover-in-siberiahttp://lostchildrennetlabel.com</description>
-<category>Netlabel Music;7</category>
-<guid>http://www.clearbits.net/torrents/1871-090---pie-are-squared---hungover-in-siberia</guid>
-<pubDate>Fri, 11 Nov 2011 23:02:11 +0000</pubDate>
-<enclosure type="application/x-bittorrent" length="95420416" url="http://www.clearbits.net/get/1871-090---pie-are-squared---hungover-in-siberia.torrent"/>
-    </item>
-    <item>
-<title>Now That's What I Call General Midi Exclamation Mark</title>
-<link>http://www.clearbits.net/torrents/1870-now-thats-what-i-call-general-midi-exclamation-mark</link>
-<description>Digital Album  Immediate download of 25-track album in your choice of MP3 320, FLAC, or just about any other format you could possibly desire. Buy Now  name your price Share / Embed	1.	the l train is for lovers (free)  02:35 			2.	okme3 (free)  01:49 			3.	drumming (free)  03:02 			4.	noooo (free)  01:16 			5.	momonene (free)  02:17 			6.	barkydoodle (free)  02:13 			7.	dixieblarghnd (free)  02:52 			8.	pound (free)  02:39 			9.	the drags theme (free)  01:50 			10.	toms (free)  00:39 			11.	slicing (free)  01:46 			12.	mt32moo (free)  02:26 			13.	dumzdumz (free)  03:21 			14.	ain't nobody home (free)  02:34 			15.	wienie (free)  02:10 			16.	guuuom (free)  02:14 			17.	mt32songy2 (free)  00:59 			18.	xgeew (free)  01:56 			19.	rock n bowl (free)  02:38 			20.	awesometon (free)  02:29 			21.	funky organ song (free)  02:32 			22.	funkbird (free)  02:16 			23.	groovytyem (free)  02:03 			24.	mt32drum (free)  02:57 		aboutFREE DOWNLOAD JUST CLICK BUY NOW AND TYPE IN 0.credits released 09 November 2011 tags tags: crunk free general midi midi mt32 twee folk New York licenseSome rights reserved feed Feeds for this album, this artist</description>
-<category>Music;6</category>
-<guid>http://www.clearbits.net/torrents/1870-now-thats-what-i-call-general-midi-exclamation-mark</guid>
-<pubDate>Thu, 10 Nov 2011 09:59:00 +0000</pubDate>
-<enclosure type="application/x-bittorrent" length="80740352" url="http://www.clearbits.net/get/1870-now-thats-what-i-call-general-midi-exclamation-mark.torrent"/>
-<media:thumbnail url="http://www.clearbits.net/upload/image/2731.jpg?type=thumb"/>
-    </item>
-    <item>
-<title>The Picture of Dorian Gray  by  Oscar Wilde - A Librivox Audio Book</title>
-<link>http://www.clearbits.net/torrents/1869-the-picture-of-dorian-gray-by-oscar-wilde---a-librivox-audio-book</link>
-<description>The novel tells of a young man named Dorian Gray, the subject of a painting by artist Basil Hallward. Basil is impressed by Dorian's beauty and becomes infatuated with him, believing his beauty is responsible for a new mode in his art. Dorian meets Lord Henry Wotton, a friend of Basil's, and becomes enthralled by Lord Henry's world view. Espousing a new hedonism, Lord Henry suggests the only things worth pursuing in life are beauty and fulfillment of the senses. Realizing that one day his beauty will fade, Dorian expresses his desire to sell his soul to ensure the portrait Basil has painted would age rather than himself. Dorian's wish is fulfilled, plunging him into debauched acts. The portrait serves as a reminder of the effect each act has upon his soul, with each sin displayed as a disfigurement of his form, or through a sign of aging. This reading uses the 20-chapter 1891 version of Wilde's novel. (Summary by Wikipedia)
-
-This is a no rights reserved audio book read by volunteers from librivox.org. Librivox uses public domain text so their works are completely legal. They work closely with Project Gutenberg to provide great literature to the world for free. Many additional electronic books can be found at gutenberg.org. Gutenberg books are offered in a vanilla text format.</description>
-<category>Audio Books;2</category>
-<guid>http://www.clearbits.net/torrents/1869-the-picture-of-dorian-gray-by-oscar-wilde---a-librivox-audio-book</guid>
-<pubDate>Sun, 06 Nov 2011 03:38:50 +0000</pubDate>
-<enclosure type="application/x-bittorrent" length="273678336" url="http://www.clearbits.net/get/1869-the-picture-of-dorian-gray-by-oscar-wilde---a-librivox-audio-book.torrent"/>
-<media:thumbnail url="http://www.clearbits.net/upload/image/2730.jpg?type=thumb"/>
-    </item>
-    <item>
-<title>Peace On Earth, Good-Will To Dogs  by Eleanor Hallowell Abbott  - A Librivox Audio Book</title>
-<link>http://www.clearbits.net/torrents/1868-peace-on-earth-good-will-to-dogs-by-eleanor-hallowell-abbott---a-librivox-audio-book</link>
-<description>&quot;If you don't like Christmas stories, don't read this one!
-
-And if you don't like dogs I don't know just what to advise you to do!
-
-For I warn you perfectly frankly that I am distinctly pro-dog and distinctly pro-Christmas, and would like to bring to this little story whatever whiff of fir-balsam I can cajole from the make-believe forest in my typewriter, and every glitter of tinsel, smudge of toy candle, crackle of wrapping paper, that my particular brand of brain and ink can conjure up on a single keyboard! And very large-sized dogs shall romp through every page! And the mercury shiver perpetually in the vicinity of zero! And every foot of earth be crusty-brown and bare with no white snow at all till the very last moment when you'd just about given up hope! And all the heart of the story is very,-oh very young!
-
-This is a no rights reserved audio book read by volunteers from librivox.org. Librivox uses public domain text so their works are completely legal. They work closely with Project Gutenberg to provide great literature to the world for free. Many additional electronic books can be found at gutenberg.org. Gutenberg books are offered in a vanilla text format.</description>
-<category>Audio Books;2</category>
-<guid>http://www.clearbits.net/torrents/1868-peace-on-earth-good-will-to-dogs-by-eleanor-hallowell-abbott---a-librivox-audio-book</guid>
-<pubDate>Sat, 05 Nov 2011 21:51:49 +0000</pubDate>
-<enclosure type="application/x-bittorrent" length="54525952" url="http://www.clearbits.net/get/1868-peace-on-earth-good-will-to-dogs-by-eleanor-hallowell-abbott---a-librivox-audio-book.torrent"/>
-<media:thumbnail url="http://www.clearbits.net/upload/image/2729.jpg?type=thumb"/>
-    </item>
-    <item>
-<title>A Christmas Carol  -  A Ghost Story of Christmas, by Charles Dickens  - A Librivox Audio Book</title>
-<link>http://www.clearbits.net/torrents/1867-a-christmas-carol---a-ghost-story-of-christmas-by-charles-dickens---a-librivox-audio-book</link>
-<description>A Christmas Carol (full title: A Christmas Carol in Prose, Being a Ghost Story of Christmas) is a Victorian morality tale of an old and bitter miser, Ebenezer Scrooge, who undergoes a profound experience of redemption over the course of one evening. (Wikipedia)
-
-This is a no rights reserved audio book read by volunteers from librivox.org. Librivox uses public domain text so their works are completely legal. They work closely with Project Gutenberg to provide great literature to the world for free. Many additional electronic books can be found at gutenberg.org. Gutenberg books are offered in a vanilla text format.</description>
-<category>Audio Books;2</category>
-<guid>http://www.clearbits.net/torrents/1867-a-christmas-carol---a-ghost-story-of-christmas-by-charles-dickens---a-librivox-audio-book</guid>
-<pubDate>Sat, 05 Nov 2011 19:26:00 +0000</pubDate>
-<enclosure type="application/x-bittorrent" length="77594624" url="http://www.clearbits.net/get/1867-a-christmas-carol---a-ghost-story-of-christmas-by-charles-dickens---a-librivox-audio-book.torrent"/>
-<media:thumbnail url="http://www.clearbits.net/upload/image/2728.jpg?type=thumb"/>
-    </item>
-    <item>
-<title>Mons Jacet - Endpieces</title>
-<link>http://www.clearbits.net/torrents/1866-mons-jacet---endpieces</link>
-<description>Double album of experimental laidback electronic ambient exploring different genres and moods from Lithuanian project Mons Jacet.</description>
-<category>Netlabel Music;7</category>
-<guid>http://www.clearbits.net/torrents/1866-mons-jacet---endpieces</guid>
-<pubDate>Fri, 04 Nov 2011 07:10:07 +0000</pubDate>
-<enclosure type="application/x-bittorrent" length="218103808" url="http://www.clearbits.net/get/1866-mons-jacet---endpieces.torrent"/>
-<media:thumbnail url="http://www.clearbits.net/upload/image/2726.jpg?type=thumb"/>
-    </item>
-    <item>
-<title>Pathagar - SheevaPlug edition v0.01</title>
-<link>http://www.clearbits.net/torrents/1865-pathagar---sheevaplug-edition-v001</link>
-<description>
-
-This image is a ready-to-go image that can be bitcopied using dd to a 2GB or greater USB stick, and plugged into a off-the-shelf SheevaPlug to run a Pathagar Book Server. &lt;/p&gt;
-
-dd if=pathagar-sheevaplug-0.01.img of=/dev/sdb &lt;/p&gt;
-
-where sdb is your USB Stick. This process will create a boot partition, a root partition and a swap partition on the USB Stick.&lt;/p&gt;
-
-The image is a Debian Squeeze image for ARM with Apache, sqlite, python, and python-django (Pathagar is written atop python-django). The image has two accounts:&lt;/p&gt;&lt;ul&gt;&lt;li&gt; root (password is password. Change it ASAP!)&lt;/li&gt;&lt;li&gt;  bookserver (password is password. Change it ASAP!)&lt;/li&gt;&lt;/ul&gt;
-
-Pathagar runs in the bookserver account and the code sits at /home/bookserver/pathagar. The code we've used for this iteration is git'able from https://github.com/manuq/pathagar&lt;/p&gt;
-
-The image runs a dhcp client, so you'll have to get clever to figure out the IP it gets from your DHCP server. Once running, you can find the book server interface at &lt;youripaddress&gt; running at port 80. To administer Pathagar, go to &lt;youripaddress&gt;/admin and use the account &quot;curator&quot; with password &quot;password&quot; (change it ASAP!) to administer the account.&lt;/youripaddress&gt;&lt;/youripaddress&gt;&lt;/p&gt;</description>
-<category>Other;10</category>
-<guid>http://www.clearbits.net/torrents/1865-pathagar---sheevaplug-edition-v001</guid>
-<pubDate>Thu, 27 Oct 2011 21:22:32 +0000</pubDate>
-<enclosure type="application/x-bittorrent" length="2031091712" url="http://www.clearbits.net/get/1865-pathagar---sheevaplug-edition-v001.torrent"/>
-<media:thumbnail url="http://www.clearbits.net/upload/image/2722.jpg?type=thumb"/>
-    </item>
-    <item>
-<title>Tone_-_Small_Arm_of_Sea_International_edition_2009_PonyRec-Uhrlaut_mp3_album_electronica_alternative</title>
-<link>http://www.clearbits.net/torrents/1864-tone_-_small_arm_of_sea_international_edition_2009_ponyrec-uhrlaut_mp3_album_electronica_alternative</link>
-<description>With her abstract beats, unique voice and hypnotizing lyrics, the female singer, musician and producer Tone is renowned for her both forceful and frail expressions in experimental electronica.On her debut album she shows her great versatility ranging from uplifting vigorous outlets of energy to obscure, melancholic moods. An album released in a new audiovisual format - with an invitation to copy and share freely at no charge!Musically, Tone creates a remarkable audiovisual realm where her light and spellbinding voice adds to a bedrock of crunchy break beats, abstract compositional structures and catchy melodies. Not being a typical songwriter in terms of clinging to the usage of the traditionalstructure of verses and choruses, Tone relies on improvisation and creative exploration in the creation of her unpredictable musical landscapes - while adding daunting, yet compelling lyrics - and thereby drawing listeners into her musical and atmospheric universe of thoughts, sounds and a myriad of emotional expressions.This is the international version of the album, released by PonyRec in 2009.The original album (same content) was released by Uhrlaut/Urlyd Records in 2008.</description>
-<category>Music;6</category>
-<guid>http://www.clearbits.net/torrents/1864-tone_-_small_arm_of_sea_international_edition_2009_ponyrec-uhrlaut_mp3_album_electronica_alternative</guid>
-<pubDate>Tue, 25 Oct 2011 09:02:20 +0000</pubDate>
-<enclosure type="application/x-bittorrent" length="50331648" url="http://www.clearbits.net/get/1864-tone_-_small_arm_of_sea_international_edition_2009_ponyrec-uhrlaut_mp3_album_electronica_alternative.torrent"/>
-    </item>
-    <item>
-<title>Kiloton_-_Language_Lost_2010_Uhrlaut_mp3_album_electronica_alternative</title>
-<link>http://www.clearbits.net/torrents/1863-kiloton_-_language_lost_2010_uhrlaut_mp3_album_electronica_alternative</link>
-<description>In a small apartment on the northern shores of Denmark sits electronica-artist Kiloton. Surrounded by computers, sound modules and various electronics he concentrated leans over a small short wave receiver.Distorted fractions of radio signals and static from all over the globe resonate into the room from the little box and mix with deep electronic reverberations from Kiloton's own sound systems. A sound with distinct reference to the instrumental dub-music of Jamaica, but in a more brisk Scandinavian version, which in interplay with the crackling sound fragments from the radio receiver creates an emotional expression that communicates without words. An almost lost language - which is now released as an album.For over two years Kiloton have elegantly recorded, edited, manipulated, distorted and modulated the crackling - and globally originating - short wave sound samples to form pieces in the complex, melodic and challenging puzzle that is his musical creativity. Having produced and performed for several years as well as contributed to several releases both domestically and abroad, Kiloton aka. Mads Weitling has now finally releases his solo-debut 'Language Lost', which hit the street on Friday, August 27 2010.An abstract, wordless and dark, yet dreamy album that carries a distinct nordic tone. Characterized by sharp, abrupt rhythms under deep, smouldering and crackling dubscapes, Kiloton has developed an almost cinematic sound that leads its listener through changing moods; beatiful and sincere as well as melancholic and thoughtful.</description>
-<category>Music;6</category>
-<guid>http://www.clearbits.net/torrents/1863-kiloton_-_language_lost_2010_uhrlaut_mp3_album_electronica_alternative</guid>
-<pubDate>Tue, 25 Oct 2011 08:26:14 +0000</pubDate>
-<enclosure type="application/x-bittorrent" length="57671680" url="http://www.clearbits.net/get/1863-kiloton_-_language_lost_2010_uhrlaut_mp3_album_electronica_alternative.torrent"/>
-    </item>
-    <item>
-<title>Tone_Small_Arm_of_Sea_2011_Uhrlaut_mp3_album_electronica_alternative</title>
-<link>http://www.clearbits.net/torrents/1862-tone_small_arm_of_sea_2011_uhrlaut_mp3_album_electronica_alternative</link>
-<description>With her abstract beats, unique voice and hypnotizing lyrics, the female singer, musician and producer Tone is renowned for her both forceful and frail expressions in experimental electronica.On her debut album she shows her great versatility ranging from uplifting vigorous outlets of energy to obscure, melancholic moods. An album released in a new audiovisual format - with an invitation to copy and share freely at no charge!Musically, Tone creates a remarkable audiovisual realm where her light and spellbinding voice adds to a bedrock of crunchy break beats, abstract compositional structures and catchy melodies. Not being a typical songwriter in terms of clinging to the usage of the traditionalstructure of verses and choruses, Tone relies on improvisation and creative exploration in the creation of her unpredictable musical landscapes - while adding daunting, yet compelling lyrics - and thereby drawing listeners into her musical and atmospheric universe of thoughts, sounds and a myriad of emotional expressions.</description>
-<category>Music;6</category>
-<guid>http://www.clearbits.net/torrents/1862-tone_small_arm_of_sea_2011_uhrlaut_mp3_album_electronica_alternative</guid>
-<pubDate>Tue, 25 Oct 2011 08:05:50 +0000</pubDate>
-<enclosure type="application/x-bittorrent" length="46137344" url="http://www.clearbits.net/get/1862-tone_small_arm_of_sea_2011_uhrlaut_mp3_album_electronica_alternative.torrent"/>
-    </item>
-    <item>
-<title>A Thousand Bayonets</title>
-<link>http://www.clearbits.net/torrents/1860-a-thousand-bayonets</link>
-<description>Upon returning from Afghanistan, journalist John Webster discovers a gang war in his backyard. Now he must find a way to survive in this Canadian warzone-or die in the crossfire. John Webster has seen the terrible things human beings can do. He's an experienced investigative journalist, recently returned from the war in Afghanistan. John saw hell over there; he looked death straight in the face. He is glad to be back to the normalcy of his Canadian home-that is, until he realizes there is a war brewing in his own backyard, and &quot;peace&quot; is a word no longer spoken. John gets caught up in the battle between two of the most powerful and murderous criminal gangs in the city. Using what he learned on the foreign battlefields, he stays alive, despite the price on his head. The only way to save his own life is to find the man responsible for the brutal neighborhood bloodshed. When the police slap a subpoena on him, though, John finds his only solace on the streets. Suddenly, John is back in a warzone, fighting for his life. Will he be able to stop the bloodthirsty crime lords? The flashbacks to Afghanistan threaten to pull John into darkness. Soon, the past and present collide, and he can't tell which way is up or down. The need for redemption may be stronger than the need for survival as John Webster finds himself on his most dangerous assignment yet. Visit www.joelmarkharris.com for more details. </description>
-<category>Books;3</category>
-<guid>http://www.clearbits.net/torrents/1860-a-thousand-bayonets</guid>
-<pubDate>Sun, 23 Oct 2011 14:12:56 +0000</pubDate>
-<enclosure type="application/x-bittorrent" length="4194304" url="http://www.clearbits.net/get/1860-a-thousand-bayonets.torrent"/>
-<media:thumbnail url="http://www.clearbits.net/upload/image/2721.jpg?type=thumb"/>
-    </item>
-    <item>
-<title>Atomik Buton v2</title>
-<link>http://www.clearbits.net/torrents/1858-atomik-buton-v2</link>
-<description>nowa wersja rzezby dzwiekowej Atomik Buton</description>
-<category>Music;6</category>
-<guid>http://www.clearbits.net/torrents/1858-atomik-buton-v2</guid>
-<pubDate>Sat, 22 Oct 2011 08:39:05 +0000</pubDate>
-<enclosure type="application/x-bittorrent" length="7340032" url="http://www.clearbits.net/get/1858-atomik-buton-v2.torrent"/>
-    </item>
-    <item>
-<title>Amazing Photography by Steve Coleman - Windows 7 Theme</title>
-<link>http://www.clearbits.net/torrents/1857-amazing-photography-by-steve-coleman---windows-7-theme</link>
-<description>The theme is distributed in three files, for the most common aspect ratios and resolutions:
-4:3 Aspect Ratio Resolutions: 1600x1200, 1280x960, 1152x864, 1024x768.
-16:9 Aspect Ratio Resolutions: 1920x1080, 1600x900, 1366x768, 1360x768.
-16:10 Aspect Ratio Resolutions: 1920x1200, 1680x1050, 1440x900, 1280x800.
-&lt;strong&gt;Copyright: Steve Coleman. If you want to use the pictures included in this theme otherwise than as you desktop backgrounds, you need written permission from their author.&lt;/strong&gt;</description>
-<category>Other;10</category>
-<guid>http://www.clearbits.net/torrents/1857-amazing-photography-by-steve-coleman---windows-7-theme</guid>
-<pubDate>Fri, 21 Oct 2011 12:34:53 +0000</pubDate>
-<enclosure type="application/x-bittorrent" length="84934656" url="http://www.clearbits.net/get/1857-amazing-photography-by-steve-coleman---windows-7-theme.torrent"/>
-<media:thumbnail url="http://www.clearbits.net/upload/image/2792.jpg?type=thumb"/>
-    </item>
-  </channel>
-</rss>
diff -ruN libtorrent-libtorrent_0_16_5/test/eztv.xml libtorrent/test/eztv.xml
--- libtorrent-libtorrent_0_16_5/test/eztv.xml	2012-10-23 12:23:09.000000000 +0800
+++ libtorrent/test/eztv.xml	1970-01-01 08:00:00.000000000 +0800
@@ -1,495 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!DOCTYPE torrent PUBLIC "-//bitTorrent//DTD torrent 0.1//EN" "http://xmlns.ezrss.it/0.1/dtd/">
-<rss version="2.0">
-	<channel>
-		<title>ezRSS - Search Results</title>
-		<ttl>15</ttl>
-		<link>http://ezrss.it/search/index.php?show_name=daily+show&amp;date=&amp;quality=&amp;release_group=&amp;mode=rss</link>
-		<image>
-			<title>ezRSS - Search Results</title>
-			<url>http://ezrss.it/images/ezrssit.png</url>
-			<link>http://ezrss.it/search/index.php?show_name=daily+show&amp;date=&amp;quality=&amp;release_group=&amp;mode=rss</link>
-		</image>
-		<description>Custom RSS feed based off search filters.</description>
-		<item>
-			<title><![CDATA[The Daily Show 2012-02-16 [HDTV - LMAO]]]></title>
-			<link>http://torrent.zoink.it/The.Daily.Show.2012.02.16.(HDTV-LMAO)[VTV].torrent</link>
-			<category domain="http://eztv.it/shows/67/the-daily-show/"><![CDATA[TV Show / The Daily Show]]></category>
-			<pubDate>Thu, 16 Feb 2012 22:54:01 -0500</pubDate>
-			<description><![CDATA[Show Name: The Daily Show; Episode Title: N/A; Episode Date: 2012-02-16]]></description>
-			<enclosure url="http://torrent.zoink.it/The.Daily.Show.2012.02.16.(HDTV-LMAO)[VTV].torrent" length="183442338" type="application/x-bittorrent" />
-			<comments>http://eztv.it/forum/discuss/33253/</comments>
-			<guid>http://eztv.it/ep/33253/the-daily-show-2012-02-16-hdtv-lmao/</guid>
-			<torrent xmlns="http://xmlns.ezrss.it/0.1/">
-				<fileName><![CDATA[The.Daily.Show.2012.02.16.(HDTV-LMAO)[VTV].torrent]]></fileName>
-				<contentLength>183442338</contentLength>
-				<infoHash>1F270E0BCC87575748362788CD5775EFB59C8E1F</infoHash>
-				<magnetURI><![CDATA[magnet:?xt=urn:btih:1F270E0BCC87575748362788CD5775EFB59C8E1F&dn=The.Daily.Show.2012.02.16.(HDTV-LMAO)]]></magnetURI>
-			</torrent>
-		</item>
-		<item>
-			<title><![CDATA[The Daily Show 2012-02-15 [HDTV - FQM]]]></title>
-			<link>http://torrent.zoink.it/The.Daily.Show.2012.02.15.(HDTV-FQM)[VTV].torrent</link>
-			<category domain="http://eztv.it/shows/67/the-daily-show/"><![CDATA[TV Show / The Daily Show]]></category>
-			<pubDate>Wed, 15 Feb 2012 23:13:45 -0500</pubDate>
-			<description><![CDATA[Show Name: The Daily Show; Episode Title: N/A; Episode Date: 2012-02-15]]></description>
-			<enclosure url="http://torrent.zoink.it/The.Daily.Show.2012.02.15.(HDTV-FQM)[VTV].torrent" length="183790660" type="application/x-bittorrent" />
-			<comments>http://eztv.it/forum/discuss/33226/</comments>
-			<guid>http://eztv.it/ep/33226/the-daily-show-2012-02-15-hdtv-fqm/</guid>
-			<torrent xmlns="http://xmlns.ezrss.it/0.1/">
-				<fileName><![CDATA[The.Daily.Show.2012.02.15.(HDTV-FQM)[VTV].torrent]]></fileName>
-				<contentLength>183790660</contentLength>
-				<infoHash>94200845B30F888DD0DFF518F7AA52363A299EF9</infoHash>
-				<magnetURI><![CDATA[magnet:?xt=urn:btih:94200845B30F888DD0DFF518F7AA52363A299EF9&dn=The.Daily.Show.2012.02.15.(HDTV-FQM)]]></magnetURI>
-			</torrent>
-		</item>
-		<item>
-			<title><![CDATA[The Daily Show 2012-02-14 [HDTV - LMAO]]]></title>
-			<link>http://torrent.zoink.it/The.Daily.Show.2012.02.14.(HDTV-LMAO)[VTV].torrent</link>
-			<category domain="http://eztv.it/shows/67/the-daily-show/"><![CDATA[TV Show / The Daily Show]]></category>
-			<pubDate>Wed, 15 Feb 2012 05:47:41 -0500</pubDate>
-			<description><![CDATA[Show Name: The Daily Show; Episode Title: N/A; Episode Date: 2012-02-14]]></description>
-			<enclosure url="http://torrent.zoink.it/The.Daily.Show.2012.02.14.(HDTV-LMAO)[VTV].torrent" length="183465776" type="application/x-bittorrent" />
-			<comments>http://eztv.it/forum/discuss/33199/</comments>
-			<guid>http://eztv.it/ep/33199/the-daily-show-2012-02-14-hdtv-lmao/</guid>
-			<torrent xmlns="http://xmlns.ezrss.it/0.1/">
-				<fileName><![CDATA[The.Daily.Show.2012.02.14.(HDTV-LMAO)[VTV].torrent]]></fileName>
-				<contentLength>183465776</contentLength>
-				<infoHash>3E0F5BA0FBDFEDFEB638454DEC247D319C14CB13</infoHash>
-				<magnetURI><![CDATA[magnet:?xt=urn:btih:3E0F5BA0FBDFEDFEB638454DEC247D319C14CB13&dn=The.Daily.Show.2012.02.14.(HDTV-LMAO)]]></magnetURI>
-			</torrent>
-		</item>
-		<item>
-			<title><![CDATA[The Daily Show 2012-02-13 [HDTV - LMAO]]]></title>
-			<link>http://torrent.zoink.it/The.Daily.Show.2012.02.13.(HDTV-LMAO)[VTV].torrent</link>
-			<category domain="http://eztv.it/shows/67/the-daily-show/"><![CDATA[TV Show / The Daily Show]]></category>
-			<pubDate>Mon, 13 Feb 2012 23:00:34 -0500</pubDate>
-			<description><![CDATA[Show Name: The Daily Show; Episode Title: N/A; Episode Date: 2012-02-13]]></description>
-			<enclosure url="http://torrent.zoink.it/The.Daily.Show.2012.02.13.(HDTV-LMAO)[VTV].torrent" length="183368772" type="application/x-bittorrent" />
-			<comments>http://eztv.it/forum/discuss/33167/</comments>
-			<guid>http://eztv.it/ep/33167/the-daily-show-2012-02-13-hdtv-lmao/</guid>
-			<torrent xmlns="http://xmlns.ezrss.it/0.1/">
-				<fileName><![CDATA[The.Daily.Show.2012.02.13.(HDTV-LMAO)[VTV].torrent]]></fileName>
-				<contentLength>183368772</contentLength>
-				<infoHash>359CA9925C9F909960515624A3683BA3BE67433E</infoHash>
-				<magnetURI><![CDATA[magnet:?xt=urn:btih:359CA9925C9F909960515624A3683BA3BE67433E&dn=The.Daily.Show.2012.02.13.(HDTV-LMAO)]]></magnetURI>
-			</torrent>
-		</item>
-		<item>
-			<title><![CDATA[The Daily Show 2012-02-02 [HDTV - FQM]]]></title>
-			<link>http://torrent.zoink.it/The.Daily.Show.2012.02.02.(HDTV-FQM)[VTV].torrent</link>
-			<category domain="http://eztv.it/shows/67/the-daily-show/"><![CDATA[TV Show / The Daily Show]]></category>
-			<pubDate>Thu, 02 Feb 2012 23:00:19 -0500</pubDate>
-			<description><![CDATA[Show Name: The Daily Show; Episode Title: N/A; Episode Date: 2012-02-02]]></description>
-			<enclosure url="http://torrent.zoink.it/The.Daily.Show.2012.02.02.(HDTV-FQM)[VTV].torrent" length="183596934" type="application/x-bittorrent" />
-			<comments>http://eztv.it/forum/discuss/32893/</comments>
-			<guid>http://eztv.it/ep/32893/the-daily-show-2012-02-02-hdtv-fqm/</guid>
-			<torrent xmlns="http://xmlns.ezrss.it/0.1/">
-				<fileName><![CDATA[The.Daily.Show.2012.02.02.(HDTV-FQM)[VTV].torrent]]></fileName>
-				<contentLength>183596934</contentLength>
-				<infoHash>DD3C4944680D8482C55D4ED6B81F5FDF54C99495</infoHash>
-				<magnetURI><![CDATA[magnet:?xt=urn:btih:DD3C4944680D8482C55D4ED6B81F5FDF54C99495&dn=The.Daily.Show.2012.02.02.(HDTV-FQM)]]></magnetURI>
-			</torrent>
-		</item>
-		<item>
-			<title><![CDATA[The Daily Show 2012-02-01 [HDTV - FQM]]]></title>
-			<link>http://torrent.zoink.it/The.Daily.Show.2012.02.01.(HDTV-FQM)[VTV].torrent</link>
-			<category domain="http://eztv.it/shows/67/the-daily-show/"><![CDATA[TV Show / The Daily Show]]></category>
-			<pubDate>Wed, 01 Feb 2012 23:33:05 -0500</pubDate>
-			<description><![CDATA[Show Name: The Daily Show; Episode Title: N/A; Episode Date: 2012-02-01]]></description>
-			<enclosure url="http://torrent.zoink.it/The.Daily.Show.2012.02.01.(HDTV-FQM)[VTV].torrent" length="183822572" type="application/x-bittorrent" />
-			<comments>http://eztv.it/forum/discuss/32865/</comments>
-			<guid>http://eztv.it/ep/32865/the-daily-show-2012-02-01-hdtv-fqm/</guid>
-			<torrent xmlns="http://xmlns.ezrss.it/0.1/">
-				<fileName><![CDATA[The.Daily.Show.2012.02.01.(HDTV-FQM)[VTV].torrent]]></fileName>
-				<contentLength>183822572</contentLength>
-				<infoHash>11B044DCE5D57E789EF52DEB072CE44F8393C33F</infoHash>
-				<magnetURI><![CDATA[magnet:?xt=urn:btih:11B044DCE5D57E789EF52DEB072CE44F8393C33F&dn=The.Daily.Show.2012.02.01.(HDTV-FQM)]]></magnetURI>
-			</torrent>
-		</item>
-		<item>
-			<title><![CDATA[The Daily Show 2012-01-31 [HDTV - FQM]]]></title>
-			<link>http://torrent.zoink.it/The.Daily.Show.2012.01.31.(HDTV-FQM)[VTV].torrent</link>
-			<category domain="http://eztv.it/shows/67/the-daily-show/"><![CDATA[TV Show / The Daily Show]]></category>
-			<pubDate>Wed, 01 Feb 2012 03:26:52 -0500</pubDate>
-			<description><![CDATA[Show Name: The Daily Show; Episode Title: N/A; Episode Date: 2012-01-31]]></description>
-			<enclosure url="http://torrent.zoink.it/The.Daily.Show.2012.01.31.(HDTV-FQM)[VTV].torrent" length="183766842" type="application/x-bittorrent" />
-			<comments>http://eztv.it/forum/discuss/32848/</comments>
-			<guid>http://eztv.it/ep/32848/the-daily-show-2012-01-31-hdtv-fqm/</guid>
-			<torrent xmlns="http://xmlns.ezrss.it/0.1/">
-				<fileName><![CDATA[The.Daily.Show.2012.01.31.(HDTV-FQM)[VTV].torrent]]></fileName>
-				<contentLength>183766842</contentLength>
-				<infoHash>2EE6F1DE03D1867E3CD787014407495B27966FC2</infoHash>
-				<magnetURI><![CDATA[magnet:?xt=urn:btih:2EE6F1DE03D1867E3CD787014407495B27966FC2&dn=The.Daily.Show.2012.01.31.(HDTV-FQM)]]></magnetURI>
-			</torrent>
-		</item>
-		<item>
-			<title><![CDATA[The Daily Show 2012-01-30 [HDTV - FQM]]]></title>
-			<link>http://torrent.zoink.it/The.Daily.Show.2012.01.30.(HDTV-FQM)[VTV].torrent</link>
-			<category domain="http://eztv.it/shows/67/the-daily-show/"><![CDATA[TV Show / The Daily Show]]></category>
-			<pubDate>Mon, 30 Jan 2012 22:57:47 -0500</pubDate>
-			<description><![CDATA[Show Name: The Daily Show; Episode Title: N/A; Episode Date: 2012-01-30]]></description>
-			<enclosure url="http://torrent.zoink.it/The.Daily.Show.2012.01.30.(HDTV-FQM)[VTV].torrent" length="183454500" type="application/x-bittorrent" />
-			<comments>http://eztv.it/forum/discuss/32816/</comments>
-			<guid>http://eztv.it/ep/32816/the-daily-show-2012-01-30-hdtv-fqm/</guid>
-			<torrent xmlns="http://xmlns.ezrss.it/0.1/">
-				<fileName><![CDATA[The.Daily.Show.2012.01.30.(HDTV-FQM)[VTV].torrent]]></fileName>
-				<contentLength>183454500</contentLength>
-				<infoHash>CCA7A03A46466A6482E1AA1D64B8E3DCE143B416</infoHash>
-				<magnetURI><![CDATA[magnet:?xt=urn:btih:CCA7A03A46466A6482E1AA1D64B8E3DCE143B416&dn=The.Daily.Show.2012.01.30.(HDTV-FQM)]]></magnetURI>
-			</torrent>
-		</item>
-		<item>
-			<title><![CDATA[The Daily Show 2012-01-26 [HDTV - FQM]]]></title>
-			<link>http://torrent.zoink.it/The.Daily.Show.2012.01.26.(HDTV-FQM)[VTV].torrent</link>
-			<category domain="http://eztv.it/shows/67/the-daily-show/"><![CDATA[TV Show / The Daily Show]]></category>
-			<pubDate>Fri, 27 Jan 2012 00:27:55 -0500</pubDate>
-			<description><![CDATA[Show Name: The Daily Show; Episode Title: N/A; Episode Date: 2012-01-26]]></description>
-			<enclosure url="http://torrent.zoink.it/The.Daily.Show.2012.01.26.(HDTV-FQM)[VTV].torrent" length="183768000" type="application/x-bittorrent" />
-			<comments>http://eztv.it/forum/discuss/32730/</comments>
-			<guid>http://eztv.it/ep/32730/the-daily-show-2012-01-26-hdtv-fqm/</guid>
-			<torrent xmlns="http://xmlns.ezrss.it/0.1/">
-				<fileName><![CDATA[The.Daily.Show.2012.01.26.(HDTV-FQM)[VTV].torrent]]></fileName>
-				<contentLength>183768000</contentLength>
-				<infoHash>1EB38A1120D6071656F9BF919CEB5194E2EBED0B</infoHash>
-				<magnetURI><![CDATA[magnet:?xt=urn:btih:1EB38A1120D6071656F9BF919CEB5194E2EBED0B&dn=The.Daily.Show.2012.01.26.(HDTV-FQM)]]></magnetURI>
-			</torrent>
-		</item>
-		<item>
-			<title><![CDATA[The Daily Show 2012-01-24 [HDTV - FQM]]]></title>
-			<link>http://torrent.zoink.it/The.Daily.Show.2012.01.24.(HDTV-F.QM)[VTV].torrent</link>
-			<category domain="http://eztv.it/shows/67/the-daily-show/"><![CDATA[TV Show / The Daily Show]]></category>
-			<pubDate>Wed, 25 Jan 2012 05:32:35 -0500</pubDate>
-			<description><![CDATA[Show Name: The Daily Show; Episode Title: N/A; Episode Date: 2012-01-24]]></description>
-			<enclosure url="http://torrent.zoink.it/The.Daily.Show.2012.01.24.(HDTV-F.QM)[VTV].torrent" length="183380054" type="application/x-bittorrent" />
-			<comments>http://eztv.it/forum/discuss/32686/</comments>
-			<guid>http://eztv.it/ep/32686/the-daily-show-2012-01-24-hdtv-f-qm/</guid>
-			<torrent xmlns="http://xmlns.ezrss.it/0.1/">
-				<fileName><![CDATA[The.Daily.Show.2012.01.24.(HDTV-F.QM)[VTV].torrent]]></fileName>
-				<contentLength>183380054</contentLength>
-				<infoHash>C09C23F16673B4141FA23815B92C05331336FE46</infoHash>
-				<magnetURI><![CDATA[magnet:?xt=urn:btih:C09C23F16673B4141FA23815B92C05331336FE46&dn=The.Daily.Show.2012.01.24.(HDTV-F.QM)]]></magnetURI>
-			</torrent>
-		</item>
-		<item>
-			<title><![CDATA[The Daily Show 2012-01-23 [HDTV - FQM]]]></title>
-			<link>http://torrent.zoink.it/The.Daily.Show.2012.01.23.(HDTV-FQM)[VTV].torrent</link>
-			<category domain="http://eztv.it/shows/67/the-daily-show/"><![CDATA[TV Show / The Daily Show]]></category>
-			<pubDate>Mon, 23 Jan 2012 23:16:14 -0500</pubDate>
-			<description><![CDATA[Show Name: The Daily Show; Episode Title: N/A; Episode Date: 2012-01-23]]></description>
-			<enclosure url="http://torrent.zoink.it/The.Daily.Show.2012.01.23.(HDTV-FQM)[VTV].torrent" length="183745332" type="application/x-bittorrent" />
-			<comments>http://eztv.it/forum/discuss/32665/</comments>
-			<guid>http://eztv.it/ep/32665/the-daily-show-2012-01-23-hdtv-fqm/</guid>
-			<torrent xmlns="http://xmlns.ezrss.it/0.1/">
-				<fileName><![CDATA[The.Daily.Show.2012.01.23.(HDTV-FQM)[VTV].torrent]]></fileName>
-				<contentLength>183745332</contentLength>
-				<infoHash>7EA19BB02266EFCD74FA3B35DE6EC938DF977A06</infoHash>
-				<magnetURI><![CDATA[magnet:?xt=urn:btih:7EA19BB02266EFCD74FA3B35DE6EC938DF977A06&dn=The.Daily.Show.2012.01.23.(HDTV-FQM)]]></magnetURI>
-			</torrent>
-		</item>
-		<item>
-			<title><![CDATA[The Daily Show 2012-01-19 [HDTV - FQM]]]></title>
-			<link>http://torrent.zoink.it/The.Daily.Show.2012.01.19.(HDTV-FQM)[VTV].torrent</link>
-			<category domain="http://eztv.it/shows/67/the-daily-show/"><![CDATA[TV Show / The Daily Show]]></category>
-			<pubDate>Thu, 19 Jan 2012 23:24:16 -0500</pubDate>
-			<description><![CDATA[Show Name: The Daily Show; Episode Title: N/A; Episode Date: 2012-01-19]]></description>
-			<enclosure url="http://torrent.zoink.it/The.Daily.Show.2012.01.19.(HDTV-FQM)[VTV].torrent" length="183761888" type="application/x-bittorrent" />
-			<comments>http://eztv.it/forum/discuss/32583/</comments>
-			<guid>http://eztv.it/ep/32583/the-daily-show-2012-01-19-hdtv-fqm/</guid>
-			<torrent xmlns="http://xmlns.ezrss.it/0.1/">
-				<fileName><![CDATA[The.Daily.Show.2012.01.19.(HDTV-FQM)[VTV].torrent]]></fileName>
-				<contentLength>183761888</contentLength>
-				<infoHash>4EAAC160B43E6017D06016A97AC90776056EEA7E</infoHash>
-				<magnetURI><![CDATA[magnet:?xt=urn:btih:4EAAC160B43E6017D06016A97AC90776056EEA7E&dn=The.Daily.Show.2012.01.19.(HDTV-FQM)]]></magnetURI>
-			</torrent>
-		</item>
-		<item>
-			<title><![CDATA[The Daily Show 2012-01-18 [HDTV - FQM]]]></title>
-			<link>http://torrent.zoink.it/The.Daily.Show.2012.01.18.(HDTV-FQM)[VTV].torrent</link>
-			<category domain="http://eztv.it/shows/67/the-daily-show/"><![CDATA[TV Show / The Daily Show]]></category>
-			<pubDate>Wed, 18 Jan 2012 23:17:33 -0500</pubDate>
-			<description><![CDATA[Show Name: The Daily Show; Episode Title: N/A; Episode Date: 2012-01-18]]></description>
-			<enclosure url="http://torrent.zoink.it/The.Daily.Show.2012.01.18.(HDTV-FQM)[VTV].torrent" length="183774632" type="application/x-bittorrent" />
-			<comments>http://eztv.it/forum/discuss/32548/</comments>
-			<guid>http://eztv.it/ep/32548/the-daily-show-2012-01-18-hdtv-fqm/</guid>
-			<torrent xmlns="http://xmlns.ezrss.it/0.1/">
-				<fileName><![CDATA[The.Daily.Show.2012.01.18.(HDTV-FQM)[VTV].torrent]]></fileName>
-				<contentLength>183774632</contentLength>
-				<infoHash>DE1273E23CDE05AD720E85844C4CA22C94547A3B</infoHash>
-				<magnetURI><![CDATA[magnet:?xt=urn:btih:DE1273E23CDE05AD720E85844C4CA22C94547A3B&dn=The.Daily.Show.2012.01.18.(HDTV-FQM)]]></magnetURI>
-			</torrent>
-		</item>
-		<item>
-			<title><![CDATA[The Daily Show 2012-01-17 [HDTV - FQM]]]></title>
-			<link>http://torrent.zoink.it/The.Daily.Show.2012.01.17.(HDTV-FQM)[VTV].torrent</link>
-			<category domain="http://eztv.it/shows/67/the-daily-show/"><![CDATA[TV Show / The Daily Show]]></category>
-			<pubDate>Tue, 17 Jan 2012 22:58:07 -0500</pubDate>
-			<description><![CDATA[Show Name: The Daily Show; Episode Title: N/A; Episode Date: 2012-01-17]]></description>
-			<enclosure url="http://torrent.zoink.it/The.Daily.Show.2012.01.17.(HDTV-FQM)[VTV].torrent" length="183371312" type="application/x-bittorrent" />
-			<comments>http://eztv.it/forum/discuss/32512/</comments>
-			<guid>http://eztv.it/ep/32512/the-daily-show-2012-01-17-hdtv-fqm/</guid>
-			<torrent xmlns="http://xmlns.ezrss.it/0.1/">
-				<fileName><![CDATA[The.Daily.Show.2012.01.17.(HDTV-FQM)[VTV].torrent]]></fileName>
-				<contentLength>183371312</contentLength>
-				<infoHash>33AD4A54A1B3CD2E755812A6919AC049122008D7</infoHash>
-				<magnetURI><![CDATA[magnet:?xt=urn:btih:33AD4A54A1B3CD2E755812A6919AC049122008D7&dn=The.Daily.Show.2012.01.17.(HDTV-FQM)]]></magnetURI>
-			</torrent>
-		</item>
-		<item>
-			<title><![CDATA[The Daily Show 2012-01-16 [HDTV - FQM]]]></title>
-			<link>http://torrent.zoink.it/The.Daily.Show.2012.01.16.(HDTV-FQM)[VTV].torrent</link>
-			<category domain="http://eztv.it/shows/67/the-daily-show/"><![CDATA[TV Show / The Daily Show]]></category>
-			<pubDate>Mon, 16 Jan 2012 22:56:30 -0500</pubDate>
-			<description><![CDATA[Show Name: The Daily Show; Episode Title: N/A; Episode Date: 2012-01-16]]></description>
-			<enclosure url="http://torrent.zoink.it/The.Daily.Show.2012.01.16.(HDTV-FQM)[VTV].torrent" length="183722888" type="application/x-bittorrent" />
-			<comments>http://eztv.it/forum/discuss/32484/</comments>
-			<guid>http://eztv.it/ep/32484/the-daily-show-2012-01-16-hdtv-fqm/</guid>
-			<torrent xmlns="http://xmlns.ezrss.it/0.1/">
-				<fileName><![CDATA[The.Daily.Show.2012.01.16.(HDTV-FQM)[VTV].torrent]]></fileName>
-				<contentLength>183722888</contentLength>
-				<infoHash>BF0683C2A18FED9D8C1A24664161DD3725359EA0</infoHash>
-				<magnetURI><![CDATA[magnet:?xt=urn:btih:BF0683C2A18FED9D8C1A24664161DD3725359EA0&dn=The.Daily.Show.2012.01.16.(HDTV-FQM)]]></magnetURI>
-			</torrent>
-		</item>
-		<item>
-			<title><![CDATA[The Daily Show 2012-01-12 [HDTV - FQM]]]></title>
-			<link>http://torrent.zoink.it/The.Daily.Show.2012.01.12.(HDTV-FQM)[VTV].torrent</link>
-			<category domain="http://eztv.it/shows/67/the-daily-show/"><![CDATA[TV Show / The Daily Show]]></category>
-			<pubDate>Thu, 12 Jan 2012 23:01:26 -0500</pubDate>
-			<description><![CDATA[Show Name: The Daily Show; Episode Title: N/A; Episode Date: 2012-01-12]]></description>
-			<enclosure url="http://torrent.zoink.it/The.Daily.Show.2012.01.12.(HDTV-FQM)[VTV].torrent" length="183403284" type="application/x-bittorrent" />
-			<comments>http://eztv.it/forum/discuss/32381/</comments>
-			<guid>http://eztv.it/ep/32381/the-daily-show-2012-01-12-hdtv-fqm/</guid>
-			<torrent xmlns="http://xmlns.ezrss.it/0.1/">
-				<fileName><![CDATA[The.Daily.Show.2012.01.12.(HDTV-FQM)[VTV].torrent]]></fileName>
-				<contentLength>183403284</contentLength>
-				<infoHash>E436508896DF5F7AAB5B3E2B30162150FF382F63</infoHash>
-				<magnetURI><![CDATA[magnet:?xt=urn:btih:E436508896DF5F7AAB5B3E2B30162150FF382F63&dn=The.Daily.Show.2012.01.12.(HDTV-FQM)]]></magnetURI>
-			</torrent>
-		</item>
-		<item>
-			<title><![CDATA[The Daily Show 2012-01-11 [HDTV - FQM]]]></title>
-			<link>http://torrent.zoink.it/The.Daily.Show.2012.01.11.(HDTV-FQM)[VTV].torrent</link>
-			<category domain="http://eztv.it/shows/67/the-daily-show/"><![CDATA[TV Show / The Daily Show]]></category>
-			<pubDate>Wed, 11 Jan 2012 23:12:32 -0500</pubDate>
-			<description><![CDATA[Show Name: The Daily Show; Episode Title: N/A; Episode Date: 2012-01-11]]></description>
-			<enclosure url="http://torrent.zoink.it/The.Daily.Show.2012.01.11.(HDTV-FQM)[VTV].torrent" length="183775414" type="application/x-bittorrent" />
-			<comments>http://eztv.it/forum/discuss/32346/</comments>
-			<guid>http://eztv.it/ep/32346/the-daily-show-2012-01-11-hdtv-fqm/</guid>
-			<torrent xmlns="http://xmlns.ezrss.it/0.1/">
-				<fileName><![CDATA[The.Daily.Show.2012.01.11.(HDTV-FQM)[VTV].torrent]]></fileName>
-				<contentLength>183775414</contentLength>
-				<infoHash>02EF9FBF0E588C1A6C1FE9D6F7EC0DA192BDDEFC</infoHash>
-				<magnetURI><![CDATA[magnet:?xt=urn:btih:02EF9FBF0E588C1A6C1FE9D6F7EC0DA192BDDEFC&dn=The.Daily.Show.2012.01.11.(HDTV-FQM)]]></magnetURI>
-			</torrent>
-		</item>
-		<item>
-			<title><![CDATA[The Daily Show 2012-01-10 [HDTV - FQM]]]></title>
-			<link>http://torrent.zoink.it/The.Daily.Show.2012.01.10.(HDTV-FQM)[VTV].torrent</link>
-			<category domain="http://eztv.it/shows/67/the-daily-show/"><![CDATA[TV Show / The Daily Show]]></category>
-			<pubDate>Tue, 10 Jan 2012 23:47:38 -0500</pubDate>
-			<description><![CDATA[Show Name: The Daily Show; Episode Title: N/A; Episode Date: 2012-01-10]]></description>
-			<enclosure url="http://torrent.zoink.it/The.Daily.Show.2012.01.10.(HDTV-FQM)[VTV].torrent" length="183452822" type="application/x-bittorrent" />
-			<comments>http://eztv.it/forum/discuss/32318/</comments>
-			<guid>http://eztv.it/ep/32318/the-daily-show-2012-01-10-hdtv-fqm/</guid>
-			<torrent xmlns="http://xmlns.ezrss.it/0.1/">
-				<fileName><![CDATA[The.Daily.Show.2012.01.10.(HDTV-FQM)[VTV].torrent]]></fileName>
-				<contentLength>183452822</contentLength>
-				<infoHash>8CB029029BC06A73030F45F129C48D0CF6EBC0A3</infoHash>
-				<magnetURI><![CDATA[magnet:?xt=urn:btih:8CB029029BC06A73030F45F129C48D0CF6EBC0A3&dn=The.Daily.Show.2012.01.10.(HDTV-FQM)]]></magnetURI>
-			</torrent>
-		</item>
-		<item>
-			<title><![CDATA[The Daily Show 2012-01-09 [HDTV - FQM]]]></title>
-			<link>http://torrent.zoink.it/The.Daily.Show.2012.01.09.(HDTV-FQM)[VTV].torrent</link>
-			<category domain="http://eztv.it/shows/67/the-daily-show/"><![CDATA[TV Show / The Daily Show]]></category>
-			<pubDate>Mon, 09 Jan 2012 22:47:39 -0500</pubDate>
-			<description><![CDATA[Show Name: The Daily Show; Episode Title: N/A; Episode Date: 2012-01-09]]></description>
-			<enclosure url="http://torrent.zoink.it/The.Daily.Show.2012.01.09.(HDTV-FQM)[VTV].torrent" length="183756882" type="application/x-bittorrent" />
-			<comments>http://eztv.it/forum/discuss/32290/</comments>
-			<guid>http://eztv.it/ep/32290/the-daily-show-2012-01-09-hdtv-fqm/</guid>
-			<torrent xmlns="http://xmlns.ezrss.it/0.1/">
-				<fileName><![CDATA[The.Daily.Show.2012.01.09.(HDTV-FQM)[VTV].torrent]]></fileName>
-				<contentLength>183756882</contentLength>
-				<infoHash>85E758C44EB0AD542A7B2434DC4D7C3ED2551965</infoHash>
-				<magnetURI><![CDATA[magnet:?xt=urn:btih:85E758C44EB0AD542A7B2434DC4D7C3ED2551965&dn=The.Daily.Show.2012.01.09.(HDTV-FQM)]]></magnetURI>
-			</torrent>
-		</item>
-		<item>
-			<title><![CDATA[The Daily Show 2012-01-05 [HDTV - FQM]]]></title>
-			<link>http://torrent.zoink.it/The.Daily.Show.2012.01.05.(HDTV-FQM)[VTV].torrent</link>
-			<category domain="http://eztv.it/shows/67/the-daily-show/"><![CDATA[TV Show / The Daily Show]]></category>
-			<pubDate>Thu, 05 Jan 2012 22:54:27 -0500</pubDate>
-			<description><![CDATA[Show Name: The Daily Show; Episode Title: N/A; Episode Date: 2012-01-05]]></description>
-			<enclosure url="http://torrent.zoink.it/The.Daily.Show.2012.01.05.(HDTV-FQM)[VTV].torrent" length="183773276" type="application/x-bittorrent" />
-			<comments>http://eztv.it/forum/discuss/32210/</comments>
-			<guid>http://eztv.it/ep/32210/the-daily-show-2012-01-05-hdtv-fqm/</guid>
-			<torrent xmlns="http://xmlns.ezrss.it/0.1/">
-				<fileName><![CDATA[The.Daily.Show.2012.01.05.(HDTV-FQM)[VTV].torrent]]></fileName>
-				<contentLength>183773276</contentLength>
-				<infoHash>B6331AE93524EF5ECA45FFB0CD9E344CD7186D8F</infoHash>
-				<magnetURI><![CDATA[magnet:?xt=urn:btih:B6331AE93524EF5ECA45FFB0CD9E344CD7186D8F&dn=The.Daily.Show.2012.01.05.(HDTV-FQM)]]></magnetURI>
-			</torrent>
-		</item>
-		<item>
-			<title><![CDATA[The Daily Show 2012-01-04 [HDTV - FQM]]]></title>
-			<link>http://torrent.zoink.it/The.Daily.Show.2012.01.04.(HDTV-FQM)[VTV].torrent</link>
-			<category domain="http://eztv.it/shows/67/the-daily-show/"><![CDATA[TV Show / The Daily Show]]></category>
-			<pubDate>Thu, 05 Jan 2012 01:34:53 -0500</pubDate>
-			<description><![CDATA[Show Name: The Daily Show; Episode Title: N/A; Episode Date: 2012-01-04]]></description>
-			<enclosure url="http://torrent.zoink.it/The.Daily.Show.2012.01.04.(HDTV-FQM)[VTV].torrent" length="183765188" type="application/x-bittorrent" />
-			<comments>http://eztv.it/forum/discuss/32183/</comments>
-			<guid>http://eztv.it/ep/32183/the-daily-show-2012-01-04-hdtv-fqm/</guid>
-			<torrent xmlns="http://xmlns.ezrss.it/0.1/">
-				<fileName><![CDATA[The.Daily.Show.2012.01.04.(HDTV-FQM)[VTV].torrent]]></fileName>
-				<contentLength>183765188</contentLength>
-				<infoHash>C6F7ECF1C6A065A4BFDC641092BDFEEDCCEA0CDA</infoHash>
-				<magnetURI><![CDATA[magnet:?xt=urn:btih:C6F7ECF1C6A065A4BFDC641092BDFEEDCCEA0CDA&dn=The.Daily.Show.2012.01.04.(HDTV-FQM)]]></magnetURI>
-			</torrent>
-		</item>
-		<item>
-			<title><![CDATA[The Daily Show 2012-01-03 [HDTV - FQM]]]></title>
-			<link>http://torrent.zoink.it/The.Daily.Show.2012.01.03.(HDTV-FQM)[VTV].torrent</link>
-			<category domain="http://eztv.it/shows/67/the-daily-show/"><![CDATA[TV Show / The Daily Show]]></category>
-			<pubDate>Tue, 03 Jan 2012 23:20:39 -0500</pubDate>
-			<description><![CDATA[Show Name: The Daily Show; Episode Title: N/A; Episode Date: 2012-01-03]]></description>
-			<enclosure url="http://torrent.zoink.it/The.Daily.Show.2012.01.03.(HDTV-FQM)[VTV].torrent" length="183731134" type="application/x-bittorrent" />
-			<comments>http://eztv.it/forum/discuss/32156/</comments>
-			<guid>http://eztv.it/ep/32156/the-daily-show-2012-01-03-hdtv-fqm/</guid>
-			<torrent xmlns="http://xmlns.ezrss.it/0.1/">
-				<fileName><![CDATA[The.Daily.Show.2012.01.03.(HDTV-FQM)[VTV].torrent]]></fileName>
-				<contentLength>183731134</contentLength>
-				<infoHash>72F40FB20F3D26B9FCDE93CD13B55CE190D3096B</infoHash>
-				<magnetURI><![CDATA[magnet:?xt=urn:btih:72F40FB20F3D26B9FCDE93CD13B55CE190D3096B&dn=The.Daily.Show.2012.01.03.(HDTV-FQM)]]></magnetURI>
-			</torrent>
-		</item>
-		<item>
-			<title><![CDATA[The Daily Show 2011-12-15 [HDTV - FQM]]]></title>
-			<link>http://torrent.zoink.it/The.Daily.Show.2011.12.15.(HDTV-FQM)[VTV].torrent</link>
-			<category domain="http://eztv.it/shows/67/the-daily-show/"><![CDATA[TV Show / The Daily Show]]></category>
-			<pubDate>Thu, 15 Dec 2011 22:54:14 -0500</pubDate>
-			<description><![CDATA[Show Name: The Daily Show; Episode Title: N/A; Episode Date: 2011-12-15]]></description>
-			<enclosure url="http://torrent.zoink.it/The.Daily.Show.2011.12.15.(HDTV-FQM)[VTV].torrent" length="183449704" type="application/x-bittorrent" />
-			<comments>http://eztv.it/forum/discuss/31906/</comments>
-			<guid>http://eztv.it/ep/31906/the-daily-show-2011-12-15-hdtv-fqm/</guid>
-			<torrent xmlns="http://xmlns.ezrss.it/0.1/">
-				<fileName><![CDATA[The.Daily.Show.2011.12.15.(HDTV-FQM)[VTV].torrent]]></fileName>
-				<contentLength>183449704</contentLength>
-				<infoHash>F081D05F350C05209EA245E7D416DEE9695B04A0</infoHash>
-				<magnetURI><![CDATA[magnet:?xt=urn:btih:F081D05F350C05209EA245E7D416DEE9695B04A0&dn=The.Daily.Show.2011.12.15.(HDTV-FQM)]]></magnetURI>
-			</torrent>
-		</item>
-		<item>
-			<title><![CDATA[The Daily Show 2011-12-14 [HDTV - FQM]]]></title>
-			<link>http://torrent.zoink.it/The.Daily.Show.2011.12.14.(HDTV-FQM)[VTV].torrent</link>
-			<category domain="http://eztv.it/shows/67/the-daily-show/"><![CDATA[TV Show / The Daily Show]]></category>
-			<pubDate>Thu, 15 Dec 2011 02:52:44 -0500</pubDate>
-			<description><![CDATA[Show Name: The Daily Show; Episode Title: N/A; Episode Date: 2011-12-14]]></description>
-			<enclosure url="http://torrent.zoink.it/The.Daily.Show.2011.12.14.(HDTV-FQM)[VTV].torrent" length="183754264" type="application/x-bittorrent" />
-			<comments>http://eztv.it/forum/discuss/31878/</comments>
-			<guid>http://eztv.it/ep/31878/the-daily-show-2011-12-14-hdtv-fqm/</guid>
-			<torrent xmlns="http://xmlns.ezrss.it/0.1/">
-				<fileName><![CDATA[The.Daily.Show.2011.12.14.(HDTV-FQM)[VTV].torrent]]></fileName>
-				<contentLength>183754264</contentLength>
-				<infoHash>C02EE1E4DA2BC3C629E69B1970C931BEEF9F16C2</infoHash>
-				<magnetURI><![CDATA[magnet:?xt=urn:btih:C02EE1E4DA2BC3C629E69B1970C931BEEF9F16C2&dn=The.Daily.Show.2011.12.14.(HDTV-FQM)]]></magnetURI>
-			</torrent>
-		</item>
-		<item>
-			<title><![CDATA[The Daily Show 2011-12-13 [HDTV - FQM]]]></title>
-			<link>http://torrent.zoink.it/The.Daily.Show.2011.12.13.(HDTV-FQM)[VTV].torrent</link>
-			<category domain="http://eztv.it/shows/67/the-daily-show/"><![CDATA[TV Show / The Daily Show]]></category>
-			<pubDate>Wed, 14 Dec 2011 03:37:05 -0500</pubDate>
-			<description><![CDATA[Show Name: The Daily Show; Episode Title: N/A; Episode Date: 2011-12-13]]></description>
-			<enclosure url="http://torrent.zoink.it/The.Daily.Show.2011.12.13.(HDTV-FQM)[VTV].torrent" length="183748078" type="application/x-bittorrent" />
-			<comments>http://eztv.it/forum/discuss/31855/</comments>
-			<guid>http://eztv.it/ep/31855/the-daily-show-2011-12-13-hdtv-fqm/</guid>
-			<torrent xmlns="http://xmlns.ezrss.it/0.1/">
-				<fileName><![CDATA[The.Daily.Show.2011.12.13.(HDTV-FQM)[VTV].torrent]]></fileName>
-				<contentLength>183748078</contentLength>
-				<infoHash>4A20B0DD2A4056BB0DE0025BBE8260283689928E</infoHash>
-				<magnetURI><![CDATA[magnet:?xt=urn:btih:4A20B0DD2A4056BB0DE0025BBE8260283689928E&dn=The.Daily.Show.2011.12.13.(HDTV-FQM)]]></magnetURI>
-			</torrent>
-		</item>
-		<item>
-			<title><![CDATA[The Daily Show 2011-12-12 [HDTV - FQM]]]></title>
-			<link>http://torrent.zoink.it/The.Daily.Show.2011.12.12.(HDTV-FQM)[VTV].torrent</link>
-			<category domain="http://eztv.it/shows/67/the-daily-show/"><![CDATA[TV Show / The Daily Show]]></category>
-			<pubDate>Mon, 12 Dec 2011 22:59:23 -0500</pubDate>
-			<description><![CDATA[Show Name: The Daily Show; Episode Title: N/A; Episode Date: 2011-12-12]]></description>
-			<enclosure url="http://torrent.zoink.it/The.Daily.Show.2011.12.12.(HDTV-FQM)[VTV].torrent" length="183460076" type="application/x-bittorrent" />
-			<comments>http://eztv.it/forum/discuss/31829/</comments>
-			<guid>http://eztv.it/ep/31829/the-daily-show-2011-12-12-hdtv-fqm/</guid>
-			<torrent xmlns="http://xmlns.ezrss.it/0.1/">
-				<fileName><![CDATA[The.Daily.Show.2011.12.12.(HDTV-FQM)[VTV].torrent]]></fileName>
-				<contentLength>183460076</contentLength>
-				<infoHash>6A4B3DCB48A6A4EA45772FBCB9E60936E06EE351</infoHash>
-				<magnetURI><![CDATA[magnet:?xt=urn:btih:6A4B3DCB48A6A4EA45772FBCB9E60936E06EE351&dn=The.Daily.Show.2011.12.12.(HDTV-FQM)]]></magnetURI>
-			</torrent>
-		</item>
-		<item>
-			<title><![CDATA[The Daily Show 2011-12-08 [HDTV - FQM]]]></title>
-			<link>http://torrent.zoink.it/The.Daily.Show.2011.12.08.(HDTV-FQM)[VTV].torrent</link>
-			<category domain="http://eztv.it/shows/67/the-daily-show/"><![CDATA[TV Show / The Daily Show]]></category>
-			<pubDate>Thu, 08 Dec 2011 23:11:55 -0500</pubDate>
-			<description><![CDATA[Show Name: The Daily Show; Episode Title: N/A; Episode Date: 2011-12-08]]></description>
-			<enclosure url="http://torrent.zoink.it/The.Daily.Show.2011.12.08.(HDTV-FQM)[VTV].torrent" length="183811968" type="application/x-bittorrent" />
-			<comments>http://eztv.it/forum/discuss/31751/</comments>
-			<guid>http://eztv.it/ep/31751/the-daily-show-2011-12-08-hdtv-fqm/</guid>
-			<torrent xmlns="http://xmlns.ezrss.it/0.1/">
-				<fileName><![CDATA[The.Daily.Show.2011.12.08.(HDTV-FQM)[VTV].torrent]]></fileName>
-				<contentLength>183811968</contentLength>
-				<infoHash>1340B406A6CA5F715F4FB7590AEB9BA85C3D7775</infoHash>
-				<magnetURI><![CDATA[magnet:?xt=urn:btih:1340B406A6CA5F715F4FB7590AEB9BA85C3D7775&dn=The.Daily.Show.2011.12.08.(HDTV-FQM)]]></magnetURI>
-			</torrent>
-		</item>
-		<item>
-			<title><![CDATA[The Daily Show 2011-12-07 [HDTV - FQM]]]></title>
-			<link>http://torrent.zoink.it/The.Daily.Show.2011.12.07.(HDTV-FQM)[VTV].torrent</link>
-			<category domain="http://eztv.it/shows/67/the-daily-show/"><![CDATA[TV Show / The Daily Show]]></category>
-			<pubDate>Thu, 08 Dec 2011 01:35:41 -0500</pubDate>
-			<description><![CDATA[Show Name: The Daily Show; Episode Title: N/A; Episode Date: 2011-12-07]]></description>
-			<enclosure url="http://torrent.zoink.it/The.Daily.Show.2011.12.07.(HDTV-FQM)[VTV].torrent" length="183740072" type="application/x-bittorrent" />
-			<comments>http://eztv.it/forum/discuss/31722/</comments>
-			<guid>http://eztv.it/ep/31722/the-daily-show-2011-12-07-hdtv-fqm/</guid>
-			<torrent xmlns="http://xmlns.ezrss.it/0.1/">
-				<fileName><![CDATA[The.Daily.Show.2011.12.07.(HDTV-FQM)[VTV].torrent]]></fileName>
-				<contentLength>183740072</contentLength>
-				<infoHash>68684A70ED89321E8B7AAA467DCD1C2F22AA9CD9</infoHash>
-				<magnetURI><![CDATA[magnet:?xt=urn:btih:68684A70ED89321E8B7AAA467DCD1C2F22AA9CD9&dn=The.Daily.Show.2011.12.07.(HDTV-FQM)]]></magnetURI>
-			</torrent>
-		</item>
-		<item>
-			<title><![CDATA[The Daily Show 2011-12-06 [HDTV - FQM]]]></title>
-			<link>http://torrent.zoink.it/The.Daily.Show.2011.12.06.(HDTV-FQM)[VTV].torrent</link>
-			<category domain="http://eztv.it/shows/67/the-daily-show/"><![CDATA[TV Show / The Daily Show]]></category>
-			<pubDate>Tue, 06 Dec 2011 23:25:39 -0500</pubDate>
-			<description><![CDATA[Show Name: The Daily Show; Episode Title: N/A; Episode Date: 2011-12-06]]></description>
-			<enclosure url="http://torrent.zoink.it/The.Daily.Show.2011.12.06.(HDTV-FQM)[VTV].torrent" length="183747386" type="application/x-bittorrent" />
-			<comments>http://eztv.it/forum/discuss/31688/</comments>
-			<guid>http://eztv.it/ep/31688/the-daily-show-2011-12-06-hdtv-fqm/</guid>
-			<torrent xmlns="http://xmlns.ezrss.it/0.1/">
-				<fileName><![CDATA[The.Daily.Show.2011.12.06.(HDTV-FQM)[VTV].torrent]]></fileName>
-				<contentLength>183747386</contentLength>
-				<infoHash>C1F76A80399ECD1572A7E282EBE45A17160839CC</infoHash>
-				<magnetURI><![CDATA[magnet:?xt=urn:btih:C1F76A80399ECD1572A7E282EBE45A17160839CC&dn=The.Daily.Show.2011.12.06.(HDTV-FQM)]]></magnetURI>
-			</torrent>
-		</item>
-		<item>
-			<title><![CDATA[The Daily Show 2011-12-05 [HDTV - FQM]]]></title>
-			<link>http://torrent.zoink.it/The.Daily.Show.2011.12.05.(HDTV-FQM)[VTV].torrent</link>
-			<category domain="http://eztv.it/shows/67/the-daily-show/"><![CDATA[TV Show / The Daily Show]]></category>
-			<pubDate>Tue, 06 Dec 2011 01:26:12 -0500</pubDate>
-			<description><![CDATA[Show Name: The Daily Show; Episode Title: N/A; Episode Date: 2011-12-05]]></description>
-			<enclosure url="http://torrent.zoink.it/The.Daily.Show.2011.12.05.(HDTV-FQM)[VTV].torrent" length="183783900" type="application/x-bittorrent" />
-			<comments>http://eztv.it/forum/discuss/31662/</comments>
-			<guid>http://eztv.it/ep/31662/the-daily-show-2011-12-05-hdtv-fqm/</guid>
-			<torrent xmlns="http://xmlns.ezrss.it/0.1/">
-				<fileName><![CDATA[The.Daily.Show.2011.12.05.(HDTV-FQM)[VTV].torrent]]></fileName>
-				<contentLength>183783900</contentLength>
-				<infoHash>78627148D317FC01A9BA4504E11273FF4BE72DB7</infoHash>
-				<magnetURI><![CDATA[magnet:?xt=urn:btih:78627148D317FC01A9BA4504E11273FF4BE72DB7&dn=The.Daily.Show.2011.12.05.(HDTV-FQM)]]></magnetURI>
-			</torrent>
-		</item>
-	</channel>
-</rss>
\ No newline at end of file
diff -ruN libtorrent-libtorrent_0_16_5/test/kat.xml libtorrent/test/kat.xml
--- libtorrent-libtorrent_0_16_5/test/kat.xml	2012-10-23 12:23:09.000000000 +0800
+++ libtorrent/test/kat.xml	1970-01-01 08:00:00.000000000 +0800
@@ -1,383 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?><rss version="2.0">
-<channel>
-	<title>Music torrents RSS feed - KickassTorrents</title>
-	<link>http://kat.ph/</link>
-	<xhtml:meta xmlns:xhtml="http://www.w3.org/1999/xhtml" name="robots" content="noindex" />
-	<description>Music torrents RSS feed</description>
-<item>
-		<title>Benito Di Paula - 1975 - Benito Di Paula (LP Rip OGG at 500) [jarax4u]</title>
-		<category>Other Music</category>
-		<link>http://kat.ph/benito-di-paula-1975-benito-di-paula-lp-rip-ogg-at-500-jarax4u-t6194897.html</link>
-		<guid>http://kat.ph/benito-di-paula-1975-benito-di-paula-lp-rip-ogg-at-500-jarax4u-t6194897.html</guid>
-		<pubDate>Tue, 21 Feb 2012 01:06:33 +0000</pubDate>
-		<torrentLink>http://kat.ph/torrents/benito-di-paula-1975-benito-di-paula-lp-rip-ogg-at-500-jarax4u-t6194897/</torrentLink>
-		<hash>211F92234B07D98C29DD5088BE55CEC874BB661C</hash>
-		<peers>0</peers>
-		<seeds>0</seeds>
-		<leechs>0</leechs>
-		<size>168773863</size>
-		<verified>1</verified>
-		<enclosure url="http://kat.ph/torrents/benito-di-paula-1975-benito-di-paula-lp-rip-ogg-at-500-jarax4u-t6194897/" length="168773863" type="application/x-bittorrent" />
-	</item>
-	<item>
-		<title>Benito Di Paula - 1975 - Benito Di Paula (LP Rip MP3 at 320) [jarax4u]</title>
-		<category>Other Music</category>
-		<link>http://kat.ph/benito-di-paula-1975-benito-di-paula-lp-rip-mp3-at-320-jarax4u-t6194875.html</link>
-		<guid>http://kat.ph/benito-di-paula-1975-benito-di-paula-lp-rip-mp3-at-320-jarax4u-t6194875.html</guid>
-		<pubDate>Tue, 21 Feb 2012 00:47:58 +0000</pubDate>
-		<torrentLink>http://kat.ph/torrents/benito-di-paula-1975-benito-di-paula-lp-rip-mp3-at-320-jarax4u-t6194875/</torrentLink>
-		<hash>E574DA4F83B4CCBDFA58D86F199607BD8EC107CD</hash>
-		<peers>0</peers>
-		<seeds>0</seeds>
-		<leechs>0</leechs>
-		<size>101741371</size>
-		<verified>1</verified>
-		<enclosure url="http://kat.ph/torrents/benito-di-paula-1975-benito-di-paula-lp-rip-mp3-at-320-jarax4u-t6194875/" length="101741371" type="application/x-bittorrent" />
-	</item>
-	<item>
-		<title>Ridddim Pack (December 2011) {by gtyouth}</title>
-		<category>Other Music</category>
-		<link>http://kat.ph/ridddim-pack-december-2011-by-gtyouth-t6194838.html</link>
-		<guid>http://kat.ph/ridddim-pack-december-2011-by-gtyouth-t6194838.html</guid>
-		<pubDate>Tue, 21 Feb 2012 00:06:05 +0000</pubDate>
-		<torrentLink>http://kat.ph/torrents/ridddim-pack-december-2011-by-gtyouth-t6194838/</torrentLink>
-		<hash>4a8cd595283be07e15100d429ad2d66d29c97908</hash>
-		<peers>0</peers>
-		<seeds>0</seeds>
-		<leechs>0</leechs>
-		<size>2359156334</size>
-		<verified>1</verified>
-		<enclosure url="http://kat.ph/torrents/ridddim-pack-december-2011-by-gtyouth-t6194838/" length="2359156334" type="application/x-bittorrent" />
-	</item>
-	<item>
-		<title>Benito Di Paula - 1974 - Gravado Ao Vivo (LP Rip FLAC) [jarax4u]</title>
-		<category>FLAC</category>
-		<link>http://kat.ph/benito-di-paula-1974-gravado-ao-vivo-lp-rip-flac-jarax4u-t6194825.html</link>
-		<guid>http://kat.ph/benito-di-paula-1974-gravado-ao-vivo-lp-rip-flac-jarax4u-t6194825.html</guid>
-		<pubDate>Mon, 20 Feb 2012 23:58:34 +0000</pubDate>
-		<torrentLink>http://kat.ph/torrents/benito-di-paula-1974-gravado-ao-vivo-lp-rip-flac-jarax4u-t6194825/</torrentLink>
-		<hash>A85A6DFD01B374841855BF4717B22DF431AA130D</hash>
-		<peers>0</peers>
-		<seeds>0</seeds>
-		<leechs>0</leechs>
-		<size>247681857</size>
-		<verified>1</verified>
-		<enclosure url="http://kat.ph/torrents/benito-di-paula-1974-gravado-ao-vivo-lp-rip-flac-jarax4u-t6194825/" length="247681857" type="application/x-bittorrent" />
-	</item>
-	<item>
-		<title>Benito Di Paula - 1974 - Gravado Ao Vivo (LP Rip OGG at 500) [jarax4u]</title>
-		<category>Other Music</category>
-		<link>http://kat.ph/benito-di-paula-1974-gravado-ao-vivo-lp-rip-ogg-at-500-jarax4u-t6194817.html</link>
-		<guid>http://kat.ph/benito-di-paula-1974-gravado-ao-vivo-lp-rip-ogg-at-500-jarax4u-t6194817.html</guid>
-		<pubDate>Mon, 20 Feb 2012 23:53:50 +0000</pubDate>
-		<torrentLink>http://kat.ph/torrents/benito-di-paula-1974-gravado-ao-vivo-lp-rip-ogg-at-500-jarax4u-t6194817/</torrentLink>
-		<hash>C54BB60E1F8F5D5944C98814F5FB3CBCBE61FC72</hash>
-		<peers>7</peers>
-		<seeds>1</seeds>
-		<leechs>6</leechs>
-		<size>173305077</size>
-		<verified>1</verified>
-		<enclosure url="http://kat.ph/torrents/benito-di-paula-1974-gravado-ao-vivo-lp-rip-ogg-at-500-jarax4u-t6194817/" length="173305077" type="application/x-bittorrent" />
-	</item>
-	<item>
-		<title>Benito Di Paula - 1974 - Gravado Ao Vivo (LP Rip MP3 at 320) [jarax4u]</title>
-		<category>Other Music</category>
-		<link>http://kat.ph/benito-di-paula-1974-gravado-ao-vivo-lp-rip-mp3-at-320-jarax4u-t6194784.html</link>
-		<guid>http://kat.ph/benito-di-paula-1974-gravado-ao-vivo-lp-rip-mp3-at-320-jarax4u-t6194784.html</guid>
-		<pubDate>Mon, 20 Feb 2012 23:48:09 +0000</pubDate>
-		<torrentLink>http://kat.ph/torrents/benito-di-paula-1974-gravado-ao-vivo-lp-rip-mp3-at-320-jarax4u-t6194784/</torrentLink>
-		<hash>A924A364F27732C4944CDB6E2AF80B7AB36F6BEB</hash>
-		<peers>0</peers>
-		<seeds>0</seeds>
-		<leechs>0</leechs>
-		<size>111035604</size>
-		<verified>1</verified>
-		<enclosure url="http://kat.ph/torrents/benito-di-paula-1974-gravado-ao-vivo-lp-rip-mp3-at-320-jarax4u-t6194784/" length="111035604" type="application/x-bittorrent" />
-	</item>
-	<item>
-		<title>The Peter Schiff Show - 2012 Feb 20 MO [sebaygo1]</title>
-		<category>Other Music</category>
-		<link>http://kat.ph/the-peter-schiff-show-2012-feb-20-mo-sebaygo1-t6194769.html</link>
-		<guid>http://kat.ph/the-peter-schiff-show-2012-feb-20-mo-sebaygo1-t6194769.html</guid>
-		<pubDate>Mon, 20 Feb 2012 23:41:04 +0000</pubDate>
-		<torrentLink>http://kat.ph/torrents/the-peter-schiff-show-2012-feb-20-mo-sebaygo1-t6194769/</torrentLink>
-		<hash>5e18ad4066de9f4906f49d0a08a79f858c87cfe8</hash>
-		<peers>0</peers>
-		<seeds>0</seeds>
-		<leechs>0</leechs>
-		<size>29569957</size>
-		<verified>1</verified>
-		<enclosure url="http://kat.ph/torrents/the-peter-schiff-show-2012-feb-20-mo-sebaygo1-t6194769/" length="29569957" type="application/x-bittorrent" />
-	</item>
-	<item>
-		<title>Tears for Fears - Songs From the Big Chair [1984] 1998 [EAC - FLAC](oan) MFSL</title>
-		<category>FLAC</category>
-		<link>http://kat.ph/tears-for-fears-songs-from-the-big-chair-1984-1998-eac-flac-oan-mfsl-t6194761.html</link>
-		<guid>http://kat.ph/tears-for-fears-songs-from-the-big-chair-1984-1998-eac-flac-oan-mfsl-t6194761.html</guid>
-		<pubDate>Mon, 20 Feb 2012 23:37:13 +0000</pubDate>
-		<torrentLink>http://kat.ph/torrents/tears-for-fears-songs-from-the-big-chair-1984-1998-eac-flac-oan-mfsl-t6194761/</torrentLink>
-		<hash>BC7A54607B625B512B7491C30A732E65556DB494</hash>
-		<peers>6</peers>
-		<seeds>2</seeds>
-		<leechs>4</leechs>
-		<size>386198104</size>
-		<verified>1</verified>
-		<enclosure url="http://kat.ph/torrents/tears-for-fears-songs-from-the-big-chair-1984-1998-eac-flac-oan-mfsl-t6194761/" length="386198104" type="application/x-bittorrent" />
-	</item>
-	<item>
-		<title>reggie</title>
-		<category>Other Music</category>
-		<link>http://kat.ph/reggie-t6194715.html</link>
-		<guid>http://kat.ph/reggie-t6194715.html</guid>
-		<pubDate>Mon, 20 Feb 2012 23:17:22 +0000</pubDate>
-		<torrentLink>http://kat.ph/torrents/reggie-t6194715/</torrentLink>
-		<hash>7C763EFCF0C249390A59B39F07E23DA282F1C7E5</hash>
-		<peers>5</peers>
-		<seeds>1</seeds>
-		<leechs>4</leechs>
-		<size>25633124</size>
-		<verified>0</verified>
-		<enclosure url="http://kat.ph/torrents/reggie-t6194715/" length="25633124" type="application/x-bittorrent" />
-	</item>
-	<item>
-		<title>Little Walter Quarter To Twelve (blues)Mp3@320)[rogercc][h33t]</title>
-		<category>Other Music</category>
-		<link>http://kat.ph/little-walter-quarter-to-twelve-blues-mp3-320-rogercc-h33t-t6194700.html</link>
-		<guid>http://kat.ph/little-walter-quarter-to-twelve-blues-mp3-320-rogercc-h33t-t6194700.html</guid>
-		<pubDate>Mon, 20 Feb 2012 23:14:33 +0000</pubDate>
-		<torrentLink>http://kat.ph/torrents/little-walter-quarter-to-twelve-blues-mp3-320-rogercc-h33t-t6194700/</torrentLink>
-		<hash>9E99A4E78E5BB7D6321ADA0DEA7B0FFEC0CD29D7</hash>
-		<peers>7</peers>
-		<seeds>1</seeds>
-		<leechs>6</leechs>
-		<size>104421151</size>
-		<verified>1</verified>
-		<enclosure url="http://kat.ph/torrents/little-walter-quarter-to-twelve-blues-mp3-320-rogercc-h33t-t6194700/" length="104421151" type="application/x-bittorrent" />
-	</item>
-	<item>
-		<title>Kiss - Rock And Roll Over (The Remasters) FLAC</title>
-		<category>FLAC</category>
-		<link>http://kat.ph/kiss-rock-and-roll-over-the-remasters-flac-t6194641.html</link>
-		<guid>http://kat.ph/kiss-rock-and-roll-over-the-remasters-flac-t6194641.html</guid>
-		<pubDate>Mon, 20 Feb 2012 22:51:59 +0000</pubDate>
-		<torrentLink>http://kat.ph/torrents/kiss-rock-and-roll-over-the-remasters-flac-t6194641/</torrentLink>
-		<hash>AE27C0F706DC4B58648D8141561717196EE1F9EF</hash>
-		<peers>2</peers>
-		<seeds>1</seeds>
-		<leechs>1</leechs>
-		<size>247531271</size>
-		<verified>0</verified>
-		<enclosure url="http://kat.ph/torrents/kiss-rock-and-roll-over-the-remasters-flac-t6194641/" length="247531271" type="application/x-bittorrent" />
-	</item>
-	<item>
-		<title>Dio - (2004) Master Of The Moon (Metal4Life Edition v2) FLAC</title>
-		<category>FLAC</category>
-		<link>http://kat.ph/dio-2004-master-of-the-moon-metal4life-edition-v2-flac-t6194629.html</link>
-		<guid>http://kat.ph/dio-2004-master-of-the-moon-metal4life-edition-v2-flac-t6194629.html</guid>
-		<pubDate>Mon, 20 Feb 2012 22:45:57 +0000</pubDate>
-		<torrentLink>http://kat.ph/torrents/dio-2004-master-of-the-moon-metal4life-edition-v2-flac-t6194629/</torrentLink>
-		<hash>E542A684046606AEF3557B61AFE3E5C7F8EB812E</hash>
-		<peers>0</peers>
-		<seeds>0</seeds>
-		<leechs>0</leechs>
-		<size>303937009</size>
-		<verified>0</verified>
-		<enclosure url="http://kat.ph/torrents/dio-2004-master-of-the-moon-metal4life-edition-v2-flac-t6194629/" length="303937009" type="application/x-bittorrent" />
-	</item>
-	<item>
-		<title>Kiss - Destroyer (The Remasters) FLAC</title>
-		<category>FLAC</category>
-		<link>http://kat.ph/kiss-destroyer-the-remasters-flac-t6194608.html</link>
-		<guid>http://kat.ph/kiss-destroyer-the-remasters-flac-t6194608.html</guid>
-		<pubDate>Mon, 20 Feb 2012 22:29:12 +0000</pubDate>
-		<torrentLink>http://kat.ph/torrents/kiss-destroyer-the-remasters-flac-t6194608/</torrentLink>
-		<hash>F1C90D9BB756308AFC0D80F35624C6D95DBE4415</hash>
-		<peers>0</peers>
-		<seeds>0</seeds>
-		<leechs>0</leechs>
-		<size>235276131</size>
-		<verified>0</verified>
-		<enclosure url="http://kat.ph/torrents/kiss-destroyer-the-remasters-flac-t6194608/" length="235276131" type="application/x-bittorrent" />
-	</item>
-	<item>
-		<title>Aly and Fila - Future Sound Of Egypt 224 (2012.02.20).mp3</title>
-		<category>Other Music</category>
-		<link>http://kat.ph/aly-and-fila-future-sound-of-egypt-224-2012-02-20-mp3-t6194589.html</link>
-		<guid>http://kat.ph/aly-and-fila-future-sound-of-egypt-224-2012-02-20-mp3-t6194589.html</guid>
-		<pubDate>Mon, 20 Feb 2012 22:23:24 +0000</pubDate>
-		<torrentLink>http://kat.ph/torrents/aly-and-fila-future-sound-of-egypt-224-2012-02-20-mp3-t6194589/</torrentLink>
-		<hash>4CAAD39175F954B586DF59A16217AE078B2EAF21</hash>
-		<peers>1</peers>
-		<seeds>0</seeds>
-		<leechs>1</leechs>
-		<size>114884440</size>
-		<verified>1</verified>
-		<enclosure url="http://kat.ph/torrents/aly-and-fila-future-sound-of-egypt-224-2012-02-20-mp3-t6194589/" length="114884440" type="application/x-bittorrent" />
-	</item>
-	<item>
-		<title>Dj Fletch - Southern Swag Vol.1.Mixtape-2012-MP3</title>
-		<category>Other Music</category>
-		<link>http://kat.ph/dj-fletch-southern-swag-vol-1-mixtape-2012-mp3-t6194512.html</link>
-		<guid>http://kat.ph/dj-fletch-southern-swag-vol-1-mixtape-2012-mp3-t6194512.html</guid>
-		<pubDate>Mon, 20 Feb 2012 21:48:14 +0000</pubDate>
-		<torrentLink>http://kat.ph/torrents/dj-fletch-southern-swag-vol-1-mixtape-2012-mp3-t6194512/</torrentLink>
-		<hash>01D24611657E653CB0761EA126267F2D112E2DCD</hash>
-		<peers>2</peers>
-		<seeds>0</seeds>
-		<leechs>2</leechs>
-		<size>107170413</size>
-		<verified>0</verified>
-		<enclosure url="http://kat.ph/torrents/dj-fletch-southern-swag-vol-1-mixtape-2012-mp3-t6194512/" length="107170413" type="application/x-bittorrent" />
-	</item>
-	<item>
-		<title>Bruce Springsteen - Wrecking Ball CDRip 2012 [Bubanee]</title>
-		<category>Other Music</category>
-		<link>http://kat.ph/bruce-springsteen-wrecking-ball-cdrip-2012-bubanee-t6194510.html</link>
-		<guid>http://kat.ph/bruce-springsteen-wrecking-ball-cdrip-2012-bubanee-t6194510.html</guid>
-		<pubDate>Mon, 20 Feb 2012 21:47:50 +0000</pubDate>
-		<torrentLink>http://kat.ph/torrents/bruce-springsteen-wrecking-ball-cdrip-2012-bubanee-t6194510/</torrentLink>
-		<hash>9211A0BF0C5B8989CACCF48734DCF8F0BD28F369</hash>
-		<peers>54</peers>
-		<seeds>23</seeds>
-		<leechs>31</leechs>
-		<size>98524959</size>
-		<verified>1</verified>
-		<enclosure url="http://kat.ph/torrents/bruce-springsteen-wrecking-ball-cdrip-2012-bubanee-t6194510/" length="98524959" type="application/x-bittorrent" />
-	</item>
-	<item>
-		<title>Allman Brothers - Idlewild South [1970] 2007 [EAC - FLAC](oan) MFSL</title>
-		<category>FLAC</category>
-		<link>http://kat.ph/allman-brothers-idlewild-south-1970-2007-eac-flac-oan-mfsl-t6194497.html</link>
-		<guid>http://kat.ph/allman-brothers-idlewild-south-1970-2007-eac-flac-oan-mfsl-t6194497.html</guid>
-		<pubDate>Mon, 20 Feb 2012 21:38:08 +0000</pubDate>
-		<torrentLink>http://kat.ph/torrents/allman-brothers-idlewild-south-1970-2007-eac-flac-oan-mfsl-t6194497/</torrentLink>
-		<hash>72158ED9C573AE3BD68079995FABB2BAE95C9C91</hash>
-		<peers>53</peers>
-		<seeds>31</seeds>
-		<leechs>22</leechs>
-		<size>211398584</size>
-		<verified>1</verified>
-		<enclosure url="http://kat.ph/torrents/allman-brothers-idlewild-south-1970-2007-eac-flac-oan-mfsl-t6194497/" length="211398584" type="application/x-bittorrent" />
-	</item>
-	<item>
-		<title>VA - Minimal Bounce (CLO08265) WEB 2012-ALKi</title>
-		<category>Other Music</category>
-		<link>http://kat.ph/va-minimal-bounce-clo08265-web-2012-alki-t6194492.html</link>
-		<guid>http://kat.ph/va-minimal-bounce-clo08265-web-2012-alki-t6194492.html</guid>
-		<pubDate>Mon, 20 Feb 2012 21:35:35 +0000</pubDate>
-		<torrentLink>http://kat.ph/torrents/va-minimal-bounce-clo08265-web-2012-alki-t6194492/</torrentLink>
-		<hash>73DE1DEADB7EA648BAA9FFE8B412679B6C4744FC</hash>
-		<peers>26</peers>
-		<seeds>8</seeds>
-		<leechs>18</leechs>
-		<size>321376394</size>
-		<verified>1</verified>
-		<enclosure url="http://kat.ph/torrents/va-minimal-bounce-clo08265-web-2012-alki-t6194492/" length="321376394" type="application/x-bittorrent" />
-	</item>
-	<item>
-		<title>THIS DATE IN HOWARD STERN HISTORY - CF64K - 02-20-12 [WDM]</title>
-		<category>Other Music</category>
-		<link>http://kat.ph/this-date-in-howard-stern-history-cf64k-02-20-12-wdm-t6194474.html</link>
-		<guid>http://kat.ph/this-date-in-howard-stern-history-cf64k-02-20-12-wdm-t6194474.html</guid>
-		<pubDate>Mon, 20 Feb 2012 21:26:09 +0000</pubDate>
-		<torrentLink>http://kat.ph/torrents/this-date-in-howard-stern-history-cf64k-02-20-12-wdm-t6194474/</torrentLink>
-		<hash>affb307b27e5f5854dafb33e6a8ecb87a5f3bdaf</hash>
-		<peers>2</peers>
-		<seeds>1</seeds>
-		<leechs>1</leechs>
-		<size>144439968</size>
-		<verified>1</verified>
-		<enclosure url="http://kat.ph/torrents/this-date-in-howard-stern-history-cf64k-02-20-12-wdm-t6194474/" length="144439968" type="application/x-bittorrent" />
-	</item>
-	<item>
-		<title>THIS DATE IN HOWARD STERN HISTORY - CF128K - 02-20-12 [WDM]</title>
-		<category>Other Music</category>
-		<link>http://kat.ph/this-date-in-howard-stern-history-cf128k-02-20-12-wdm-t6194473.html</link>
-		<guid>http://kat.ph/this-date-in-howard-stern-history-cf128k-02-20-12-wdm-t6194473.html</guid>
-		<pubDate>Mon, 20 Feb 2012 21:26:08 +0000</pubDate>
-		<torrentLink>http://kat.ph/torrents/this-date-in-howard-stern-history-cf128k-02-20-12-wdm-t6194473/</torrentLink>
-		<hash>465c2c62b82e33ebd804b08a3e400f178b47dea1</hash>
-		<peers>2</peers>
-		<seeds>1</seeds>
-		<leechs>1</leechs>
-		<size>288668290</size>
-		<verified>1</verified>
-		<enclosure url="http://kat.ph/torrents/this-date-in-howard-stern-history-cf128k-02-20-12-wdm-t6194473/" length="288668290" type="application/x-bittorrent" />
-	</item>
-	<item>
-		<title>In Loving Memory - Negation Of Life (2011) [mp3@320]</title>
-		<category>Other Music</category>
-		<link>http://kat.ph/in-loving-memory-negation-of-life-2011-mp3-320-t6194466.html</link>
-		<guid>http://kat.ph/in-loving-memory-negation-of-life-2011-mp3-320-t6194466.html</guid>
-		<pubDate>Mon, 20 Feb 2012 21:21:33 +0000</pubDate>
-		<torrentLink>http://kat.ph/torrents/in-loving-memory-negation-of-life-2011-mp3-320-t6194466/</torrentLink>
-		<hash>3c2fb2c7a41e52feb9679efe04e42a20d5d7e886</hash>
-		<peers>0</peers>
-		<seeds>0</seeds>
-		<leechs>0</leechs>
-		<size>153557304</size>
-		<verified>0</verified>
-		<enclosure url="http://kat.ph/torrents/in-loving-memory-negation-of-life-2011-mp3-320-t6194466/" length="153557304" type="application/x-bittorrent" />
-	</item>
-	<item>
-		<title>Lorenguard - Eve Of Corruption: The Days Of Astasia, Part 1 (201</title>
-		<category>Other Music</category>
-		<link>http://kat.ph/lorenguard-eve-of-corruption-the-days-of-astasia-part-1-201-t6194465.html</link>
-		<guid>http://kat.ph/lorenguard-eve-of-corruption-the-days-of-astasia-part-1-201-t6194465.html</guid>
-		<pubDate>Mon, 20 Feb 2012 21:21:32 +0000</pubDate>
-		<torrentLink>http://kat.ph/torrents/lorenguard-eve-of-corruption-the-days-of-astasia-part-1-201-t6194465/</torrentLink>
-		<hash>49e0ac3dde5dc4bc4f40d58ca64f6c1c45c1bee5</hash>
-		<peers>2</peers>
-		<seeds>2</seeds>
-		<leechs>0</leechs>
-		<size>153858101</size>
-		<verified>1</verified>
-		<enclosure url="http://kat.ph/torrents/lorenguard-eve-of-corruption-the-days-of-astasia-part-1-201-t6194465/" length="153858101" type="application/x-bittorrent" />
-	</item>
-	<item>
-		<title>Silent Kingdom - Path To Oblivion (2011) [mp3@320]</title>
-		<category>Other Music</category>
-		<link>http://kat.ph/silent-kingdom-path-to-oblivion-2011-mp3-320-t6194464.html</link>
-		<guid>http://kat.ph/silent-kingdom-path-to-oblivion-2011-mp3-320-t6194464.html</guid>
-		<pubDate>Mon, 20 Feb 2012 21:21:31 +0000</pubDate>
-		<torrentLink>http://kat.ph/torrents/silent-kingdom-path-to-oblivion-2011-mp3-320-t6194464/</torrentLink>
-		<hash>8647dbdf5a39c59fa835a54d59a7b47e93bf87e8</hash>
-		<peers>0</peers>
-		<seeds>0</seeds>
-		<leechs>0</leechs>
-		<size>89279565</size>
-		<verified>1</verified>
-		<enclosure url="http://kat.ph/torrents/silent-kingdom-path-to-oblivion-2011-mp3-320-t6194464/" length="89279565" type="application/x-bittorrent" />
-	</item>
-	<item>
-		<title>The Jimmy Bowskill Band - Back Number (2012) [mp3@320]</title>
-		<category>Other Music</category>
-		<link>http://kat.ph/the-jimmy-bowskill-band-back-number-2012-mp3-320-t6194463.html</link>
-		<guid>http://kat.ph/the-jimmy-bowskill-band-back-number-2012-mp3-320-t6194463.html</guid>
-		<pubDate>Mon, 20 Feb 2012 21:21:30 +0000</pubDate>
-		<torrentLink>http://kat.ph/torrents/the-jimmy-bowskill-band-back-number-2012-mp3-320-t6194463/</torrentLink>
-		<hash>20991cd3b70fa937aa53821967731821f0a40811</hash>
-		<peers>0</peers>
-		<seeds>0</seeds>
-		<leechs>0</leechs>
-		<size>116141099</size>
-		<verified>1</verified>
-		<enclosure url="http://kat.ph/torrents/the-jimmy-bowskill-band-back-number-2012-mp3-320-t6194463/" length="116141099" type="application/x-bittorrent" />
-	</item>
-	<item>
-		<title>TranceTop (18.02.2012)</title>
-		<category>Other Music</category>
-		<link>http://kat.ph/trancetop-18-02-2012-t6194460.html</link>
-		<guid>http://kat.ph/trancetop-18-02-2012-t6194460.html</guid>
-		<pubDate>Mon, 20 Feb 2012 21:18:43 +0000</pubDate>
-		<torrentLink>http://kat.ph/torrents/trancetop-18-02-2012-t6194460/</torrentLink>
-		<hash>3602C833D2A71EFA6B1C67F4600601CCDE8654ED</hash>
-		<peers>5</peers>
-		<seeds>2</seeds>
-		<leechs>3</leechs>
-		<size>262105241</size>
-		<verified>1</verified>
-		<enclosure url="http://kat.ph/torrents/trancetop-18-02-2012-t6194460/" length="262105241" type="application/x-bittorrent" />
-	</item>
-	</channel>
-</rss>
\ No newline at end of file
diff -ruN libtorrent-libtorrent_0_16_5/test/mn.xml libtorrent/test/mn.xml
--- libtorrent-libtorrent_0_16_5/test/mn.xml	2012-10-23 12:23:09.000000000 +0800
+++ libtorrent/test/mn.xml	1970-01-01 08:00:00.000000000 +0800
@@ -1,130 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
-    <channel>
-        <title>Mininova</title>
-	<link>http://www.mininova.org/</link>
-	<description>Latest Mininova torrents</description>
-	<language>en-us</language>
-	<atom:link href="http://www.mininova.org/rss.php?chttp://www.mininova.org/rss.php?cat=1&amp;recache=0%22%25" rel="self" type="application/rss+xml" />
-<item><title>Dexcell - January TwentyTwelve Mix</title><guid isPermaLink='true'>http://www.mininova.org/tor/13203100</guid><pubDate>Mon, 20 Feb 2012 17:11:11 +0100</pubDate><category>Music</category><link>http://www.mininova.org/tor/13203100</link><enclosure url="http://www.mininova.org/get/13203100" length="137311179" type="application/x-bittorrent" /><description><![CDATA[
-      Category: <a href="http://www.mininova.org/cat/5">Music</a><br />
-      Subcategory: <a href="http://www.mininova.org/sub/60">Drum N Bass</a><br />
-      Size: 130.95&nbsp;megabyte<br />
-      Ratio: 1 seeds, 6 leechers<br />
-      Language: <img src="http://mnstat.com./images/flags/us.gif" /> English<br />
-      Uploaded by: <a href="http://www.mininova.org/user/Dexcell">Dexcell</a>]]></description></item><item><title>Dexcell - December TwentyEleven Mix</title><guid isPermaLink='true'>http://www.mininova.org/tor/13203099</guid><pubDate>Mon, 20 Feb 2012 16:26:02 +0100</pubDate><category>Music</category><link>http://www.mininova.org/tor/13203099</link><enclosure url="http://www.mininova.org/get/13203099" length="138354014" type="application/x-bittorrent" /><description><![CDATA[
-      Category: <a href="http://www.mininova.org/cat/5">Music</a><br />
-      Subcategory: <a href="http://www.mininova.org/sub/60">Drum N Bass</a><br />
-      Size: 131.94&nbsp;megabyte<br />
-      Ratio: 1 seeds, 4 leechers<br />
-      Language: <img src="http://mnstat.com./images/flags/us.gif" /> English<br />
-      Uploaded by: <a href="http://www.mininova.org/user/Dexcell">Dexcell</a>]]></description></item><item><title>Various Artists - Classicore (BM007) BREAKCORE</title><guid isPermaLink='true'>http://www.mininova.org/tor/13203098</guid><pubDate>Mon, 20 Feb 2012 16:25:24 +0100</pubDate><category>Music</category><link>http://www.mininova.org/tor/13203098</link><enclosure url="http://www.mininova.org/get/13203098" length="147187857" type="application/x-bittorrent" /><description><![CDATA[
-      Category: <a href="http://www.mininova.org/cat/5">Music</a><br />
-      Subcategory: <a href="http://www.mininova.org/sub/61">Electronic</a><br />
-      Size: 140.37&nbsp;megabyte<br />
-      Ratio: 1 seeds, 8 leechers<br />
-      Language: Unknown<br />
-      Uploaded by: <a href="http://www.mininova.org/user/breakcorenl">breakcorenl</a>]]></description></item><item><title>(V/A) .altered.statez.</title><guid isPermaLink='true'>http://www.mininova.org/tor/13203097</guid><pubDate>Mon, 20 Feb 2012 16:19:19 +0100</pubDate><category>Music</category><link>http://www.mininova.org/tor/13203097</link><enclosure url="http://www.mininova.org/get/13203097" length="148326997" type="application/x-bittorrent" /><description><![CDATA[
-      Category: <a href="http://www.mininova.org/cat/5">Music</a><br />
-      Subcategory: <a href="http://www.mininova.org/sub/61">Electronic</a><br />
-      Size: 141.46&nbsp;megabyte<br />
-      Ratio: 1 seeds, 6 leechers<br />
-      Language: <img src="http://mnstat.com./images/flags/us.gif" /> English<br />
-      Uploaded by: <a href="http://www.mininova.org/user/cOmaWrek">cOmaWrek</a>]]></description></item><item><title>Various Artists - Themeless 4 (BM006) BREAKCORE</title><guid isPermaLink='true'>http://www.mininova.org/tor/13203096</guid><pubDate>Mon, 20 Feb 2012 16:17:08 +0100</pubDate><category>Music</category><link>http://www.mininova.org/tor/13203096</link><enclosure url="http://www.mininova.org/get/13203096" length="233575946" type="application/x-bittorrent" /><description><![CDATA[
-      Category: <a href="http://www.mininova.org/cat/5">Music</a><br />
-      Subcategory: <a href="http://www.mininova.org/sub/61">Electronic</a><br />
-      Size: 222.76&nbsp;megabyte<br />
-      Ratio: 1 seeds, 5 leechers<br />
-      Language: Unknown<br />
-      Uploaded by: <a href="http://www.mininova.org/user/breakcorenl">breakcorenl</a>]]></description></item><item><title>Various Artists - Themeless 3 (BM005) BREAKCORE</title><guid isPermaLink='true'>http://www.mininova.org/tor/13203095</guid><pubDate>Mon, 20 Feb 2012 16:08:35 +0100</pubDate><category>Music</category><link>http://www.mininova.org/tor/13203095</link><enclosure url="http://www.mininova.org/get/13203095" length="338253900" type="application/x-bittorrent" /><description><![CDATA[
-      Category: <a href="http://www.mininova.org/cat/5">Music</a><br />
-      Subcategory: <a href="http://www.mininova.org/sub/61">Electronic</a><br />
-      Size: 322.58&nbsp;megabyte<br />
-      Ratio: 1 seeds, 5 leechers<br />
-      Language: Unknown<br />
-      Uploaded by: <a href="http://www.mininova.org/user/breakcorenl">breakcorenl</a>]]></description></item><item><title>Dexcell - November TwentyEleven Mix</title><guid isPermaLink='true'>http://www.mininova.org/tor/13203094</guid><pubDate>Mon, 20 Feb 2012 15:23:39 +0100</pubDate><category>Music</category><link>http://www.mininova.org/tor/13203094</link><enclosure url="http://www.mininova.org/get/13203094" length="151207325" type="application/x-bittorrent" /><description><![CDATA[
-      Category: <a href="http://www.mininova.org/cat/5">Music</a><br />
-      Subcategory: <a href="http://www.mininova.org/sub/60">Drum N Bass</a><br />
-      Size: 144.2&nbsp;megabyte<br />
-      Ratio: 4 seeds, 4 leechers<br />
-      Language: <img src="http://mnstat.com./images/flags/us.gif" /> English<br />
-      Uploaded by: <a href="http://www.mininova.org/user/Dexcell">Dexcell</a>]]></description></item><item><title>Various Artists - Themeless 2 (BM004) BREAKCORE</title><guid isPermaLink='true'>http://www.mininova.org/tor/13203093</guid><pubDate>Mon, 20 Feb 2012 15:19:06 +0100</pubDate><category>Music</category><link>http://www.mininova.org/tor/13203093</link><enclosure url="http://www.mininova.org/get/13203093" length="385796266" type="application/x-bittorrent" /><description><![CDATA[
-      Category: <a href="http://www.mininova.org/cat/5">Music</a><br />
-      Subcategory: <a href="http://www.mininova.org/sub/61">Electronic</a><br />
-      Size: 367.92&nbsp;megabyte<br />
-      Ratio: 1 seeds, 6 leechers<br />
-      Language: Unknown<br />
-      Uploaded by: <a href="http://www.mininova.org/user/breakcorenl">breakcorenl</a>]]></description></item><item><title>Various Artists - Themeless (BM003) BREAKCORE</title><guid isPermaLink='true'>http://www.mininova.org/tor/13203092</guid><pubDate>Mon, 20 Feb 2012 15:06:02 +0100</pubDate><category>Music</category><link>http://www.mininova.org/tor/13203092</link><enclosure url="http://www.mininova.org/get/13203092" length="386277034" type="application/x-bittorrent" /><description><![CDATA[
-      Category: <a href="http://www.mininova.org/cat/5">Music</a><br />
-      Subcategory: <a href="http://www.mininova.org/sub/61">Electronic</a><br />
-      Size: 368.38&nbsp;megabyte<br />
-      Ratio: 1 seeds, 6 leechers<br />
-      Language: Unknown<br />
-      Uploaded by: <a href="http://www.mininova.org/user/breakcorenl">breakcorenl</a>]]></description></item><item><title>Various Artists - No Time To Waste (BM001) BREAKCORE</title><guid isPermaLink='true'>http://www.mininova.org/tor/13203091</guid><pubDate>Mon, 20 Feb 2012 14:38:24 +0100</pubDate><category>Music</category><link>http://www.mininova.org/tor/13203091</link><enclosure url="http://www.mininova.org/get/13203091" length="51020455" type="application/x-bittorrent" /><description><![CDATA[
-      Category: <a href="http://www.mininova.org/cat/5">Music</a><br />
-      Subcategory: <a href="http://www.mininova.org/sub/61">Electronic</a><br />
-      Size: 48.66&nbsp;megabyte<br />
-      Ratio: 3 seeds, 4 leechers<br />
-      Language: Unknown<br />
-      Uploaded by: <a href="http://www.mininova.org/user/breakcorenl">breakcorenl</a>]]></description></item><item><title>Luke Meadows House Selection Volume 20 (Daft Punk, MAW, Spen, Chocolate Puma, Gel Abril, +more)</title><guid isPermaLink='true'>http://www.mininova.org/tor/13203090</guid><pubDate>Mon, 20 Feb 2012 12:04:53 +0100</pubDate><category>Music</category><link>http://www.mininova.org/tor/13203090</link><enclosure url="http://www.mininova.org/get/13203090" length="115217002" type="application/x-bittorrent" /><description><![CDATA[
-      Category: <a href="http://www.mininova.org/cat/5">Music</a><br />
-      Subcategory: <a href="http://www.mininova.org/sub/2">Trance / House / Dance</a><br />
-      Size: 109.88&nbsp;megabyte<br />
-      Ratio: 5 seeds, 5 leechers<br />
-      Language: Unknown<br />
-      Uploaded by: <a href="http://www.mininova.org/user/DJ-LukeMeadows">DJ-LukeMeadows</a>]]></description></item><item><title>Luke Meadows House Selection Volume 21 (Martin Solveig, Spen, Yass, Axwell, Bob Sinclar, ATFC +more)</title><guid isPermaLink='true'>http://www.mininova.org/tor/13203089</guid><pubDate>Mon, 20 Feb 2012 11:56:56 +0100</pubDate><category>Music</category><link>http://www.mininova.org/tor/13203089</link><enclosure url="http://www.mininova.org/get/13203089" length="111275438" type="application/x-bittorrent" /><description><![CDATA[
-      Category: <a href="http://www.mininova.org/cat/5">Music</a><br />
-      Subcategory: <a href="http://www.mininova.org/sub/2">Trance / House / Dance</a><br />
-      Size: 106.12&nbsp;megabyte<br />
-      Ratio: 9 seeds, 4 leechers<br />
-      Language: Unknown<br />
-      Uploaded by: <a href="http://www.mininova.org/user/DJ-LukeMeadows">DJ-LukeMeadows</a>]]></description></item><item><title>Dexcell - October TwentyEleven Mix</title><guid isPermaLink='true'>http://www.mininova.org/tor/13203088</guid><pubDate>Mon, 20 Feb 2012 11:54:08 +0100</pubDate><category>Music</category><link>http://www.mininova.org/tor/13203088</link><enclosure url="http://www.mininova.org/get/13203088" length="120841478" type="application/x-bittorrent" /><description><![CDATA[
-      Category: <a href="http://www.mininova.org/cat/5">Music</a><br />
-      Subcategory: <a href="http://www.mininova.org/sub/60">Drum N Bass</a><br />
-      Size: 115.24&nbsp;megabyte<br />
-      Ratio: 3 seeds, 4 leechers<br />
-      Language: <img src="http://mnstat.com./images/flags/us.gif" /> English<br />
-      Uploaded by: <a href="http://www.mininova.org/user/Dexcell">Dexcell</a>]]></description></item><item><title>Luke Meadows House Selection Volume 91 (Pleasurekraft, Eats Everything, Lovebirds, Redondo Sideburn)</title><guid isPermaLink='true'>http://www.mininova.org/tor/13203087</guid><pubDate>Mon, 20 Feb 2012 10:29:32 +0100</pubDate><category>Music</category><link>http://www.mininova.org/tor/13203087</link><enclosure url="http://www.mininova.org/get/13203087" length="76044614" type="application/x-bittorrent" /><description><![CDATA[
-      Category: <a href="http://www.mininova.org/cat/5">Music</a><br />
-      Subcategory: <a href="http://www.mininova.org/sub/2">Trance / House / Dance</a><br />
-      Size: 72.52&nbsp;megabyte<br />
-      Ratio: 4 seeds, 6 leechers<br />
-      Language: Unknown<br />
-      Uploaded by: <a href="http://www.mininova.org/user/DJ-LukeMeadows">DJ-LukeMeadows</a>]]></description></item><item><title>Dexcell - September TwentyEleven Mix</title><guid isPermaLink='true'>http://www.mininova.org/tor/13203086</guid><pubDate>Mon, 20 Feb 2012 10:09:59 +0100</pubDate><category>Music</category><link>http://www.mininova.org/tor/13203086</link><enclosure url="http://www.mininova.org/get/13203086" length="129071407" type="application/x-bittorrent" /><description><![CDATA[
-      Category: <a href="http://www.mininova.org/cat/5">Music</a><br />
-      Subcategory: <a href="http://www.mininova.org/sub/60">Drum N Bass</a><br />
-      Size: 123.09&nbsp;megabyte<br />
-      Ratio: 2 seeds, 4 leechers<br />
-      Language: <img src="http://mnstat.com./images/flags/us.gif" /> English<br />
-      Uploaded by: <a href="http://www.mininova.org/user/Dexcell">Dexcell</a>]]></description></item><item><title>OPRACHINA The Jazz Farm</title><guid isPermaLink='true'>http://www.mininova.org/tor/13203085</guid><pubDate>Sun, 19 Feb 2012 22:05:49 +0100</pubDate><category>Music</category><link>http://www.mininova.org/tor/13203085</link><enclosure url="http://www.mininova.org/get/13203085" length="48885216" type="application/x-bittorrent" /><description><![CDATA[
-      Category: <a href="http://www.mininova.org/cat/5">Music</a><br />
-      Subcategory: <a href="http://www.mininova.org/sub/66">Jazz</a><br />
-      Size: 46.62&nbsp;megabyte<br />
-      Ratio: 7 seeds, 5 leechers<br />
-      Language: <img src="http://mnstat.com./images/flags/us.gif" /> English<br />
-      Uploaded by: <a href="http://www.mininova.org/user/bluesbomb">bluesbomb</a>]]></description></item><item><title>00x  (self titled EP)</title><guid isPermaLink='true'>http://www.mininova.org/tor/13203084</guid><pubDate>Sun, 19 Feb 2012 20:31:16 +0100</pubDate><category>Music</category><link>http://www.mininova.org/tor/13203084</link><enclosure url="http://www.mininova.org/get/13203084" length="40100826" type="application/x-bittorrent" /><description><![CDATA[
-      Category: <a href="http://www.mininova.org/cat/5">Music</a><br />
-      Subcategory: <a href="http://www.mininova.org/sub/61">Electronic</a><br />
-      Size: 38.24&nbsp;megabyte<br />
-      Ratio: 2 seeds, 4 leechers<br />
-      Language: <img src="http://mnstat.com./images/flags/us.gif" /> English<br />
-      Uploaded by: <a href="http://www.mininova.org/user/cOmaWrek">cOmaWrek</a>]]></description></item><item><title>Abstract Assassinator - Rising EP</title><guid isPermaLink='true'>http://www.mininova.org/tor/13203083</guid><pubDate>Sun, 19 Feb 2012 16:17:42 +0100</pubDate><category>Music</category><link>http://www.mininova.org/tor/13203083</link><enclosure url="http://www.mininova.org/get/13203083" length="25397337" type="application/x-bittorrent" /><description><![CDATA[
-      Category: <a href="http://www.mininova.org/cat/5">Music</a><br />
-      Subcategory: <a href="http://www.mininova.org/sub/61">Electronic</a><br />
-      Size: 24.22&nbsp;megabyte<br />
-      Ratio: 3 seeds, 5 leechers<br />
-      Language: Unknown<br />
-      Uploaded by: <a href="http://www.mininova.org/user/Abstractos">Abstractos</a>]]></description></item><item><title>VirtualBox - PeppermintOS Two Amd64 VirtualBox Virtual Appliance - [VirtualBoxImages.com]</title><guid isPermaLink='true'>http://www.mininova.org/tor/13203082</guid><pubDate>Sun, 19 Feb 2012 15:33:43 +0100</pubDate><category>Software</category><link>http://www.mininova.org/tor/13203082</link><enclosure url="http://www.mininova.org/get/13203082" length="488916583" type="application/x-bittorrent" /><description><![CDATA[
-      Category: <a href="http://www.mininova.org/cat/7">Software</a><br />
-      Subcategory: <a href="http://www.mininova.org/sub/17">GNU/Linux</a><br />
-      Size: 466.27&nbsp;megabyte<br />
-      Ratio: 6 seeds, 7 leechers<br />
-      Language: <img src="http://mnstat.com./images/flags/us.gif" /> English<br />
-      Uploaded by: <a href="http://www.mininova.org/user/veeDee-Eyes">veeDee-Eyes</a>]]></description></item><item><title>[AUDCST063] Affix Nail - Time's Up EP (electronica, industrial, drum&#38;bass [320kbps])</title><guid isPermaLink='true'>http://www.mininova.org/tor/13203081</guid><pubDate>Sun, 19 Feb 2012 15:11:01 +0100</pubDate><category>Music</category><link>http://www.mininova.org/tor/13203081</link><enclosure url="http://www.mininova.org/get/13203081" length="50025383" type="application/x-bittorrent" /><description><![CDATA[
-      Category: <a href="http://www.mininova.org/cat/5">Music</a><br />
-      Subcategory: <a href="http://www.mininova.org/sub/61">Electronic</a><br />
-      Size: 47.71&nbsp;megabyte<br />
-      Ratio: 3 seeds, 5 leechers<br />
-      Language: Unknown<br />
-      Uploaded by: <a href="http://www.mininova.org/user/sonicadam123">sonicadam123</a>]]></description></item>
-      </channel>
-    </rss>
diff -ruN libtorrent-libtorrent_0_16_5/test/pb.xml libtorrent/test/pb.xml
--- libtorrent-libtorrent_0_16_5/test/pb.xml	2012-10-23 12:23:09.000000000 +0800
+++ libtorrent/test/pb.xml	1970-01-01 08:00:00.000000000 +0800
@@ -1,855 +0,0 @@
-<?xml version='1.0' encoding='UTF-8' ?>
-<!DOCTYPE torrent PUBLIC "-//bitTorrent//DTD torrent 0.1//EN" "http://xmlns.ezrss.it/0.1/dtd/">
-<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/">
-	<channel>
-		<title>The Pirate Bay - Audio</title>
-		<link>http://thepiratebay.se</link>
-		<description>The newest torrents from The Pirate Bay</description>
-		<language>en</language>
-		<pubDate>Tue, 21 Feb 2012 02:18:01 +0100</pubDate>
-		<lastBuildDate>Tue, 21 Feb 2012 02:18:01 +0100</lastBuildDate>
-		<docs>http://blogs.law.harvard.edu/tech/rss</docs>
-		<generator>TPB RSS Generator 1.2</generator>
-
-		<item>
-			<title><![CDATA[Thompson Twins - 1989 - Big Trash [MP3]]]></title>
-			<link>magnet:?xt=urn:btih:FD4CDDB7BBE722D17A018EFD875EB0695ED7159C&dn=Thompson+Twins+-+1989+-+Big+Trash+%5BMP3%5D</link>
-			<comments>http://thepiratebay.se/torrent/7047021</comments>
-			<pubDate>Tue, 21 Feb 2012 00:16:01 +0100</pubDate>
-			<category domain="http://thepiratebay.se/browse/101"><![CDATA[Audio / Music]]></category>
-			<dc:creator><![CDATA[guguilatin]]></dc:creator>
-			<guid>http://thepiratebay.se/torrent/7047021/</guid>
-			<torrent xmlns="http://xmlns.ezrss.it/0.1/">
-				<contentLength>100160904</contentLength>
-				<infoHash>FD4CDDB7BBE722D17A018EFD875EB0695ED7159C</infoHash>
-				<magnetURI><![CDATA[magnet:?xt=urn:btih:FD4CDDB7BBE722D17A018EFD875EB0695ED7159C&dn=Thompson+Twins+-+1989+-+Big+Trash+%5BMP3%5D]]></magnetURI>
-			</torrent>
-		</item>
-		<item>
-			<title><![CDATA[Best of Sinners Crossroads reseed]]></title>
-			<link>magnet:?xt=urn:btih:94382555F8AAC3F7CB7220CAFE1B4CDC9F24D3EA&dn=Best+of+Sinners+Crossroads+reseed</link>
-			<comments>http://thepiratebay.se/torrent/7047018</comments>
-			<pubDate>Tue, 21 Feb 2012 00:15:35 +0100</pubDate>
-			<category domain="http://thepiratebay.se/browse/101"><![CDATA[Audio / Music]]></category>
-			<dc:creator><![CDATA[PhlamingoPhairy]]></dc:creator>
-			<guid>http://thepiratebay.se/torrent/7047018/</guid>
-			<torrent xmlns="http://xmlns.ezrss.it/0.1/">
-				<contentLength>168327476</contentLength>
-				<infoHash>94382555F8AAC3F7CB7220CAFE1B4CDC9F24D3EA</infoHash>
-				<magnetURI><![CDATA[magnet:?xt=urn:btih:94382555F8AAC3F7CB7220CAFE1B4CDC9F24D3EA&dn=Best+of+Sinners+Crossroads+reseed]]></magnetURI>
-			</torrent>
-		</item>
-		<item>
-			<title><![CDATA[Francesca Michielin (Distratto) 2011 [mp3]]]></title>
-			<link>magnet:?xt=urn:btih:DD24371F490DF246DCE05B0EE878B59C8F47125C&dn=Francesca+Michielin+%28Distratto%29+2011+%5Bmp3%5D</link>
-			<comments>http://thepiratebay.se/torrent/7046994</comments>
-			<pubDate>Tue, 21 Feb 2012 00:08:00 +0100</pubDate>
-			<category domain="http://thepiratebay.se/browse/101"><![CDATA[Audio / Music]]></category>
-			<dc:creator><![CDATA[lejipfox]]></dc:creator>
-			<guid>http://thepiratebay.se/torrent/7046994/</guid>
-			<torrent xmlns="http://xmlns.ezrss.it/0.1/">
-				<contentLength>11458750</contentLength>
-				<infoHash>DD24371F490DF246DCE05B0EE878B59C8F47125C</infoHash>
-				<magnetURI><![CDATA[magnet:?xt=urn:btih:DD24371F490DF246DCE05B0EE878B59C8F47125C&dn=Francesca+Michielin+%28Distratto%29+2011+%5Bmp3%5D]]></magnetURI>
-			</torrent>
-		</item>
-		<item>
-			<title><![CDATA[Ridddim Pack (December 2011) {by gtyouth}]]></title>
-			<link>magnet:?xt=urn:btih:4A8CD595283BE07E15100D429AD2D66D29C97908&dn=Ridddim+Pack+%28December+2011%29+%7Bby+gtyouth%7D</link>
-			<comments>http://thepiratebay.se/torrent/7046981</comments>
-			<pubDate>Tue, 21 Feb 2012 00:04:04 +0100</pubDate>
-			<category domain="http://thepiratebay.se/browse/199"><![CDATA[Audio / Other]]></category>
-			<dc:creator><![CDATA[gtyouth]]></dc:creator>
-			<guid>http://thepiratebay.se/torrent/7046981/</guid>
-			<torrent xmlns="http://xmlns.ezrss.it/0.1/">
-				<contentLength>2359156334</contentLength>
-				<infoHash>4A8CD595283BE07E15100D429AD2D66D29C97908</infoHash>
-				<magnetURI><![CDATA[magnet:?xt=urn:btih:4A8CD595283BE07E15100D429AD2D66D29C97908&dn=Ridddim+Pack+%28December+2011%29+%7Bby+gtyouth%7D]]></magnetURI>
-			</torrent>
-		</item>
-		<item>
-			<title><![CDATA[Benito Di Paula - 1974 - Gravado Ao Vivo (LP Rip FLAC) [jarax4u]]]></title>
-			<link>magnet:?xt=urn:btih:A85A6DFD01B374841855BF4717B22DF431AA130D&dn=Benito+Di+Paula+-+1974+-+Gravado+Ao+Vivo+%28LP+Rip+FLAC%29+%5Bjarax4u%5D</link>
-			<comments>http://thepiratebay.se/torrent/7046967</comments>
-			<pubDate>Mon, 20 Feb 2012 23:56:54 +0100</pubDate>
-			<category domain="http://thepiratebay.se/browse/104"><![CDATA[Audio / FLAC]]></category>
-			<dc:creator><![CDATA[jarax4u]]></dc:creator>
-			<guid>http://thepiratebay.se/torrent/7046967/</guid>
-			<torrent xmlns="http://xmlns.ezrss.it/0.1/">
-				<contentLength>247681857</contentLength>
-				<infoHash>A85A6DFD01B374841855BF4717B22DF431AA130D</infoHash>
-				<magnetURI><![CDATA[magnet:?xt=urn:btih:A85A6DFD01B374841855BF4717B22DF431AA130D&dn=Benito+Di+Paula+-+1974+-+Gravado+Ao+Vivo+%28LP+Rip+FLAC%29+%5Bjarax4u%5D]]></magnetURI>
-			</torrent>
-		</item>
-		<item>
-			<title><![CDATA[Benito Di Paula - 1974 - Gravado Ao Vivo (LP Rip OGG at 500) [ja]]></title>
-			<link>magnet:?xt=urn:btih:C54BB60E1F8F5D5944C98814F5FB3CBCBE61FC72&dn=Benito+Di+Paula+-+1974+-+Gravado+Ao+Vivo+%28LP+Rip+OGG+at+500%29+%5Bja</link>
-			<comments>http://thepiratebay.se/torrent/7046953</comments>
-			<pubDate>Mon, 20 Feb 2012 23:51:44 +0100</pubDate>
-			<category domain="http://thepiratebay.se/browse/199"><![CDATA[Audio / Other]]></category>
-			<dc:creator><![CDATA[jarax4u]]></dc:creator>
-			<guid>http://thepiratebay.se/torrent/7046953/</guid>
-			<torrent xmlns="http://xmlns.ezrss.it/0.1/">
-				<contentLength>173305077</contentLength>
-				<infoHash>C54BB60E1F8F5D5944C98814F5FB3CBCBE61FC72</infoHash>
-				<magnetURI><![CDATA[magnet:?xt=urn:btih:C54BB60E1F8F5D5944C98814F5FB3CBCBE61FC72&dn=Benito+Di+Paula+-+1974+-+Gravado+Ao+Vivo+%28LP+Rip+OGG+at+500%29+%5Bja]]></magnetURI>
-			</torrent>
-		</item>
-		<item>
-			<title><![CDATA[Benito Di Paula - 1974 - Gravado Ao Vivo (LP Rip MP3 at 320) [ja]]></title>
-			<link>magnet:?xt=urn:btih:A924A364F27732C4944CDB6E2AF80B7AB36F6BEB&dn=Benito+Di+Paula+-+1974+-+Gravado+Ao+Vivo+%28LP+Rip+MP3+at+320%29+%5Bja</link>
-			<comments>http://thepiratebay.se/torrent/7046929</comments>
-			<pubDate>Mon, 20 Feb 2012 23:44:40 +0100</pubDate>
-			<category domain="http://thepiratebay.se/browse/199"><![CDATA[Audio / Other]]></category>
-			<dc:creator><![CDATA[jarax4u]]></dc:creator>
-			<guid>http://thepiratebay.se/torrent/7046929/</guid>
-			<torrent xmlns="http://xmlns.ezrss.it/0.1/">
-				<contentLength>111035604</contentLength>
-				<infoHash>A924A364F27732C4944CDB6E2AF80B7AB36F6BEB</infoHash>
-				<magnetURI><![CDATA[magnet:?xt=urn:btih:A924A364F27732C4944CDB6E2AF80B7AB36F6BEB&dn=Benito+Di+Paula+-+1974+-+Gravado+Ao+Vivo+%28LP+Rip+MP3+at+320%29+%5Bja]]></magnetURI>
-			</torrent>
-		</item>
-		<item>
-			<title><![CDATA[Tears for Fears - Songs From the Big Chair[1984]1998[EAC-FLAC](o]]></title>
-			<link>magnet:?xt=urn:btih:BC7A54607B625B512B7491C30A732E65556DB494&dn=Tears+for+Fears+-+Songs+From+the+Big+Chair%5B1984%5D1998%5BEAC-FLAC%5D%28o</link>
-			<comments>http://thepiratebay.se/torrent/7046926</comments>
-			<pubDate>Mon, 20 Feb 2012 23:44:09 +0100</pubDate>
-			<category domain="http://thepiratebay.se/browse/104"><![CDATA[Audio / FLAC]]></category>
-			<dc:creator><![CDATA[oneanight]]></dc:creator>
-			<guid>http://thepiratebay.se/torrent/7046926/</guid>
-			<torrent xmlns="http://xmlns.ezrss.it/0.1/">
-				<contentLength>386198104</contentLength>
-				<infoHash>BC7A54607B625B512B7491C30A732E65556DB494</infoHash>
-				<magnetURI><![CDATA[magnet:?xt=urn:btih:BC7A54607B625B512B7491C30A732E65556DB494&dn=Tears+for+Fears+-+Songs+From+the+Big+Chair%5B1984%5D1998%5BEAC-FLAC%5D%28o]]></magnetURI>
-			</torrent>
-		</item>
-		<item>
-			<title><![CDATA[The Peter Schiff Show - 2012 Feb 20 MO [sebaygo1]]]></title>
-			<link>magnet:?xt=urn:btih:5E18AD4066DE9F4906F49D0A08A79F858C87CFE8&dn=The+Peter+Schiff+Show+-+2012+Feb+20+MO+%5Bsebaygo1%5D</link>
-			<comments>http://thepiratebay.se/torrent/7046904</comments>
-			<pubDate>Mon, 20 Feb 2012 23:36:33 +0100</pubDate>
-			<category domain="http://thepiratebay.se/browse/199"><![CDATA[Audio / Other]]></category>
-			<dc:creator><![CDATA[sebaygo1]]></dc:creator>
-			<guid>http://thepiratebay.se/torrent/7046904/</guid>
-			<torrent xmlns="http://xmlns.ezrss.it/0.1/">
-				<contentLength>29569957</contentLength>
-				<infoHash>5E18AD4066DE9F4906F49D0A08A79F858C87CFE8</infoHash>
-				<magnetURI><![CDATA[magnet:?xt=urn:btih:5E18AD4066DE9F4906F49D0A08A79F858C87CFE8&dn=The+Peter+Schiff+Show+-+2012+Feb+20+MO+%5Bsebaygo1%5D]]></magnetURI>
-			</torrent>
-		</item>
-		<item>
-			<title><![CDATA[Fun - We Are Young (ft. Janelle Monae)]]></title>
-			<link>magnet:?xt=urn:btih:396C2795A4268DA6E465DEE70443AF8CC3A7EE98&dn=Fun+-+We+Are+Young+%28ft.+Janelle+Monae%29</link>
-			<comments>http://thepiratebay.se/torrent/7046897</comments>
-			<pubDate>Mon, 20 Feb 2012 23:35:31 +0100</pubDate>
-			<category domain="http://thepiratebay.se/browse/101"><![CDATA[Audio / Music]]></category>
-			<dc:creator><![CDATA[lejipfox]]></dc:creator>
-			<guid>http://thepiratebay.se/torrent/7046897/</guid>
-			<torrent xmlns="http://xmlns.ezrss.it/0.1/">
-				<contentLength>7481750</contentLength>
-				<infoHash>396C2795A4268DA6E465DEE70443AF8CC3A7EE98</infoHash>
-				<magnetURI><![CDATA[magnet:?xt=urn:btih:396C2795A4268DA6E465DEE70443AF8CC3A7EE98&dn=Fun+-+We+Are+Young+%28ft.+Janelle+Monae%29]]></magnetURI>
-			</torrent>
-		</item>
-		<item>
-			<title><![CDATA[Various - 1999 - The Music of Friedrich Nietzsche (2-CD) [TQMP]]]></title>
-			<link>magnet:?xt=urn:btih:657357B61CAFC3873B31C6D2E0AC7527FE1727E3&dn=Various+-+1999+-+The+Music+of+Friedrich+Nietzsche+%282-CD%29+%5BTQMP%5D</link>
-			<comments>http://thepiratebay.se/torrent/7046877</comments>
-			<pubDate>Mon, 20 Feb 2012 23:27:22 +0100</pubDate>
-			<category domain="http://thepiratebay.se/browse/104"><![CDATA[Audio / FLAC]]></category>
-			<dc:creator><![CDATA[quose]]></dc:creator>
-			<guid>http://thepiratebay.se/torrent/7046877/</guid>
-			<torrent xmlns="http://xmlns.ezrss.it/0.1/">
-				<contentLength>391679383</contentLength>
-				<infoHash>657357B61CAFC3873B31C6D2E0AC7527FE1727E3</infoHash>
-				<magnetURI><![CDATA[magnet:?xt=urn:btih:657357B61CAFC3873B31C6D2E0AC7527FE1727E3&dn=Various+-+1999+-+The+Music+of+Friedrich+Nietzsche+%282-CD%29+%5BTQMP%5D]]></magnetURI>
-			</torrent>
-		</item>
-		<item>
-			<title><![CDATA[Jeff Healy Band - See The Light (1988)]]></title>
-			<link>magnet:?xt=urn:btih:4BCDB15C0A807A933F3CC8AE2B3D028A37E7A1B2&dn=Jeff+Healy+Band+-+See+The+Light+%281988%29</link>
-			<comments>http://thepiratebay.se/torrent/7046832</comments>
-			<pubDate>Mon, 20 Feb 2012 23:16:11 +0100</pubDate>
-			<category domain="http://thepiratebay.se/browse/101"><![CDATA[Audio / Music]]></category>
-			<dc:creator><![CDATA[RMG02]]></dc:creator>
-			<guid>http://thepiratebay.se/torrent/7046832/</guid>
-			<torrent xmlns="http://xmlns.ezrss.it/0.1/">
-				<contentLength>119394444</contentLength>
-				<infoHash>4BCDB15C0A807A933F3CC8AE2B3D028A37E7A1B2</infoHash>
-				<magnetURI><![CDATA[magnet:?xt=urn:btih:4BCDB15C0A807A933F3CC8AE2B3D028A37E7A1B2&dn=Jeff+Healy+Band+-+See+The+Light+%281988%29]]></magnetURI>
-			</torrent>
-		</item>
-		<item>
-			<title><![CDATA[The Dennis Prager Radio Show FEB-20-2012 MON  CF  64K]]></title>
-			<link>magnet:?xt=urn:btih:7C28016182EF42DDC537B2B3294EC38AF2301BF2&dn=The+Dennis+Prager+Radio+Show+FEB-20-2012+MON++CF++64K</link>
-			<comments>http://thepiratebay.se/torrent/7046777</comments>
-			<pubDate>Mon, 20 Feb 2012 23:06:07 +0100</pubDate>
-			<category domain="http://thepiratebay.se/browse/199"><![CDATA[Audio / Other]]></category>
-			<dc:creator><![CDATA[CAPTAIN7SS]]></dc:creator>
-			<guid>http://thepiratebay.se/torrent/7046777/</guid>
-			<torrent xmlns="http://xmlns.ezrss.it/0.1/">
-				<contentLength>51050077</contentLength>
-				<infoHash>7C28016182EF42DDC537B2B3294EC38AF2301BF2</infoHash>
-				<magnetURI><![CDATA[magnet:?xt=urn:btih:7C28016182EF42DDC537B2B3294EC38AF2301BF2&dn=The+Dennis+Prager+Radio+Show+FEB-20-2012+MON++CF++64K]]></magnetURI>
-			</torrent>
-		</item>
-		<item>
-			<title><![CDATA[The Rush Liimbaugh Radio Show FEB-20-2012 MON KCOL DENVER LIVE 4]]></title>
-			<link>magnet:?xt=urn:btih:A914F54D242A566632D511C82377A890BBEC5831&dn=The+Rush+Liimbaugh+Radio+Show+FEB-20-2012+MON+KCOL+DENVER+LIVE+4</link>
-			<comments>http://thepiratebay.se/torrent/7046768</comments>
-			<pubDate>Mon, 20 Feb 2012 23:03:43 +0100</pubDate>
-			<category domain="http://thepiratebay.se/browse/199"><![CDATA[Audio / Other]]></category>
-			<dc:creator><![CDATA[CAPTAIN7SS]]></dc:creator>
-			<guid>http://thepiratebay.se/torrent/7046768/</guid>
-			<torrent xmlns="http://xmlns.ezrss.it/0.1/">
-				<contentLength>57073704</contentLength>
-				<infoHash>A914F54D242A566632D511C82377A890BBEC5831</infoHash>
-				<magnetURI><![CDATA[magnet:?xt=urn:btih:A914F54D242A566632D511C82377A890BBEC5831&dn=The+Rush+Liimbaugh+Radio+Show+FEB-20-2012+MON+KCOL+DENVER+LIVE+4]]></magnetURI>
-			</torrent>
-		</item>
-		<item>
-			<title><![CDATA[Dj Fletch - Southern Swag Vol.1.Mixtape-2012]]></title>
-			<link>magnet:?xt=urn:btih:01D24611657E653CB0761EA126267F2D112E2DCD&dn=Dj+Fletch+-+Southern+Swag+Vol.1.Mixtape-2012</link>
-			<comments>http://thepiratebay.se/torrent/7046753</comments>
-			<pubDate>Mon, 20 Feb 2012 22:57:27 +0100</pubDate>
-			<category domain="http://thepiratebay.se/browse/101"><![CDATA[Audio / Music]]></category>
-			<dc:creator><![CDATA[boy74]]></dc:creator>
-			<guid>http://thepiratebay.se/torrent/7046753/</guid>
-			<torrent xmlns="http://xmlns.ezrss.it/0.1/">
-				<contentLength>107170413</contentLength>
-				<infoHash>01D24611657E653CB0761EA126267F2D112E2DCD</infoHash>
-				<magnetURI><![CDATA[magnet:?xt=urn:btih:01D24611657E653CB0761EA126267F2D112E2DCD&dn=Dj+Fletch+-+Southern+Swag+Vol.1.Mixtape-2012]]></magnetURI>
-			</torrent>
-		</item>
-		<item>
-			<title><![CDATA[Carny (Original Mix) - Pleasurekraft (HD).mp4]]></title>
-			<link>magnet:?xt=urn:btih:833E639E4B6B6C00DB671C29BBCED7F2090C9D79&dn=Carny+%28Original+Mix%29+-+Pleasurekraft+%28HD%29.mp4</link>
-			<comments>http://thepiratebay.se/torrent/7046716</comments>
-			<pubDate>Mon, 20 Feb 2012 22:40:22 +0100</pubDate>
-			<category domain="http://thepiratebay.se/browse/101"><![CDATA[Audio / Music]]></category>
-			<dc:creator><![CDATA[manguila]]></dc:creator>
-			<guid>http://thepiratebay.se/torrent/7046716/</guid>
-			<torrent xmlns="http://xmlns.ezrss.it/0.1/">
-				<contentLength>11080000</contentLength>
-				<infoHash>833E639E4B6B6C00DB671C29BBCED7F2090C9D79</infoHash>
-				<magnetURI><![CDATA[magnet:?xt=urn:btih:833E639E4B6B6C00DB671C29BBCED7F2090C9D79&dn=Carny+%28Original+Mix%29+-+Pleasurekraft+%28HD%29.mp4]]></magnetURI>
-			</torrent>
-		</item>
-		<item>
-			<title><![CDATA[Dripping Wet - Cherie Lily 2 min 16 sec Teaser.mp3]]></title>
-			<link>magnet:?xt=urn:btih:07F07C1D5B4F2C950091B871265D47070292092D&dn=Dripping+Wet+-+Cherie+Lily+2+min+16+sec+Teaser.mp3</link>
-			<comments>http://thepiratebay.se/torrent/7046710</comments>
-			<pubDate>Mon, 20 Feb 2012 22:37:04 +0100</pubDate>
-			<category domain="http://thepiratebay.se/browse/101"><![CDATA[Audio / Music]]></category>
-			<dc:creator><![CDATA[shallow2]]></dc:creator>
-			<guid>http://thepiratebay.se/torrent/7046710/</guid>
-			<torrent xmlns="http://xmlns.ezrss.it/0.1/">
-				<contentLength>3279744</contentLength>
-				<infoHash>07F07C1D5B4F2C950091B871265D47070292092D</infoHash>
-				<magnetURI><![CDATA[magnet:?xt=urn:btih:07F07C1D5B4F2C950091B871265D47070292092D&dn=Dripping+Wet+-+Cherie+Lily+2+min+16+sec+Teaser.mp3]]></magnetURI>
-			</torrent>
-		</item>
-		<item>
-			<title><![CDATA[Novena a Nuestra Se&amp;Atilde;&amp;plusmn;ora del Milagro [Santuario de]]></title>
-			<link>magnet:?xt=urn:btih:C656A86BF569892055C8C936F30C154EB25CE730&dn=Novena+a+Nuestra+Se%26Atilde%3B%26plusmn%3Bora+del+Milagro+%5BSantuario+de</link>
-			<comments>http://thepiratebay.se/torrent/7046708</comments>
-			<pubDate>Mon, 20 Feb 2012 22:36:47 +0100</pubDate>
-			<category domain="http://thepiratebay.se/browse/199"><![CDATA[Audio / Other]]></category>
-			<dc:creator><![CDATA[JorgeLuisMrtnz]]></dc:creator>
-			<guid>http://thepiratebay.se/torrent/7046708/</guid>
-			<torrent xmlns="http://xmlns.ezrss.it/0.1/">
-				<contentLength>10956667</contentLength>
-				<infoHash>C656A86BF569892055C8C936F30C154EB25CE730</infoHash>
-				<magnetURI><![CDATA[magnet:?xt=urn:btih:C656A86BF569892055C8C936F30C154EB25CE730&dn=Novena+a+Nuestra+Se%26Atilde%3B%26plusmn%3Bora+del+Milagro+%5BSantuario+de]]></magnetURI>
-			</torrent>
-		</item>
-		<item>
-			<title><![CDATA[Giorgia - Inevitabile [feat. Eros Ramazzotti]]]></title>
-			<link>magnet:?xt=urn:btih:BE03DC1E3785C7E339D21B974E96E5D01042A57D&dn=Giorgia+-+Inevitabile+%5Bfeat.+Eros+Ramazzotti%5D</link>
-			<comments>http://thepiratebay.se/torrent/7046705</comments>
-			<pubDate>Mon, 20 Feb 2012 22:19:34 +0100</pubDate>
-			<category domain="http://thepiratebay.se/browse/101"><![CDATA[Audio / Music]]></category>
-			<dc:creator><![CDATA[lejipfox]]></dc:creator>
-			<guid>http://thepiratebay.se/torrent/7046705/</guid>
-			<torrent xmlns="http://xmlns.ezrss.it/0.1/">
-				<contentLength>6326500</contentLength>
-				<infoHash>BE03DC1E3785C7E339D21B974E96E5D01042A57D</infoHash>
-				<magnetURI><![CDATA[magnet:?xt=urn:btih:BE03DC1E3785C7E339D21B974E96E5D01042A57D&dn=Giorgia+-+Inevitabile+%5Bfeat.+Eros+Ramazzotti%5D]]></magnetURI>
-			</torrent>
-		</item>
-		<item>
-			<title><![CDATA[Metodo.Linden-Ansiedad.Panico]]></title>
-			<link>magnet:?xt=urn:btih:C68147F63C1657E4E0C6A117A007606869157EF6&dn=Metodo.Linden-Ansiedad.Panico</link>
-			<comments>http://thepiratebay.se/torrent/7046681</comments>
-			<pubDate>Mon, 20 Feb 2012 22:03:44 +0100</pubDate>
-			<category domain="http://thepiratebay.se/browse/103"><![CDATA[Audio / Sound clips]]></category>
-			<dc:creator><![CDATA[guguilatin]]></dc:creator>
-			<guid>http://thepiratebay.se/torrent/7046681/</guid>
-			<torrent xmlns="http://xmlns.ezrss.it/0.1/">
-				<contentLength>161146505</contentLength>
-				<infoHash>C68147F63C1657E4E0C6A117A007606869157EF6</infoHash>
-				<magnetURI><![CDATA[magnet:?xt=urn:btih:C68147F63C1657E4E0C6A117A007606869157EF6&dn=Metodo.Linden-Ansiedad.Panico]]></magnetURI>
-			</torrent>
-		</item>
-		<item>
-			<title><![CDATA[Mat Zo Collection (256, 320 kbps)]]></title>
-			<link>magnet:?xt=urn:btih:C54504F241498252DBEA75EE538CDFB7B1AAE47F&dn=Mat+Zo+Collection+%28256%2C+320+kbps%29</link>
-			<comments>http://thepiratebay.se/torrent/7046672</comments>
-			<pubDate>Mon, 20 Feb 2012 21:56:18 +0100</pubDate>
-			<category domain="http://thepiratebay.se/browse/101"><![CDATA[Audio / Music]]></category>
-			<dc:creator><![CDATA[MitsEvX]]></dc:creator>
-			<guid>http://thepiratebay.se/torrent/7046672/</guid>
-			<torrent xmlns="http://xmlns.ezrss.it/0.1/">
-				<contentLength>326338340</contentLength>
-				<infoHash>C54504F241498252DBEA75EE538CDFB7B1AAE47F</infoHash>
-				<magnetURI><![CDATA[magnet:?xt=urn:btih:C54504F241498252DBEA75EE538CDFB7B1AAE47F&dn=Mat+Zo+Collection+%28256%2C+320+kbps%29]]></magnetURI>
-			</torrent>
-		</item>
-		<item>
-			<title><![CDATA[[House] Matt Darey - Nocturnal 341 (Joy Kitikonti guest mix)]]></title>
-			<link>magnet:?xt=urn:btih:4E7540D35479676E2F0B5C434C2876E89E00D6ED&dn=%5BHouse%5D+Matt+Darey+-+Nocturnal+341+%28Joy+Kitikonti+guest+mix%29</link>
-			<comments>http://thepiratebay.se/torrent/7046670</comments>
-			<pubDate>Mon, 20 Feb 2012 21:56:00 +0100</pubDate>
-			<category domain="http://thepiratebay.se/browse/101"><![CDATA[Audio / Music]]></category>
-			<dc:creator><![CDATA[promoparty]]></dc:creator>
-			<guid>http://thepiratebay.se/torrent/7046670/</guid>
-			<torrent xmlns="http://xmlns.ezrss.it/0.1/">
-				<contentLength>367543114</contentLength>
-				<infoHash>4E7540D35479676E2F0B5C434C2876E89E00D6ED</infoHash>
-				<magnetURI><![CDATA[magnet:?xt=urn:btih:4E7540D35479676E2F0B5C434C2876E89E00D6ED&dn=%5BHouse%5D+Matt+Darey+-+Nocturnal+341+%28Joy+Kitikonti+guest+mix%29]]></magnetURI>
-			</torrent>
-		</item>
-		<item>
-			<title><![CDATA[Bruce Springsteen - Wrecking Ball CDRip 2012 [Bubanee]]]></title>
-			<link>magnet:?xt=urn:btih:9211A0BF0C5B8989CACCF48734DCF8F0BD28F369&dn=Bruce+Springsteen+-+Wrecking+Ball+CDRip+2012+%5BBubanee%5D</link>
-			<comments>http://thepiratebay.se/torrent/7046657</comments>
-			<pubDate>Mon, 20 Feb 2012 21:47:42 +0100</pubDate>
-			<category domain="http://thepiratebay.se/browse/199"><![CDATA[Audio / Other]]></category>
-			<dc:creator><![CDATA[bubanee]]></dc:creator>
-			<guid>http://thepiratebay.se/torrent/7046657/</guid>
-			<torrent xmlns="http://xmlns.ezrss.it/0.1/">
-				<contentLength>98524959</contentLength>
-				<infoHash>9211A0BF0C5B8989CACCF48734DCF8F0BD28F369</infoHash>
-				<magnetURI><![CDATA[magnet:?xt=urn:btih:9211A0BF0C5B8989CACCF48734DCF8F0BD28F369&dn=Bruce+Springsteen+-+Wrecking+Ball+CDRip+2012+%5BBubanee%5D]]></magnetURI>
-			</torrent>
-		</item>
-		<item>
-			<title><![CDATA[Dana Winner - 2004 - Thank You For The Music DSM]]></title>
-			<link>magnet:?xt=urn:btih:CABE823C286BE13D07F902F0FA0864E055B0A32D&dn=Dana+Winner+-+2004+-+Thank+You+For+The+Music+DSM</link>
-			<comments>http://thepiratebay.se/torrent/7046656</comments>
-			<pubDate>Mon, 20 Feb 2012 21:46:40 +0100</pubDate>
-			<category domain="http://thepiratebay.se/browse/101"><![CDATA[Audio / Music]]></category>
-			<dc:creator><![CDATA[DeSmartlapMan]]></dc:creator>
-			<guid>http://thepiratebay.se/torrent/7046656/</guid>
-			<torrent xmlns="http://xmlns.ezrss.it/0.1/">
-				<contentLength>127056425</contentLength>
-				<infoHash>CABE823C286BE13D07F902F0FA0864E055B0A32D</infoHash>
-				<magnetURI><![CDATA[magnet:?xt=urn:btih:CABE823C286BE13D07F902F0FA0864E055B0A32D&dn=Dana+Winner+-+2004+-+Thank+You+For+The+Music+DSM]]></magnetURI>
-			</torrent>
-		</item>
-		<item>
-			<title><![CDATA[Dana Winner - 2004 - My Hart Is In Afrika DSM]]></title>
-			<link>magnet:?xt=urn:btih:573FFBE49484D8471FA4D3069550FD821F778519&dn=Dana+Winner+-+2004+-+My+Hart+Is+In+Afrika+DSM</link>
-			<comments>http://thepiratebay.se/torrent/7046651</comments>
-			<pubDate>Mon, 20 Feb 2012 21:42:30 +0100</pubDate>
-			<category domain="http://thepiratebay.se/browse/101"><![CDATA[Audio / Music]]></category>
-			<dc:creator><![CDATA[DeSmartlapMan]]></dc:creator>
-			<guid>http://thepiratebay.se/torrent/7046651/</guid>
-			<torrent xmlns="http://xmlns.ezrss.it/0.1/">
-				<contentLength>68741829</contentLength>
-				<infoHash>573FFBE49484D8471FA4D3069550FD821F778519</infoHash>
-				<magnetURI><![CDATA[magnet:?xt=urn:btih:573FFBE49484D8471FA4D3069550FD821F778519&dn=Dana+Winner+-+2004+-+My+Hart+Is+In+Afrika+DSM]]></magnetURI>
-			</torrent>
-		</item>
-		<item>
-			<title><![CDATA[Allman Brothers - Idlewild South [1970] 2007 [EAC - FLAC](oan) M]]></title>
-			<link>magnet:?xt=urn:btih:72158ED9C573AE3BD68079995FABB2BAE95C9C91&dn=Allman+Brothers+-+Idlewild+South+%5B1970%5D+2007+%5BEAC+-+FLAC%5D%28oan%29+M</link>
-			<comments>http://thepiratebay.se/torrent/7046649</comments>
-			<pubDate>Mon, 20 Feb 2012 21:41:32 +0100</pubDate>
-			<category domain="http://thepiratebay.se/browse/104"><![CDATA[Audio / FLAC]]></category>
-			<dc:creator><![CDATA[oneanight]]></dc:creator>
-			<guid>http://thepiratebay.se/torrent/7046649/</guid>
-			<torrent xmlns="http://xmlns.ezrss.it/0.1/">
-				<contentLength>211398584</contentLength>
-				<infoHash>72158ED9C573AE3BD68079995FABB2BAE95C9C91</infoHash>
-				<magnetURI><![CDATA[magnet:?xt=urn:btih:72158ED9C573AE3BD68079995FABB2BAE95C9C91&dn=Allman+Brothers+-+Idlewild+South+%5B1970%5D+2007+%5BEAC+-+FLAC%5D%28oan%29+M]]></magnetURI>
-			</torrent>
-		</item>
-		<item>
-			<title><![CDATA[Dana Winner - 2003 - M&amp;Atilde;&amp;curren;rchenland Der Gef&amp;Atilde;&amp;]]></title>
-			<link>magnet:?xt=urn:btih:45EF241A256C0300E21930AFD40021671A72627B&dn=Dana+Winner+-+2003+-+M%26Atilde%3B%26curren%3Brchenland+Der+Gef%26Atilde%3B%26</link>
-			<comments>http://thepiratebay.se/torrent/7046647</comments>
-			<pubDate>Mon, 20 Feb 2012 21:37:54 +0100</pubDate>
-			<category domain="http://thepiratebay.se/browse/101"><![CDATA[Audio / Music]]></category>
-			<dc:creator><![CDATA[DeSmartlapMan]]></dc:creator>
-			<guid>http://thepiratebay.se/torrent/7046647/</guid>
-			<torrent xmlns="http://xmlns.ezrss.it/0.1/">
-				<contentLength>61871857</contentLength>
-				<infoHash>45EF241A256C0300E21930AFD40021671A72627B</infoHash>
-				<magnetURI><![CDATA[magnet:?xt=urn:btih:45EF241A256C0300E21930AFD40021671A72627B&dn=Dana+Winner+-+2003+-+M%26Atilde%3B%26curren%3Brchenland+Der+Gef%26Atilde%3B%26]]></magnetURI>
-			</torrent>
-		</item>
-		<item>
-			<title><![CDATA[VA - Minimal Bounce (CLO08265) WEB 2012-ALKi]]></title>
-			<link>magnet:?xt=urn:btih:73DE1DEADB7EA648BAA9FFE8B412679B6C4744FC&dn=VA+-+Minimal+Bounce+%28CLO08265%29+WEB+2012-ALKi</link>
-			<comments>http://thepiratebay.se/torrent/7046645</comments>
-			<pubDate>Mon, 20 Feb 2012 21:36:46 +0100</pubDate>
-			<category domain="http://thepiratebay.se/browse/101"><![CDATA[Audio / Music]]></category>
-			<dc:creator><![CDATA[xtrancex]]></dc:creator>
-			<guid>http://thepiratebay.se/torrent/7046645/</guid>
-			<torrent xmlns="http://xmlns.ezrss.it/0.1/">
-				<contentLength>321376394</contentLength>
-				<infoHash>73DE1DEADB7EA648BAA9FFE8B412679B6C4744FC</infoHash>
-				<magnetURI><![CDATA[magnet:?xt=urn:btih:73DE1DEADB7EA648BAA9FFE8B412679B6C4744FC&dn=VA+-+Minimal+Bounce+%28CLO08265%29+WEB+2012-ALKi]]></magnetURI>
-			</torrent>
-		</item>
-		<item>
-			<title><![CDATA[[Trance] DJ Feel - TranceMission (16-02-2012)]]></title>
-			<link>magnet:?xt=urn:btih:220E08E138C513949F5E1C9E3AEE9AE07CD1FBB6&dn=%5BTrance%5D+DJ+Feel+-+TranceMission+%2816-02-2012%29</link>
-			<comments>http://thepiratebay.se/torrent/7046643</comments>
-			<pubDate>Mon, 20 Feb 2012 21:34:48 +0100</pubDate>
-			<category domain="http://thepiratebay.se/browse/101"><![CDATA[Audio / Music]]></category>
-			<dc:creator><![CDATA[promoparty]]></dc:creator>
-			<guid>http://thepiratebay.se/torrent/7046643/</guid>
-			<torrent xmlns="http://xmlns.ezrss.it/0.1/">
-				<contentLength>355707939</contentLength>
-				<infoHash>220E08E138C513949F5E1C9E3AEE9AE07CD1FBB6</infoHash>
-				<magnetURI><![CDATA[magnet:?xt=urn:btih:220E08E138C513949F5E1C9E3AEE9AE07CD1FBB6&dn=%5BTrance%5D+DJ+Feel+-+TranceMission+%2816-02-2012%29]]></magnetURI>
-			</torrent>
-		</item>
-		<item>
-			<title><![CDATA[Dana Winner - 2003 - 10 Jaar Het Allerbeste Van DSM]]></title>
-			<link>magnet:?xt=urn:btih:F2326F4DDC5CDC180DDBD0654DDCBA48893C403C&dn=Dana+Winner+-+2003+-+10+Jaar+Het+Allerbeste+Van+DSM</link>
-			<comments>http://thepiratebay.se/torrent/7046641</comments>
-			<pubDate>Mon, 20 Feb 2012 21:34:05 +0100</pubDate>
-			<category domain="http://thepiratebay.se/browse/101"><![CDATA[Audio / Music]]></category>
-			<dc:creator><![CDATA[DeSmartlapMan]]></dc:creator>
-			<guid>http://thepiratebay.se/torrent/7046641/</guid>
-			<torrent xmlns="http://xmlns.ezrss.it/0.1/">
-				<contentLength>71377941</contentLength>
-				<infoHash>F2326F4DDC5CDC180DDBD0654DDCBA48893C403C</infoHash>
-				<magnetURI><![CDATA[magnet:?xt=urn:btih:F2326F4DDC5CDC180DDBD0654DDCBA48893C403C&dn=Dana+Winner+-+2003+-+10+Jaar+Het+Allerbeste+Van+DSM]]></magnetURI>
-			</torrent>
-		</item>
-		<item>
-			<title><![CDATA[WebbyBoy - 303 (Funk, HipHop, Chill)]]></title>
-			<link>magnet:?xt=urn:btih:41E9A0D74DA0E419A3E2288F2C3470A40783A244&dn=WebbyBoy+-+303+%28Funk%2C+HipHop%2C+Chill%29</link>
-			<comments>http://thepiratebay.se/torrent/7046639</comments>
-			<pubDate>Mon, 20 Feb 2012 21:33:29 +0100</pubDate>
-			<category domain="http://thepiratebay.se/browse/199"><![CDATA[Audio / Other]]></category>
-			<dc:creator><![CDATA[niceneasyy]]></dc:creator>
-			<guid>http://thepiratebay.se/torrent/7046639/</guid>
-			<torrent xmlns="http://xmlns.ezrss.it/0.1/">
-				<contentLength>130800968</contentLength>
-				<infoHash>41E9A0D74DA0E419A3E2288F2C3470A40783A244</infoHash>
-				<magnetURI><![CDATA[magnet:?xt=urn:btih:41E9A0D74DA0E419A3E2288F2C3470A40783A244&dn=WebbyBoy+-+303+%28Funk%2C+HipHop%2C+Chill%29]]></magnetURI>
-			</torrent>
-		</item>
-		<item>
-			<title><![CDATA[Dana Winner - 2002 - Unforgettable Too DSM]]></title>
-			<link>magnet:?xt=urn:btih:3CF7C4D12B54E441DD8BCC4AEE0AB1A62E9287B4&dn=Dana+Winner+-+2002+-+Unforgettable+Too+DSM</link>
-			<comments>http://thepiratebay.se/torrent/7046633</comments>
-			<pubDate>Mon, 20 Feb 2012 21:29:56 +0100</pubDate>
-			<category domain="http://thepiratebay.se/browse/101"><![CDATA[Audio / Music]]></category>
-			<dc:creator><![CDATA[DeSmartlapMan]]></dc:creator>
-			<guid>http://thepiratebay.se/torrent/7046633/</guid>
-			<torrent xmlns="http://xmlns.ezrss.it/0.1/">
-				<contentLength>59613064</contentLength>
-				<infoHash>3CF7C4D12B54E441DD8BCC4AEE0AB1A62E9287B4</infoHash>
-				<magnetURI><![CDATA[magnet:?xt=urn:btih:3CF7C4D12B54E441DD8BCC4AEE0AB1A62E9287B4&dn=Dana+Winner+-+2002+-+Unforgettable+Too+DSM]]></magnetURI>
-			</torrent>
-		</item>
-		<item>
-			<title><![CDATA[RBD - Empezar Desde Cero (Fan Edition) 260 Kbs+]]></title>
-			<link>magnet:?xt=urn:btih:1C7C6A1B533A6BA09EDDD0AF38DC4C9938B55234&dn=RBD+-+Empezar+Desde+Cero+%28Fan+Edition%29+260+Kbs%2B</link>
-			<comments>http://thepiratebay.se/torrent/7046632</comments>
-			<pubDate>Mon, 20 Feb 2012 21:29:54 +0100</pubDate>
-			<category domain="http://thepiratebay.se/browse/102"><![CDATA[Audio / Audio books]]></category>
-			<dc:creator><![CDATA[Cyberele]]></dc:creator>
-			<guid>http://thepiratebay.se/torrent/7046632/</guid>
-			<torrent xmlns="http://xmlns.ezrss.it/0.1/">
-				<contentLength>124080788</contentLength>
-				<infoHash>1C7C6A1B533A6BA09EDDD0AF38DC4C9938B55234</infoHash>
-				<magnetURI><![CDATA[magnet:?xt=urn:btih:1C7C6A1B533A6BA09EDDD0AF38DC4C9938B55234&dn=RBD+-+Empezar+Desde+Cero+%28Fan+Edition%29+260+Kbs%2B]]></magnetURI>
-			</torrent>
-		</item>
-		<item>
-			<title><![CDATA[Hardstyle top 40 December 2011 3pp0 (unmixed)]]></title>
-			<link>magnet:?xt=urn:btih:3008D36C3483F60AB8C1E3770CA662C222FEB3AE&dn=Hardstyle+top+40+December+2011+3pp0+%28unmixed%29</link>
-			<comments>http://thepiratebay.se/torrent/7046631</comments>
-			<pubDate>Mon, 20 Feb 2012 21:29:18 +0100</pubDate>
-			<category domain="http://thepiratebay.se/browse/101"><![CDATA[Audio / Music]]></category>
-			<dc:creator><![CDATA[3pp0]]></dc:creator>
-			<guid>http://thepiratebay.se/torrent/7046631/</guid>
-			<torrent xmlns="http://xmlns.ezrss.it/0.1/">
-				<contentLength>513251906</contentLength>
-				<infoHash>3008D36C3483F60AB8C1E3770CA662C222FEB3AE</infoHash>
-				<magnetURI><![CDATA[magnet:?xt=urn:btih:3008D36C3483F60AB8C1E3770CA662C222FEB3AE&dn=Hardstyle+top+40+December+2011+3pp0+%28unmixed%29]]></magnetURI>
-			</torrent>
-		</item>
-		<item>
-			<title><![CDATA[Dana Winner - 2001 - Rainbows Of Love DSM]]></title>
-			<link>magnet:?xt=urn:btih:57C61F91329F1EE02334A4D8355D9FFFDD4381D7&dn=Dana+Winner+-+2001+-+Rainbows+Of+Love+DSM</link>
-			<comments>http://thepiratebay.se/torrent/7046620</comments>
-			<pubDate>Mon, 20 Feb 2012 21:26:19 +0100</pubDate>
-			<category domain="http://thepiratebay.se/browse/101"><![CDATA[Audio / Music]]></category>
-			<dc:creator><![CDATA[DeSmartlapMan]]></dc:creator>
-			<guid>http://thepiratebay.se/torrent/7046620/</guid>
-			<torrent xmlns="http://xmlns.ezrss.it/0.1/">
-				<contentLength>51358712</contentLength>
-				<infoHash>57C61F91329F1EE02334A4D8355D9FFFDD4381D7</infoHash>
-				<magnetURI><![CDATA[magnet:?xt=urn:btih:57C61F91329F1EE02334A4D8355D9FFFDD4381D7&dn=Dana+Winner+-+2001+-+Rainbows+Of+Love+DSM]]></magnetURI>
-			</torrent>
-		</item>
-		<item>
-			<title><![CDATA[Dana Winner - 2000 - Licht en Liefde DSM]]></title>
-			<link>magnet:?xt=urn:btih:A62225128DA2549DAD48476302B5B28985C42769&dn=Dana+Winner+-+2000+-+Licht+en+Liefde+DSM</link>
-			<comments>http://thepiratebay.se/torrent/7046608</comments>
-			<pubDate>Mon, 20 Feb 2012 21:21:41 +0100</pubDate>
-			<category domain="http://thepiratebay.se/browse/101"><![CDATA[Audio / Music]]></category>
-			<dc:creator><![CDATA[DeSmartlapMan]]></dc:creator>
-			<guid>http://thepiratebay.se/torrent/7046608/</guid>
-			<torrent xmlns="http://xmlns.ezrss.it/0.1/">
-				<contentLength>75953995</contentLength>
-				<infoHash>A62225128DA2549DAD48476302B5B28985C42769</infoHash>
-				<magnetURI><![CDATA[magnet:?xt=urn:btih:A62225128DA2549DAD48476302B5B28985C42769&dn=Dana+Winner+-+2000+-+Licht+en+Liefde+DSM]]></magnetURI>
-			</torrent>
-		</item>
-		<item>
-			<title><![CDATA[Tiesto - Club Life 255 (19-02-2012)]]></title>
-			<link>magnet:?xt=urn:btih:C1F7F6EFD685245E0FCF7B0615FFF758E75DEEFF&dn=Tiesto+-+Club+Life+255+%2819-02-2012%29</link>
-			<comments>http://thepiratebay.se/torrent/7046607</comments>
-			<pubDate>Mon, 20 Feb 2012 21:21:38 +0100</pubDate>
-			<category domain="http://thepiratebay.se/browse/101"><![CDATA[Audio / Music]]></category>
-			<dc:creator><![CDATA[mika7272]]></dc:creator>
-			<guid>http://thepiratebay.se/torrent/7046607/</guid>
-			<torrent xmlns="http://xmlns.ezrss.it/0.1/">
-				<contentLength>221047405</contentLength>
-				<infoHash>C1F7F6EFD685245E0FCF7B0615FFF758E75DEEFF</infoHash>
-				<magnetURI><![CDATA[magnet:?xt=urn:btih:C1F7F6EFD685245E0FCF7B0615FFF758E75DEEFF&dn=Tiesto+-+Club+Life+255+%2819-02-2012%29]]></magnetURI>
-			</torrent>
-		</item>
-		<item>
-			<title><![CDATA[Solid Base - 5 Albums, 11 Singles (1994-2002)]]></title>
-			<link>magnet:?xt=urn:btih:28A3FA5878BF6D1EC82ACE718356CE93B9443888&dn=Solid+Base+-+5+Albums%2C+11+Singles+%281994-2002%29</link>
-			<comments>http://thepiratebay.se/torrent/7046605</comments>
-			<pubDate>Mon, 20 Feb 2012 21:21:30 +0100</pubDate>
-			<category domain="http://thepiratebay.se/browse/104"><![CDATA[Audio / FLAC]]></category>
-			<dc:creator><![CDATA[tiran1976]]></dc:creator>
-			<guid>http://thepiratebay.se/torrent/7046605/</guid>
-			<torrent xmlns="http://xmlns.ezrss.it/0.1/">
-				<contentLength>4746959240</contentLength>
-				<infoHash>28A3FA5878BF6D1EC82ACE718356CE93B9443888</infoHash>
-				<magnetURI><![CDATA[magnet:?xt=urn:btih:28A3FA5878BF6D1EC82ACE718356CE93B9443888&dn=Solid+Base+-+5+Albums%2C+11+Singles+%281994-2002%29]]></magnetURI>
-			</torrent>
-		</item>
-		<item>
-			<title><![CDATA[THIS DATE IN HOWARD STERN HISTORY - CF128K - 02-20-12 [WDM]]]></title>
-			<link>magnet:?xt=urn:btih:465C2C62B82E33EBD804B08A3E400F178B47DEA1&dn=THIS+DATE+IN+HOWARD+STERN+HISTORY+-+CF128K+-+02-20-12+%5BWDM%5D</link>
-			<comments>http://thepiratebay.se/torrent/7046604</comments>
-			<pubDate>Mon, 20 Feb 2012 21:21:00 +0100</pubDate>
-			<category domain="http://thepiratebay.se/browse/199"><![CDATA[Audio / Other]]></category>
-			<dc:creator><![CDATA[wushdishmeen]]></dc:creator>
-			<guid>http://thepiratebay.se/torrent/7046604/</guid>
-			<torrent xmlns="http://xmlns.ezrss.it/0.1/">
-				<contentLength>288668290</contentLength>
-				<infoHash>465C2C62B82E33EBD804B08A3E400F178B47DEA1</infoHash>
-				<magnetURI><![CDATA[magnet:?xt=urn:btih:465C2C62B82E33EBD804B08A3E400F178B47DEA1&dn=THIS+DATE+IN+HOWARD+STERN+HISTORY+-+CF128K+-+02-20-12+%5BWDM%5D]]></magnetURI>
-			</torrent>
-		</item>
-		<item>
-			<title><![CDATA[THIS DATE IN HOWARD STERN HISTORY - CF64K - 02-20-12 [WDM]]]></title>
-			<link>magnet:?xt=urn:btih:AFFB307B27E5F5854DAFB33E6A8ECB87A5F3BDAF&dn=THIS+DATE+IN+HOWARD+STERN+HISTORY+-+CF64K+-+02-20-12+%5BWDM%5D</link>
-			<comments>http://thepiratebay.se/torrent/7046601</comments>
-			<pubDate>Mon, 20 Feb 2012 21:20:24 +0100</pubDate>
-			<category domain="http://thepiratebay.se/browse/199"><![CDATA[Audio / Other]]></category>
-			<dc:creator><![CDATA[wushdishmeen]]></dc:creator>
-			<guid>http://thepiratebay.se/torrent/7046601/</guid>
-			<torrent xmlns="http://xmlns.ezrss.it/0.1/">
-				<contentLength>144439968</contentLength>
-				<infoHash>AFFB307B27E5F5854DAFB33E6A8ECB87A5F3BDAF</infoHash>
-				<magnetURI><![CDATA[magnet:?xt=urn:btih:AFFB307B27E5F5854DAFB33E6A8ECB87A5F3BDAF&dn=THIS+DATE+IN+HOWARD+STERN+HISTORY+-+CF64K+-+02-20-12+%5BWDM%5D]]></magnetURI>
-			</torrent>
-		</item>
-		<item>
-			<title><![CDATA[[House] DJ Tumakov (Pacha Moscow) - Selection 24]]></title>
-			<link>magnet:?xt=urn:btih:DE1E7E0C011DF57A5BC389967EB01F4C9445DADC&dn=%5BHouse%5D+DJ+Tumakov+%28Pacha+Moscow%29+-+Selection+24</link>
-			<comments>http://thepiratebay.se/torrent/7046595</comments>
-			<pubDate>Mon, 20 Feb 2012 21:19:01 +0100</pubDate>
-			<category domain="http://thepiratebay.se/browse/101"><![CDATA[Audio / Music]]></category>
-			<dc:creator><![CDATA[promoparty]]></dc:creator>
-			<guid>http://thepiratebay.se/torrent/7046595/</guid>
-			<torrent xmlns="http://xmlns.ezrss.it/0.1/">
-				<contentLength>144682586</contentLength>
-				<infoHash>DE1E7E0C011DF57A5BC389967EB01F4C9445DADC</infoHash>
-				<magnetURI><![CDATA[magnet:?xt=urn:btih:DE1E7E0C011DF57A5BC389967EB01F4C9445DADC&dn=%5BHouse%5D+DJ+Tumakov+%28Pacha+Moscow%29+-+Selection+24]]></magnetURI>
-			</torrent>
-		</item>
-		<item>
-			<title><![CDATA[The Jimmy Bowskill Band - Back Number (2012) [mp3@320]]]></title>
-			<link>magnet:?xt=urn:btih:20991CD3B70FA937AA53821967731821F0A40811&dn=The+Jimmy+Bowskill+Band+-+Back+Number+%282012%29+%5Bmp3%40320%5D</link>
-			<comments>http://thepiratebay.se/torrent/7046591</comments>
-			<pubDate>Mon, 20 Feb 2012 21:17:30 +0100</pubDate>
-			<category domain="http://thepiratebay.se/browse/101"><![CDATA[Audio / Music]]></category>
-			<dc:creator><![CDATA[zibbik]]></dc:creator>
-			<guid>http://thepiratebay.se/torrent/7046591/</guid>
-			<torrent xmlns="http://xmlns.ezrss.it/0.1/">
-				<contentLength>116141099</contentLength>
-				<infoHash>20991CD3B70FA937AA53821967731821F0A40811</infoHash>
-				<magnetURI><![CDATA[magnet:?xt=urn:btih:20991CD3B70FA937AA53821967731821F0A40811&dn=The+Jimmy+Bowskill+Band+-+Back+Number+%282012%29+%5Bmp3%40320%5D]]></magnetURI>
-			</torrent>
-		</item>
-		<item>
-			<title><![CDATA[Silent Kingdom - Path To Oblivion (2011) [mp3@320]]]></title>
-			<link>magnet:?xt=urn:btih:8647DBDF5A39C59FA835A54D59A7B47E93BF87E8&dn=Silent+Kingdom+-+Path+To+Oblivion+%282011%29+%5Bmp3%40320%5D</link>
-			<comments>http://thepiratebay.se/torrent/7046590</comments>
-			<pubDate>Mon, 20 Feb 2012 21:16:33 +0100</pubDate>
-			<category domain="http://thepiratebay.se/browse/101"><![CDATA[Audio / Music]]></category>
-			<dc:creator><![CDATA[zibbik]]></dc:creator>
-			<guid>http://thepiratebay.se/torrent/7046590/</guid>
-			<torrent xmlns="http://xmlns.ezrss.it/0.1/">
-				<contentLength>89279565</contentLength>
-				<infoHash>8647DBDF5A39C59FA835A54D59A7B47E93BF87E8</infoHash>
-				<magnetURI><![CDATA[magnet:?xt=urn:btih:8647DBDF5A39C59FA835A54D59A7B47E93BF87E8&dn=Silent+Kingdom+-+Path+To+Oblivion+%282011%29+%5Bmp3%40320%5D]]></magnetURI>
-			</torrent>
-		</item>
-		<item>
-			<title><![CDATA[Lorenguard - Eve Of Corruption: The Days Of Astasia, Part 1 (201]]></title>
-			<link>magnet:?xt=urn:btih:49E0AC3DDE5DC4BC4F40D58CA64F6C1C45C1BEE5&dn=Lorenguard+-+Eve+Of+Corruption%3A+The+Days+Of+Astasia%2C+Part+1+%28201</link>
-			<comments>http://thepiratebay.se/torrent/7046589</comments>
-			<pubDate>Mon, 20 Feb 2012 21:15:51 +0100</pubDate>
-			<category domain="http://thepiratebay.se/browse/101"><![CDATA[Audio / Music]]></category>
-			<dc:creator><![CDATA[zibbik]]></dc:creator>
-			<guid>http://thepiratebay.se/torrent/7046589/</guid>
-			<torrent xmlns="http://xmlns.ezrss.it/0.1/">
-				<contentLength>153858101</contentLength>
-				<infoHash>49E0AC3DDE5DC4BC4F40D58CA64F6C1C45C1BEE5</infoHash>
-				<magnetURI><![CDATA[magnet:?xt=urn:btih:49E0AC3DDE5DC4BC4F40D58CA64F6C1C45C1BEE5&dn=Lorenguard+-+Eve+Of+Corruption%3A+The+Days+Of+Astasia%2C+Part+1+%28201]]></magnetURI>
-			</torrent>
-		</item>
-		<item>
-			<title><![CDATA[In Loving Memory - Negation Of Life (2011) [mp3@320]]]></title>
-			<link>magnet:?xt=urn:btih:3C2FB2C7A41E52FEB9679EFE04E42A20D5D7E886&dn=In+Loving+Memory+-+Negation+Of+Life+%282011%29+%5Bmp3%40320%5D</link>
-			<comments>http://thepiratebay.se/torrent/7046588</comments>
-			<pubDate>Mon, 20 Feb 2012 21:15:07 +0100</pubDate>
-			<category domain="http://thepiratebay.se/browse/101"><![CDATA[Audio / Music]]></category>
-			<dc:creator><![CDATA[zibbik]]></dc:creator>
-			<guid>http://thepiratebay.se/torrent/7046588/</guid>
-			<torrent xmlns="http://xmlns.ezrss.it/0.1/">
-				<contentLength>153557304</contentLength>
-				<infoHash>3C2FB2C7A41E52FEB9679EFE04E42A20D5D7E886</infoHash>
-				<magnetURI><![CDATA[magnet:?xt=urn:btih:3C2FB2C7A41E52FEB9679EFE04E42A20D5D7E886&dn=In+Loving+Memory+-+Negation+Of+Life+%282011%29+%5Bmp3%40320%5D]]></magnetURI>
-			</torrent>
-		</item>
-		<item>
-			<title><![CDATA[Hooded Priest - Devil Worship Reckoning (2010) [mp3@320]]]></title>
-			<link>magnet:?xt=urn:btih:2132CB3304591B4552984B7B4494408B8B128855&dn=Hooded+Priest+-+Devil+Worship+Reckoning+%282010%29+%5Bmp3%40320%5D</link>
-			<comments>http://thepiratebay.se/torrent/7046587</comments>
-			<pubDate>Mon, 20 Feb 2012 21:14:14 +0100</pubDate>
-			<category domain="http://thepiratebay.se/browse/101"><![CDATA[Audio / Music]]></category>
-			<dc:creator><![CDATA[zibbik]]></dc:creator>
-			<guid>http://thepiratebay.se/torrent/7046587/</guid>
-			<torrent xmlns="http://xmlns.ezrss.it/0.1/">
-				<contentLength>125926739</contentLength>
-				<infoHash>2132CB3304591B4552984B7B4494408B8B128855</infoHash>
-				<magnetURI><![CDATA[magnet:?xt=urn:btih:2132CB3304591B4552984B7B4494408B8B128855&dn=Hooded+Priest+-+Devil+Worship+Reckoning+%282010%29+%5Bmp3%40320%5D]]></magnetURI>
-			</torrent>
-		</item>
-		<item>
-			<title><![CDATA[Hands Of Orlac - Hands Of Orlac (2011) [mp3@320]]]></title>
-			<link>magnet:?xt=urn:btih:EB7EF537601943A77D7851A0794E3CE7098F385F&dn=Hands+Of+Orlac+-+Hands+Of+Orlac+%282011%29+%5Bmp3%40320%5D</link>
-			<comments>http://thepiratebay.se/torrent/7046585</comments>
-			<pubDate>Mon, 20 Feb 2012 21:12:23 +0100</pubDate>
-			<category domain="http://thepiratebay.se/browse/101"><![CDATA[Audio / Music]]></category>
-			<dc:creator><![CDATA[zibbik]]></dc:creator>
-			<guid>http://thepiratebay.se/torrent/7046585/</guid>
-			<torrent xmlns="http://xmlns.ezrss.it/0.1/">
-				<contentLength>108265898</contentLength>
-				<infoHash>EB7EF537601943A77D7851A0794E3CE7098F385F</infoHash>
-				<magnetURI><![CDATA[magnet:?xt=urn:btih:EB7EF537601943A77D7851A0794E3CE7098F385F&dn=Hands+Of+Orlac+-+Hands+Of+Orlac+%282011%29+%5Bmp3%40320%5D]]></magnetURI>
-			</torrent>
-		</item>
-		<item>
-			<title><![CDATA[[House] DJ Favorite - February Promo 2012 Mixtape]]></title>
-			<link>magnet:?xt=urn:btih:4AC1E4648A5E423937964F8FA27850C987E761ED&dn=%5BHouse%5D+DJ+Favorite+-+February+Promo+2012+Mixtape</link>
-			<comments>http://thepiratebay.se/torrent/7046579</comments>
-			<pubDate>Mon, 20 Feb 2012 21:07:09 +0100</pubDate>
-			<category domain="http://thepiratebay.se/browse/101"><![CDATA[Audio / Music]]></category>
-			<dc:creator><![CDATA[promoparty]]></dc:creator>
-			<guid>http://thepiratebay.se/torrent/7046579/</guid>
-			<torrent xmlns="http://xmlns.ezrss.it/0.1/">
-				<contentLength>173593720</contentLength>
-				<infoHash>4AC1E4648A5E423937964F8FA27850C987E761ED</infoHash>
-				<magnetURI><![CDATA[magnet:?xt=urn:btih:4AC1E4648A5E423937964F8FA27850C987E761ED&dn=%5BHouse%5D+DJ+Favorite+-+February+Promo+2012+Mixtape]]></magnetURI>
-			</torrent>
-		</item>
-		<item>
-			<title><![CDATA[L.S.G. - 1995 - Rendezvous In Outer Space [320K/CBR]]]></title>
-			<link>magnet:?xt=urn:btih:777B3A92D303BCB2F914C0683756384623ECE16C&dn=L.S.G.+-+1995+-+Rendezvous+In+Outer+Space+%5B320K%2FCBR%5D</link>
-			<comments>http://thepiratebay.se/torrent/7046575</comments>
-			<pubDate>Mon, 20 Feb 2012 21:04:43 +0100</pubDate>
-			<category domain="http://thepiratebay.se/browse/199"><![CDATA[Audio / Other]]></category>
-			<dc:creator><![CDATA[_F1_]]></dc:creator>
-			<guid>http://thepiratebay.se/torrent/7046575/</guid>
-			<torrent xmlns="http://xmlns.ezrss.it/0.1/">
-				<contentLength>150622967</contentLength>
-				<infoHash>777B3A92D303BCB2F914C0683756384623ECE16C</infoHash>
-				<magnetURI><![CDATA[magnet:?xt=urn:btih:777B3A92D303BCB2F914C0683756384623ECE16C&dn=L.S.G.+-+1995+-+Rendezvous+In+Outer+Space+%5B320K%2FCBR%5D]]></magnetURI>
-			</torrent>
-		</item>
-		<item>
-			<title><![CDATA[Queen - Night at the Opera [1975] 1993 [EAC - FLAC](oan) MFSL]]></title>
-			<link>magnet:?xt=urn:btih:B0A422E26072B66386A93092ED3FC059C19FE4CF&dn=Queen+-+Night+at+the+Opera+%5B1975%5D+1993+%5BEAC+-+FLAC%5D%28oan%29+MFSL</link>
-			<comments>http://thepiratebay.se/torrent/7046569</comments>
-			<pubDate>Mon, 20 Feb 2012 20:59:57 +0100</pubDate>
-			<category domain="http://thepiratebay.se/browse/104"><![CDATA[Audio / FLAC]]></category>
-			<dc:creator><![CDATA[oneanight]]></dc:creator>
-			<guid>http://thepiratebay.se/torrent/7046569/</guid>
-			<torrent xmlns="http://xmlns.ezrss.it/0.1/">
-				<contentLength>305014033</contentLength>
-				<infoHash>B0A422E26072B66386A93092ED3FC059C19FE4CF</infoHash>
-				<magnetURI><![CDATA[magnet:?xt=urn:btih:B0A422E26072B66386A93092ED3FC059C19FE4CF&dn=Queen+-+Night+at+the+Opera+%5B1975%5D+1993+%5BEAC+-+FLAC%5D%28oan%29+MFSL]]></magnetURI>
-			</torrent>
-		</item>
-		<item>
-			<title><![CDATA[blessthefall Discography]]></title>
-			<link>magnet:?xt=urn:btih:5772778A962849737FE0D990928D0EE302CABF8A&dn=blessthefall+Discography</link>
-			<comments>http://thepiratebay.se/torrent/7046562</comments>
-			<pubDate>Mon, 20 Feb 2012 20:57:59 +0100</pubDate>
-			<category domain="http://thepiratebay.se/browse/199"><![CDATA[Audio / Other]]></category>
-			<dc:creator><![CDATA[UnderworldDemon666]]></dc:creator>
-			<guid>http://thepiratebay.se/torrent/7046562/</guid>
-			<torrent xmlns="http://xmlns.ezrss.it/0.1/">
-				<contentLength>340996183</contentLength>
-				<infoHash>5772778A962849737FE0D990928D0EE302CABF8A</infoHash>
-				<magnetURI><![CDATA[magnet:?xt=urn:btih:5772778A962849737FE0D990928D0EE302CABF8A&dn=blessthefall+Discography]]></magnetURI>
-			</torrent>
-		</item>
-		<item>
-			<title><![CDATA[Tequila Baby]]></title>
-			<link>magnet:?xt=urn:btih:525A1CF011F38A5E7C82293E6D15923716A8AA73&dn=Tequila+Baby</link>
-			<comments>http://thepiratebay.se/torrent/7046558</comments>
-			<pubDate>Mon, 20 Feb 2012 20:57:01 +0100</pubDate>
-			<category domain="http://thepiratebay.se/browse/101"><![CDATA[Audio / Music]]></category>
-			<dc:creator><![CDATA[meganaje]]></dc:creator>
-			<guid>http://thepiratebay.se/torrent/7046558/</guid>
-			<torrent xmlns="http://xmlns.ezrss.it/0.1/">
-				<contentLength>471508557</contentLength>
-				<infoHash>525A1CF011F38A5E7C82293E6D15923716A8AA73</infoHash>
-				<magnetURI><![CDATA[magnet:?xt=urn:btih:525A1CF011F38A5E7C82293E6D15923716A8AA73&dn=Tequila+Baby]]></magnetURI>
-			</torrent>
-		</item>
-		<item>
-			<title><![CDATA[The Rush Limbaugh Show 20-Feb-12 CF mp3 48K Mon]]></title>
-			<link>magnet:?xt=urn:btih:EBE04AE06872CCF05957D79BF9EFC9C0995E43AD&dn=The+Rush+Limbaugh+Show+20-Feb-12+CF+mp3+48K+Mon</link>
-			<comments>http://thepiratebay.se/torrent/7046533</comments>
-			<pubDate>Mon, 20 Feb 2012 20:36:09 +0100</pubDate>
-			<category domain="http://thepiratebay.se/browse/199"><![CDATA[Audio / Other]]></category>
-			<dc:creator><![CDATA[Annoyme]]></dc:creator>
-			<guid>http://thepiratebay.se/torrent/7046533/</guid>
-			<torrent xmlns="http://xmlns.ezrss.it/0.1/">
-				<contentLength>39727261</contentLength>
-				<infoHash>EBE04AE06872CCF05957D79BF9EFC9C0995E43AD</infoHash>
-				<magnetURI><![CDATA[magnet:?xt=urn:btih:EBE04AE06872CCF05957D79BF9EFC9C0995E43AD&dn=The+Rush+Limbaugh+Show+20-Feb-12+CF+mp3+48K+Mon]]></magnetURI>
-			</torrent>
-		</item>
-		<item>
-			<title><![CDATA[[House] BLUR vs. Nicky Romero - Song 2louse (Alexey Romeo WITH L]]></title>
-			<link>magnet:?xt=urn:btih:1354EC99D942EDC2F852557493C2B23B87623DA5&dn=%5BHouse%5D+BLUR+vs.+Nicky+Romero+-+Song+2louse+%28Alexey+Romeo+WITH+L</link>
-			<comments>http://thepiratebay.se/torrent/7046530</comments>
-			<pubDate>Mon, 20 Feb 2012 20:33:17 +0100</pubDate>
-			<category domain="http://thepiratebay.se/browse/101"><![CDATA[Audio / Music]]></category>
-			<dc:creator><![CDATA[promoparty]]></dc:creator>
-			<guid>http://thepiratebay.se/torrent/7046530/</guid>
-			<torrent xmlns="http://xmlns.ezrss.it/0.1/">
-				<contentLength>14931509</contentLength>
-				<infoHash>1354EC99D942EDC2F852557493C2B23B87623DA5</infoHash>
-				<magnetURI><![CDATA[magnet:?xt=urn:btih:1354EC99D942EDC2F852557493C2B23B87623DA5&dn=%5BHouse%5D+BLUR+vs.+Nicky+Romero+-+Song+2louse+%28Alexey+Romeo+WITH+L]]></magnetURI>
-			</torrent>
-		</item>
-		<item>
-			<title><![CDATA[Lana Del Rey (2011-2012) mp3]]></title>
-			<link>magnet:?xt=urn:btih:8393466519D8AE542ED09A2C74B6F0D84C4A99CD&dn=Lana+Del+Rey+%282011-2012%29+mp3</link>
-			<comments>http://thepiratebay.se/torrent/7046522</comments>
-			<pubDate>Mon, 20 Feb 2012 20:18:17 +0100</pubDate>
-			<category domain="http://thepiratebay.se/browse/101"><![CDATA[Audio / Music]]></category>
-			<dc:creator><![CDATA[tagorella74]]></dc:creator>
-			<guid>http://thepiratebay.se/torrent/7046522/</guid>
-			<torrent xmlns="http://xmlns.ezrss.it/0.1/">
-				<contentLength>109493282</contentLength>
-				<infoHash>8393466519D8AE542ED09A2C74B6F0D84C4A99CD</infoHash>
-				<magnetURI><![CDATA[magnet:?xt=urn:btih:8393466519D8AE542ED09A2C74B6F0D84C4A99CD&dn=Lana+Del+Rey+%282011-2012%29+mp3]]></magnetURI>
-			</torrent>
-		</item>
-		<item>
-			<title><![CDATA[Dangerous Seed Vertiphon Remaster MP3]]></title>
-			<link>magnet:?xt=urn:btih:CBE4E2F21D18274A0EB3CEA29D28E662E119E9CD&dn=Dangerous+Seed+Vertiphon+Remaster+MP3</link>
-			<comments>http://thepiratebay.se/torrent/7046513</comments>
-			<pubDate>Mon, 20 Feb 2012 19:39:30 +0100</pubDate>
-			<category domain="http://thepiratebay.se/browse/101"><![CDATA[Audio / Music]]></category>
-			<dc:creator><![CDATA[Vertiphon25]]></dc:creator>
-			<guid>http://thepiratebay.se/torrent/7046513/</guid>
-			<torrent xmlns="http://xmlns.ezrss.it/0.1/">
-				<contentLength>71521086</contentLength>
-				<infoHash>CBE4E2F21D18274A0EB3CEA29D28E662E119E9CD</infoHash>
-				<magnetURI><![CDATA[magnet:?xt=urn:btih:CBE4E2F21D18274A0EB3CEA29D28E662E119E9CD&dn=Dangerous+Seed+Vertiphon+Remaster+MP3]]></magnetURI>
-			</torrent>
-		</item>
-		<item>
-			<title><![CDATA[Dangerous Seed Vertiphon Remaster FLAC]]></title>
-			<link>magnet:?xt=urn:btih:BD905FBCFC53892BAC9187FEF3D1B1FE37E6C8BD&dn=Dangerous+Seed+Vertiphon+Remaster+FLAC</link>
-			<comments>http://thepiratebay.se/torrent/7046511</comments>
-			<pubDate>Mon, 20 Feb 2012 19:34:25 +0100</pubDate>
-			<category domain="http://thepiratebay.se/browse/104"><![CDATA[Audio / FLAC]]></category>
-			<dc:creator><![CDATA[Vertiphon25]]></dc:creator>
-			<guid>http://thepiratebay.se/torrent/7046511/</guid>
-			<torrent xmlns="http://xmlns.ezrss.it/0.1/">
-				<contentLength>289821122</contentLength>
-				<infoHash>BD905FBCFC53892BAC9187FEF3D1B1FE37E6C8BD</infoHash>
-				<magnetURI><![CDATA[magnet:?xt=urn:btih:BD905FBCFC53892BAC9187FEF3D1B1FE37E6C8BD&dn=Dangerous+Seed+Vertiphon+Remaster+FLAC]]></magnetURI>
-			</torrent>
-		</item>
-		<item>
-			<title><![CDATA[Band of Skulls - Sweet Sour (2012) MP3]]></title>
-			<link>magnet:?xt=urn:btih:C8B6079F9A322C55DE66FD99B8C62D9CAF083BEA&dn=Band+of+Skulls+-+Sweet+Sour+%282012%29+MP3</link>
-			<comments>http://thepiratebay.se/torrent/7046493</comments>
-			<pubDate>Mon, 20 Feb 2012 18:23:08 +0100</pubDate>
-			<category domain="http://thepiratebay.se/browse/101"><![CDATA[Audio / Music]]></category>
-			<dc:creator><![CDATA[Beolab1700]]></dc:creator>
-			<guid>http://thepiratebay.se/torrent/7046493/</guid>
-			<torrent xmlns="http://xmlns.ezrss.it/0.1/">
-				<contentLength>80800062</contentLength>
-				<infoHash>C8B6079F9A322C55DE66FD99B8C62D9CAF083BEA</infoHash>
-				<magnetURI><![CDATA[magnet:?xt=urn:btih:C8B6079F9A322C55DE66FD99B8C62D9CAF083BEA&dn=Band+of+Skulls+-+Sweet+Sour+%282012%29+MP3]]></magnetURI>
-			</torrent>
-		</item>
-		<item>
-			<title><![CDATA[The Who - Join Together (Live) mp3 peaSoup]]></title>
-			<link>magnet:?xt=urn:btih:D9B96D16625CCC021D6F3BD35582EC1782E84C21&dn=The+Who+-+Join+Together+%28Live%29+mp3+peaSoup</link>
-			<comments>http://thepiratebay.se/torrent/7046489</comments>
-			<pubDate>Mon, 20 Feb 2012 18:03:29 +0100</pubDate>
-			<category domain="http://thepiratebay.se/browse/101"><![CDATA[Audio / Music]]></category>
-			<dc:creator><![CDATA[peaSoup]]></dc:creator>
-			<guid>http://thepiratebay.se/torrent/7046489/</guid>
-			<torrent xmlns="http://xmlns.ezrss.it/0.1/">
-				<contentLength>303387657</contentLength>
-				<infoHash>D9B96D16625CCC021D6F3BD35582EC1782E84C21</infoHash>
-				<magnetURI><![CDATA[magnet:?xt=urn:btih:D9B96D16625CCC021D6F3BD35582EC1782E84C21&dn=The+Who+-+Join+Together+%28Live%29+mp3+peaSoup]]></magnetURI>
-			</torrent>
-		</item>
-		<item>
-			<title><![CDATA[VA - Pop Hits - Vol. 1 - [TFM]]]></title>
-			<link>magnet:?xt=urn:btih:09155BA59695DDDE3EADD69C3408D2DB93C5E243&dn=VA+-+Pop+Hits+-+Vol.+1+-+%5BTFM%5D</link>
-			<comments>http://thepiratebay.se/torrent/7046485</comments>
-			<pubDate>Mon, 20 Feb 2012 17:55:15 +0100</pubDate>
-			<category domain="http://thepiratebay.se/browse/104"><![CDATA[Audio / FLAC]]></category>
-			<dc:creator><![CDATA[tifon]]></dc:creator>
-			<guid>http://thepiratebay.se/torrent/7046485/</guid>
-			<torrent xmlns="http://xmlns.ezrss.it/0.1/">
-				<contentLength>358563277</contentLength>
-				<infoHash>09155BA59695DDDE3EADD69C3408D2DB93C5E243</infoHash>
-				<magnetURI><![CDATA[magnet:?xt=urn:btih:09155BA59695DDDE3EADD69C3408D2DB93C5E243&dn=VA+-+Pop+Hits+-+Vol.+1+-+%5BTFM%5D]]></magnetURI>
-			</torrent>
-		</item>
-	</channel>
-</rss>
\ No newline at end of file
diff -ruN libtorrent-libtorrent_0_16_5/test/test_tracker.cpp libtorrent/test/test_tracker.cpp
--- libtorrent-libtorrent_0_16_5/test/test_tracker.cpp	2012-10-23 12:23:09.000000000 +0800
+++ libtorrent/test/test_tracker.cpp	1970-01-01 08:00:00.000000000 +0800
@@ -1,137 +0,0 @@
-#include "test.hpp"
-#include "setup_transfer.hpp"
-#include "libtorrent/alert.hpp"
-#include "libtorrent/session.hpp"
-#include "libtorrent/error_code.hpp"
-
-#include <fstream>
-
-using namespace libtorrent;
-
-int test_main()
-{
-	int http_port = start_web_server();
-	int udp_port = start_tracker();
-
-	int prev_udp_announces = g_udp_tracker_requests;
-	int prev_http_announces = g_http_tracker_requests;
-
-	int const alert_mask = alert::all_categories
-		& ~alert::progress_notification
-		& ~alert::stats_notification;
-
-	session* s = new libtorrent::session(fingerprint("LT", 0, 1, 0, 0), std::make_pair(48875, 49800), "0.0.0.0", 0, alert_mask);
-
-	session_settings sett;
-	sett.half_open_limit = 1;
-	sett.announce_to_all_trackers = true;
-	sett.announce_to_all_tiers = true;
-	s->set_settings(sett);
-
-	error_code ec;
-	create_directory("tmp1_tracker", ec);
-	std::ofstream file(combine_path("tmp1_tracker", "temporary").c_str());
-	boost::intrusive_ptr<torrent_info> t = ::create_torrent(&file, 16 * 1024, 13, false);
-	file.close();
-
-	char tracker_url[200];
-	snprintf(tracker_url, sizeof(tracker_url), "http://127.0.0.1:%d/announce", http_port);
-	t->add_tracker(tracker_url, 0);
-
-	snprintf(tracker_url, sizeof(tracker_url), "udp://127.0.0.1:%d/announce", udp_port);
-	t->add_tracker(tracker_url, 1);
-
-	add_torrent_params addp;
-	addp.flags &= ~add_torrent_params::flag_paused;
-	addp.flags &= ~add_torrent_params::flag_auto_managed;
-	addp.ti = t;
-	addp.save_path = "tmp1_tracker";
-	torrent_handle h = s->add_torrent(addp);
-
-	for (int i = 0; i < 100; ++i)
-	{
-		print_alerts(*s, "s");
-		test_sleep(100);
-		if (g_udp_tracker_requests == prev_udp_announces + 1
-			&& g_http_tracker_requests == prev_http_announces + 1) break;
-	}
-
-	// we should have announced to the tracker by now
-	TEST_EQUAL(g_udp_tracker_requests, prev_udp_announces + 1);
-	TEST_EQUAL(g_http_tracker_requests, prev_http_announces + 1);
-
-	fprintf(stderr, "destructing session\n");
-	delete s;
-	fprintf(stderr, "done\n");
-
-	// we should have announced the stopped event now
-	TEST_EQUAL(g_udp_tracker_requests, prev_udp_announces + 2);
-	TEST_EQUAL(g_http_tracker_requests, prev_http_announces + 2);
-
-	// ========================================
-	// test that we move on to try the next tier if the first one fails
-	// ========================================
-
-	s = new libtorrent::session(fingerprint("LT", 0, 1, 0, 0), std::make_pair(39775, 39800), "0.0.0.0", 0, alert_mask);
-
-	sett.half_open_limit = 1;
-	sett.announce_to_all_trackers = true;
-	sett.announce_to_all_tiers = false;
-	sett.tracker_completion_timeout = 2;
-	sett.tracker_receive_timeout = 1;
-	s->set_settings(sett);
-
-	create_directory("tmp2_tracker", ec);
-	file.open(combine_path("tmp2_tracker", "temporary").c_str());
-	t = ::create_torrent(&file, 16 * 1024, 13, false);
-	file.close();
-
-	// this should fail
-	snprintf(tracker_url, sizeof(tracker_url), "udp://www.google.com:80/announce");
-	t->add_tracker(tracker_url, 0);
-
-	// and this should fail
-	snprintf(tracker_url, sizeof(tracker_url), "http://127.0.0.2:3/announce");
-	t->add_tracker(tracker_url, 1);
-
-	// this should be announced to
-	// udp trackers are prioritized if they're on the same host as an http one
-	// so this must be before the http one on 127.0.0.1
-	snprintf(tracker_url, sizeof(tracker_url), "udp://127.0.0.1:%d/announce", udp_port);
-	t->add_tracker(tracker_url, 2);
-
-	// and this should not be announced to (since the one before it succeeded)
-	snprintf(tracker_url, sizeof(tracker_url), "http://127.0.0.1:%d/announce", http_port);
-	t->add_tracker(tracker_url, 3);
-
-	prev_udp_announces = g_udp_tracker_requests;
-	prev_http_announces = g_http_tracker_requests;
-
-	addp.flags &= ~add_torrent_params::flag_paused;
-	addp.flags &= ~add_torrent_params::flag_auto_managed;
-	addp.ti = t;
-	addp.save_path = "tmp2_tracker";
-	h = s->add_torrent(addp);
-
-	for (int i = 0; i < 10; ++i)
-	{
-		print_alerts(*s, "s");
-		test_sleep(1000);
-		if (g_udp_tracker_requests == prev_udp_announces + 1) break;
-	}
-
-	test_sleep(1000);
-
-	TEST_EQUAL(g_udp_tracker_requests, prev_udp_announces + 1);
-	TEST_EQUAL(g_http_tracker_requests, prev_http_announces);
-
-	fprintf(stderr, "destructing session\n");
-	delete s;
-	fprintf(stderr, "done\n");
-
-	stop_tracker();
-	stop_web_server();
-
-	return 0;
-}
-
